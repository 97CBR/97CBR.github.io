<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>二十五岁生日快乐</title>
    <url>/archives/730b2352.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="生日快乐"><a class="markdownIt-Anchor" href="#生日快乐"></a> 生日快乐</h1>
<p>今天生日，已然快乐，大早上就收到了家人们与朋友们的祝福与红包，下班也跟我的好朋友们一起吃饭聊天，还美美的一起吃了个蛋糕，岂不乐哉~<br />
又一年啦，走进25岁，不知不觉已经走过了两轮生肖。今年无论是工作还是生活上也继续承蒙大家的陪伴与照顾，十分感谢大家。<br />
照例的话年终总结是跟生日一起发的，但是今年的内容比较多，年终总结还在写着，长篇大论就留到那篇文章里面去了，总之就是许许多多的事与物，到时有兴趣看我絮絮叨叨的就再看吧，再次感谢大家的陪伴与帮助，让我们一起继续前行。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301052228658.png" alt="image-20230105222828678" /></p>
]]></content>
      <categories>
        <category>小日志</category>
      </categories>
      <tags>
        <tag>小日志</tag>
      </tags>
  </entry>
  <entry>
    <title>二十四岁生日快乐</title>
    <url>/archives/bbb60b30.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="生日快乐"><a class="markdownIt-Anchor" href="#生日快乐"></a> 生日快乐</h2>
<p>CBR~生日快乐，这是今年我想对自己说的一句生日祝福。当然，第一句生日祝福是来自我可爱的女朋友的，今年收到了她的护肤品礼物，提示着我那被工作逐渐摧残的容颜也是得稍微照顾一下下的。</p>
<p>因为生日总是接近年末，索性就不将年终总结和生日分开写了，一起写了吧。看看今年的自己，做了啥，发生了啥，现在是什么状态，以后想做什么。</p>
<p>今年是第一个完全的工作年。一年的工作和生活下来，给了我不少的变化，就让我在这难得的日子里去好好回忆总结一下今年吧。回首过往，展望未来。</p>
<h2 id="过去的一年发生了什么"><a class="markdownIt-Anchor" href="#过去的一年发生了什么"></a> 过去的一年发生了什么</h2>
<p>过去的一年，发生了不少事情，包括几件大点的事</p>
<ul>
<li>跳槽</li>
<li>陪女朋友毕业加旅行</li>
<li>送了自己一个生日礼物</li>
<li>领猫猫十一回来养</li>
</ul>
<h3 id="跳槽华为"><a class="markdownIt-Anchor" href="#跳槽华为"></a> 跳槽华为</h3>
<p>对于一个人的职业发展来说，跳槽，可以说是一件人生大事也不为过。人生，工作，一辈子能跳槽几次？</p>
<p>我第一次参加真正意义上的实习，参与到一个大型的系统上进行工作是大三的时候，到华为的骨干路由器部门中的BSP的开发小组上任职通用软件开发工程师。那段时间时常跟同住的一位专家上下班，两个月，没有一天是晚上六点就下班，都陪着他们去开发，迁移版本，修复问题，最早都是晚上八点半下班，时常十点十一点才下班，讲真，很累，以至于最后的快结束实习那周，都似乎有点上班恐惧症了，但是，大量的工作和学习能让我快速成长，了解了一个大型的系统成百上千的人怎么去为一个项目努力。这也为我后续跳槽目标选作华为打了一份基础吧。</p>
<p>上一家的单位是在咱们的 自贸区，海南。从事信息安全相关的软件开发，哈哈哈，用到技术相对就比较杂了，因为搞信息安全的同学都知道，搞安全的人那必须懂各种乱七八糟的东西，多而杂，因为，你并不能预判出别人会在什么地方使用什么技术对你的系统进行攻击，所以我们就得了解，知道各种各样的东西。个人感觉在上一家单位的工作情况算是比较出色的，可以快速上手并帮助项目组完成解决很多问题，小些的项目也都可以出色的完成。（可能说的比较黄婆卖瓜，但是事实就是如此）</p>
<p>促使跳槽的因素说来也很简单，前景和待遇，“面向工资编程”，很多人都曾经这样调侃过，这样说的很功利，格局往大了说就是太物质了就会肤浅了，没法凭借着一份对技术的热忱和热爱来让自己成为一个技术大牛，专家。但是你不能否认丰厚的物质基础在现代社会中给我带来的一份保障是多么的让人减少焦虑。</p>
<p>在年后便参加了华为的社招，三轮面试，在这里十分感谢我现在导师牛总，作为导师，作为专家，他都是十分出色的，让我尊敬的。</p>
<h3 id="陪女朋友毕业加旅行"><a class="markdownIt-Anchor" href="#陪女朋友毕业加旅行"></a> 陪女朋友毕业加旅行</h3>
<p>毕业季在六七月份，为此向公司请假了两天去陪她毕业。因为她是我大学到现在除了家人外最最最重要的人了，不愿意错过这种对她这么有意义，里程碑式的一个事件。具体可以查看  <a href="https://www.marxcbr.cn/archives/14ec9c68.html">毕业之旅</a> 这篇文章。</p>
<h2 id="送了自己一个生日礼物"><a class="markdownIt-Anchor" href="#送了自己一个生日礼物"></a> 送了自己一个生日礼物</h2>
<p>讲真，往前二十多岁，自己都没有在自己生日的时候给自己送过礼物。生日嘛，普普通通的，该干嘛干嘛，不整这么多花里胡哨的。能收到同学们送的祝福就已经很快乐了，更别说送一些小礼物的同学了，那简直是喜出望外啊。哈哈哈，好歹有人还知道你的生日嘛，咱的期望不能挂这么高。</p>
<p>回到送自己生日礼物这件事上，我送了自己一个什么礼物呢？</p>
<div class="note success modern"><ul>
<li>一部无反相机（SONY A7R2 + 28-70 OSS 镜头）</li>
</ul>
</div>
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202201151902068.jpg" alt="a7r2" style="zoom:50%;" />
<p>为啥想说送自己一个相机呢，最初买相机的想法应该是可以追溯到初三的那个傍晚，在晚读的时候，被天边的霞光留下了深刻印象吧，那时想着，有个相机可以将这些画面拍下来就太好了。当然，现在送自己一个相机不是仅仅为了圆自己少时的一个愿望，而是希望可以给自己的生活带来多一些改变，一些变化。讲得通俗可以说是用来记录生活，讲得高雅就是提高自己的审美。但是只有我自己最清楚，是希望可以给自己带来多一些变化，不要太枯燥着day by day。</p>
<p>相机的出现确实给我带来不少变化，虽然说成本并不低，但是好歹是有足够的收获，它会继续发挥更大的作用的，这点是毋庸置疑的。</p>
<h3 id="领猫猫十一回来养"><a class="markdownIt-Anchor" href="#领猫猫十一回来养"></a> 领猫猫十一回来养</h3>
<p>臭十一是去年年初的时候，带回来养的，1月中旬出生的小可爱，恰好也是一岁了。看着只有两斤不到的它被我养到现在十斤的大肥喵，还是挺快乐的。虽然它也给我带来了不少麻烦，还得经常给他铲屎。原来我已经快铲够一年屎了啊，时间真快。每天回来开门都可以看到这小可爱在门口前面看着你，对于下班也是多了一份盼头呢。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202201150410927.jpg" alt="11" /></p>
<h2 id="现在的状态"><a class="markdownIt-Anchor" href="#现在的状态"></a> 现在的状态</h2>
<p>现在的状态，绝对算不上一个很好的状态。可能是一个比较麻木，还是怎么描述呢，不积极吧。特别最近参与的公司的项目中的那堆事中还有很多的活，很多的工作，多少还是对现在的状态产生了一个较大的影响，得多调节吧。</p>
<p>并不知道有多少人，上了一天班了之后，回去还想继续学习，继续保持充电呢。以前的我，一直都是这样的状态，上了一天课，或者说在上一家单位下班之后，仍会在晚上继续学习，了解新的技术，搞一些兴趣内的事情，做一些小项目来玩，跟稚晖君那样，当然没他这么厉害了啦。所以，博客的更新也对相对较多。但是现在的状态可以说完全不一样了，并不是一个自己喜欢的状态，每天回来都不怎么学习，随便打打游戏，看看视频就又睡觉了，然后开始新的一天的循环。可以说有那么一分麻木在里面。</p>
<p>最近这两个多月，经常都在公司加班，参与到项目的重构，问题单的修复中。这个月还好，一般九点左右就撤，还有一点时间给自己。但是，十一月到十二月份的时候，一两百个单，加上项目框架，基础功能的调整重构，时常搞到晚上十一点左右才回来，也难怪导师叫我悠着点，别这么猛，看来是老有经验了。持续了一段时间之后，好像就有那么一点问题了。回来之后，啥都不想做，游戏都不想打。更别说打开那一堆自己在玩的项目了。搞了一天公司的代码和项目之后，基本就不想看到代码了，那段时间晚上睡前就看半个多小时的博弈论，讲真博弈论是一个很有意思的玩意儿。一般回来，铲个猫砂，洗个澡什么的，就马上十二点了。硬想找点东西做的话，就打开游戏，麻木的玩半个小时，没有什么所谓的快乐成分，纯属是一种无意义的行为。</p>
<p>也有一段时间寻思回来之后，刷几题LeetCode，这个做法挺好的，就是有点影响睡眠，因为如果睡前不把某道题写出来，会在床上翻来覆去的思考解题过程，害不能上手去尝试，就会反复在想，有时干躺半个多小时，翻来覆去的都没法入眠，导致第二天早上会比较困，所以对于睡前刷LeetCode也作罢了。</p>
<p>前文说的相机倒是成功转移了不少我的注意力，回来，闲着随手拍几张照片，拍拍天，拍拍臭十一，在取景框里将此时此刻的心情和画面定格下来的感觉挺好的。还顺手学习一些修图，拍照的相关技术，快门的声音按着也很好听，hhh。话说，摄影师要对画面的每一个元素负责，这跟我们程序员的，我们要对我们写的每一行代码负责，是相同道理的，对代码要有敬畏之心。一通瞎写乱炖，怎么能写出好代码呢。</p>
<h2 id="以后想做什么"><a class="markdownIt-Anchor" href="#以后想做什么"></a> 以后想做什么</h2>
<p>以后想做的事情很多，技术上保持精进应该是每一个理工男的目标吧，我也不例外，学习最新的技术，提升技术水平，在软件工程上面有更多的理解和进步。比如，对架构的设计，设计模式的理解，性能优化，经典算法可以解决的场景，等等。</p>
<p>在技术之外，我希望我可以有多一点的变化，不局限于那经典的两点一线，我希望可以多出去走走吧，多观察观察生活，多写几篇博客，多参加一些社交，多想想问题。最近深圳的新冠疫情挺严重的，想去玩也不太方便，去哪都有风险，就只能终日呆屋子里。有个段子说，不敢得新冠，怕公布出行轨迹的时候，被全国人民都知道自己是一个只有两点一线的社畜，没有生活。</p>
<p>哈哈哈，当然了，玩笑归玩笑，但是，我相信，这是绝大一部分打工人的现实情况吧，除了公司，住的房子，还能去哪，还可以去哪，还有时间去哪。</p>
<p>我时常会思考，为什么别人的生活看起来总是如此的快乐，就很“高质量”，似乎他们都可以很好的过好自己的每一天，像很多UP主一样，他们会记手账，下班还能去看个电影，心想的时候可以跟自己的男朋友女朋友去逛个商城，到清吧喝个小酒，还会分享对世界的看法，对时事的分析，谈谈最近搞的什么技术。晚上回来，还可以做很多自己想做的事。似乎，他们对于自己喜欢的东西总有一份属于自己的态度，不在意外部世界太多的变化与评价。</p>
<p>我希望我也能如此，可以在这看似枯燥的生活中发掘多一点趣味，生活中从不缺乏美，缺少的是发现美的眼睛不是吗？</p>
<h2 id="结语"><a class="markdownIt-Anchor" href="#结语"></a> 结语</h2>
<p>好了，叨叨了几千字，也大概吐槽的差不多了，抱怨是没有用的，做出改变，以积极的态度面向生活，面向世界。希望自己明年也可以保持快乐，年年如此。其实，成长就是最快乐的吧。</p>
<p>最后十分感谢今年陪伴我的这些亲人，同事，老师，朋友，今年的我又是被大家照顾的好好的一年，感谢大家一年的陪伴与帮助。</p>
<p>我想我在前面反反复复都提到的一个词大家都留意到了，22年，我想，我的年度关键词就是 <strong>“改变”</strong> 吧。加油，让我们一起做出改变，提高自己，学会感受，给自己一个更丰富的生活，更有意义的人生。</p>
<h2 id="marxcbr"><a class="markdownIt-Anchor" href="#marxcbr"></a> MARXCBR</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202201150258233.jpg" alt="CBR01928-1" /></p>
]]></content>
      <categories>
        <category>小日志</category>
      </categories>
      <tags>
        <tag>小日志</tag>
      </tags>
  </entry>
  <entry>
    <title>重启家用光猫路由一体化路由器</title>
    <url>/archives/a082046b.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h2>
<p>此次记录的是 中国移动 H62G 家用光猫路由一体的路由器的重启方式，特别的简洁，大部分均以图片和简要的文字进行说明</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202112192232206.jpg" alt="img" /></p>
<p>有用与否请自行鉴定</p>
<h3 id="登录"><a class="markdownIt-Anchor" href="#登录"></a> 登录</h3>
<p>输入 192.168.1.1 输入，根据路由器机身后面的 说明信息获取 账号密码，进行输入即可成功登录</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202112192239513.png" alt="image-20211219192914777" /></p>
<h3 id="进入主界面"><a class="markdownIt-Anchor" href="#进入主界面"></a> 进入主界面</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202112192239175.png" alt="image-20211219193029015" /></p>
<h3 id="进入管理页面"><a class="markdownIt-Anchor" href="#进入管理页面"></a> 进入管理页面</h3>
<p>点击下方的 “设备重启” 按钮</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202112192239784.png" alt="" /></p>
<h3 id="点击确定重启"><a class="markdownIt-Anchor" href="#点击确定重启"></a> 点击确定重启</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202112192240005.png" alt="image-20211219193053485" /></p>
<h3 id="重启提示"><a class="markdownIt-Anchor" href="#重启提示"></a> 重启提示</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202112192240205.png" alt="image-20211219193103713" /></p>
<p>实测路由器将会在一分钟左右就从新上线</p>
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202112192238668.jpg" alt="img" style="zoom:80%;" />
]]></content>
      <categories>
        <category>女朋友的小手册</category>
      </categories>
      <tags>
        <tag>路由器</tag>
      </tags>
  </entry>
  <entry>
    <title>关于博客图片无法正常显示说明</title>
    <url>/archives/ce7c2b4e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="404-not-found"><a class="markdownIt-Anchor" href="#404-not-found"></a> 404 NOT FOUND</h2>
<p><img src="http://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/404.png" alt="MarxCBR的小屋" /></p>
<p>各位读者十分抱歉，本博客的图片因本人的 疏忽 以及 懒惰 导致存储在阿里云OSS上的图片均由于过期导致被清空了</p>
<p>本人将逐步恢复博客的图片，以及尝试新增一个图片墙的栏目</p>
<p>十分感谢提醒我博客图片失效的同学 @cheems骑士<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202111160051787.png" alt="img" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202111152345367.png" alt="image-20211115225416393" /></p>
<p>再次致歉，各位先看着文字版的博客吧，权当是手机浏览器开启了无图浏览模式</p>
]]></content>
      <categories>
        <category>小日志</category>
      </categories>
      <tags>
        <tag>小日志</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业之旅</title>
    <url>/archives/14ec9c68.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="毕业之旅"><a class="markdownIt-Anchor" href="#毕业之旅"></a> 毕业之旅</h2>
<p>时间来到六月份毕业季，我的可爱居居女朋友也在六月份顺利毕业了。虽然刚跳槽工作入职一个月，但我仍要请假两天加上周末两天去参加她的毕业典礼以及毕业旅游。这种不错过对自己很重要的人的任何的一个里程碑的感觉，真的很棒。</p>
<h2 id="毕业-桂林"><a class="markdownIt-Anchor" href="#毕业-桂林"></a> 毕业-桂林</h2>
<p>17 号晚上到桂林，到时已经夜了。不过，桂林的天气 28 度外加没有一丝丝的风，仍是我熟悉的属于桂林市区的闷热。打个滴就到酒店了，一路上人、车都格外少，或许这就是我最后一次这么晚还从北站奔赴桂电了吧。上次这个点，从北站出发往学校方向的时候，还是大四上，十月份参加华为秋招失利后呢。为了第二天早早的就可以参加她的毕业典礼，订了在东区的酒店，开好房间便带着空空的肚子去搞了一包泡面。五点半一到下班时间，便火速离开办公室，吃了一碗粥和一个小油条，奔赴深圳北站。不过也是这次开始，我才发现了原来桶装的泡面也有两个面饼的类型了。真的太照顾我这种一包不饱两包有多的人群了，它会销量很好的，确信。<br />
<img src="http://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210617_221116-1.jpg" alt="深夜的北站" /></p>
<p>那是一个阳光很好的清晨，七点便爬起床把房退了，准备去上车。临上车前，想到应该给我居居带上一大捧花花。到周围的花店查看了一下店面，没开门营业。便逐个给美团上面的花店打电话询问是否营业，好家伙，七家周边的花店，全都没开点，这是我没想到的。 这估计跟桂电这边的毕业传统甚至广西的毕业典礼传统相关。因为，在我记忆中，广东这边的大学，好多好多大学生在毕业时都会邀请很多自己的知己好友从各个大学各个地方过来参加自己的毕业典礼，一起见证自己的人生里程碑。这时候，校门外的路都是摆满卖花的，还有各种各样跟毕业有关的物品。可惜在广西，至少在桂电，我没看到这样的一个盛况。</p>
<p>坐上公交到学校的时候，校毕业典礼已然进行了一半。各院的师生都坐到大草坪上，校领导、学生代表、各界代表都上台发言。流程还是一样一样的。不过他们幸好有椅子坐，天上有云，不至于炽热的阳光直接亲吻每一个人。典礼后，我看到了在散去的人群中，那个四处张望寻找我的女朋友，略显着急，脸上又是充满了期待，真可爱。哼~是我抱上她，她说出的第一句话。嗯，这是一句因思念我太久，又没法见面的“哼”，很好，她还是她，那个想我爱我的她。后续便参加院系的毕业典礼，拨穗仪式。</p>
<p><img src="http://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/image-20210627012249911-22.jpg" alt="学校航拍的毕业典礼照片" /></p>
<p>到三院之后，见着了好多好多老师与同学们，那几个之前特别熟络的同学都跟我来了个 big bug。拨穗仪式的流程挺简单的，挺快的就完成了。但是，这个仪式却很重要。这代表着学院，学校对你的一个认可。意味着，你已经在学校中学习并领会了许许多多的技能与成长，可以带着这些知识到社会中发挥作用了。振翅高飞，不可限量。可能谈不上为国家作出多大多大的贡献，但是融入社会，并可以在社会中继续学习继续成长，并担上越来越多，越来越重要的责任是每一个毕业生的基本要求吧。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/image-20210627012740264-24.jpg" alt="拨穗过程" /></p>
<p>到了学校，她下午才可以办理完离校手续，那中午自然就是在学校吃了。可能很多人都想，在学校最后一顿怎么说都该在食堂吃吧。但是，我们选择了螺蛳粉。嗯，好久没吃这么好吃的螺蛳粉了，馋了一年了，想念。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/image-20210627012552552-23.jpg" alt="image-20210627012552552" /></p>
<p>下午办理好了离校手续之后，跟一些老师与同学道别后，便带着她，一起离开了学校，那个陪伴了她五年的校园，那个有我俩无数共同回忆的 GUET，那个教会她很多学识的桂电，那个承载着梦的地方。</p>
<p><img src="http://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210618_094545-1624729606388-4.jpg" alt="图书馆门前的她" /></p>
<p><strong>在 2021 年的 6 月 18 日，我的女朋友，毕业了。</strong></p>
<h2 id="出发-重庆"><a class="markdownIt-Anchor" href="#出发-重庆"></a> 出发-重庆</h2>
<p>桂林到重庆要坐好几个钟的高铁，四个半小时左右吧。一路上，都没睡，因为她睡不着，我也不可以睡，嘿嘿。就这样，跟她一路听着《三体-科幻广播剧》，在高铁的风驰电掣中抵达了 “山城” 重庆，这个神奇的地方。经过几个小时高铁消耗的她已然略显倦意，可是，重庆西站还是给了我们一个下马威，让我们直接 <strong>&quot;找不到打车的地方”</strong>。嗯，这就是特色吧。</p>
<h2 id="住-环境舒适的来还要交通便利"><a class="markdownIt-Anchor" href="#住-环境舒适的来还要交通便利"></a> 住-环境舒适的来还要交通便利</h2>
<p>因为高铁到的是重庆西，离渝中解放碑那片地方，挺远的。而且，解放碑附近交通比较方便，以其为中心辐射周边的景点区域什么的都比较方便，又有小吃街，于是我们订的解放碑附近的酒店-麓枫酒店。跟步行街什么的，也就离着三四百米的距离，走两步就可以到了。</p>
<p>入住的时候，他们前台给我们免费升级了房间，住的更加舒服了一点，这个还是给他们一个大大的好评。可能是因为连订了三晚，也可能是住的人不多吧。</p>
<h2 id="玩-好吃的好看的东西太多了"><a class="markdownIt-Anchor" href="#玩-好吃的好看的东西太多了"></a> 玩-好吃的好看的东西太多了</h2>
<p>这次行程，主要都把时间花在了找吃的上面吧。俩人，跟着大众点评，小红书，美团什么的，各路神仙软件，去了大大小小好多的网红店去吃各种各样的东西。有<strong>串串、火锅、酥肉、包子、奶茶、面食</strong>。也去了很多网红景点，也在到处瞎逛的时候，看到了一下并不网红的景点。</p>
<h2 id="第一天"><a class="markdownIt-Anchor" href="#第一天"></a> 第一天</h2>
<p>第一天大早上，八点多便出门，去吃上了当地的面食。具体的名字我忘了，实在不好意思嘞~但是，料很多，面也挺好吃，当时感觉这面再劲道一点点会更好些。考虑到我们俩后续还有很多很多想吃的东西，就只叫了一碗，俩人一起吃。既不撑腹又可以甜蜜一下，何乐而不为。</p>
<p>吃完早餐后，那必定得去离得最近的 解放碑 逛逛嘞。不远，沿着街边走走就到了，大早上的人不是很多，车也少。一路走呀走，就拐到了解放碑。只是有点可惜，天气不是很好。但是，阴凉舒适有点风，可以让我们走好久，不怕晒。</p>
<img src="http://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210619_093648.jpg" alt="IMG_20210619_093648" style="zoom: 50%;" />
<p>第一个买的小吃是，“肖炮酥肉” 如果没记错的话，它的位置挺难找的，一个小店。忘了在哪个平台上面，它属于霸榜级别。兴致勃勃的找了半个小时才找到。但是，我说但是了，没错，就是你理解的那种但是。它虽说是网红酥肉。但是我跟女朋友俩人吃起来，实在品尝不出它的美妙。我只记得，第一口下去，麻了，我麻了。跟她都只吃了几块，就吃不下去了。为啥呢，一口口的花椒，你能吃几口呢。不知道是不是我们恰好就买到了他们家品质没控制好的那批。或者是我们实在 get 到好吃的点~</p>
<p>第二个吃的生煎，巧了，名字我又忘了，也算是网红店，在酥肉店附近的。要是到当地去的话，看看有啥网红生煎就懂了。这个讲真挺好吃的。哈哈哈，不是不想给他打广告，是记忆力实在不行了。没记住，或许他们可以考虑怎么宣传招牌来让顾客记得更牢。哈哈哈~</p>
<p>中午吃的是秀孃家的串串。这个店让我记忆清晰。这店厉害了，跟着导航走，我可以保证你永远都找不到他们家店在哪里。</p>
<p><img src="http://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/image-20210627023937140.png" alt="image-20210627023937140" /></p>
<p>这个表情深刻表达了我们当时的心情。</p>
<p>因为他们家店在一个小区里面，还不是那种进门走两步就可以看到的那种，是得走好多好多步，走到你怀疑是不是走错了。但是，最终的结果，因为人太多了，找到店的快乐已经充满了脑袋瓜，而且空间稍微有点儿拥挤，就忘了拍照片。味道和价格上，还是很对得起这个找店的过程的。猜猜我们找这店找了多久，少说也有 50 分钟吧。围着它的那个小区，兜兜转转，地下通道，人行天桥，走上走下的，到处走。所有的地图都不好使，高德、腾讯啥的。最终我们还是得到了当地人的热心指引才找到了那家“神秘的店”。可能，众多食客里，也就我们俩是找不到店的吧。因为，十一点半左右，外面排队的阵仗如图：</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210619_120841-7.jpg" alt="IMG_20210619_120841" /></p>
<p>在去找秀孃的火锅串串店时，路过了一个网咖。这个网咖，是我第一次到重庆时去的第一间店。因为，当时大三的时候抵达重庆的那天是腾讯的笔试。七点半开始笔试。所以，下车第一件事就是，找附近的网咖，把笔试给安排上。当时的场景就是，隔壁的小姐姐搁那跟跟别人 DOTA，后面的人在 LOL，还有一堆吃鸡的。只要我在角落摸摸的装着 Pycharm 和 Python 这些开发环境，然后写起我的笔试题。但是不得不说，因为现在的网咖已经大部分都没有摄像头了，所以无法让牛客网检测我的摄像头开启情况。估计后台直接就给我打上了作弊的标签······写的挺好的一份笔试题就这样无了。</p>
<p>吃完饭之后，就顺着街道走，在陌生的城市里，俩人牵着手，到处瞎逛着，发现着一些新奇的，有意思的景点，特色，的确是一种很 nice 的感觉。当然，城市的底蕴得够，要不然，叫你在一片沙漠里到处逛，你还能逛出花来？哈哈哈</p>
<p>沿着路走呀走，路过了一个花店。给她买了朵大大的菊花~，乐的她咯咯咯的笑。一路上发现了一个教堂，被一大片房子围起来。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210619_131859.jpg" alt="IMG_20210619_131859" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210619_132222-9.jpg" alt="IMG_20210619_132222" /></p>
<p>在穿梭中，不知怎么的，便到了 郭沫若旧居</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210619_140528-11.jpg" alt="IMG_20210619_140528" /></p>
<p>进去里面，人并不多，大多数是上了年纪的大叔大爷。里面陈列展示着很多材料和故事，甚至还有《屈原》话剧场景复现。</p>
<p>出来不久后，再走走就可以看到这面墙</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210619_140123-10.jpg" alt="IMG_20210619_140123" /></p>
<p>走在步道中，忽然瞥到一个小巷子，尽头是一个咖啡馆吧，门口摆满了鲜花，布满苔藓的阶梯，还有朴实的“咖啡”二字。着实让人看着舒服。恍惚间觉着，在这样的一个地方开着一个这样的小小的咖啡馆，每天跟几个有缘到这里的人坐坐聊聊，是不是惬意文艺到起飞呢。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210619_142114-13.jpg" alt="IMG_20210619_142114" /></p>
<p>沿着步道往下走，可以发现一条从屋子里往步道延伸出来的桥，应该算一种桥吧。哈哈哈，这对当地人来说，可能见惯不怪。但是对于我们来说还是觉得有那么些神奇的。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210619_141647-12.jpg" alt="IMG_20210619_141647" /></p>
<p>走完步道后，便出发前往重庆美术馆，里面正举办着《红岩》的主题展览，一楼都是书法作品展示，二楼则是主题展览。不知道是不是因为主题展览的缘故。并没有一些油画水墨画这类的作品展览。</p>
<p>休息了一会后，晚上去了弹石子老街，一层一层的往下走着。发现了一个娃哈哈的奶茶店，真是太稀奇了吧，之前从未见过他们开的奶茶店。所以点了一个娃哈哈的奶茶，讲真，味道一般，可能是点的不是招牌，喝起来的感觉是带着娃哈哈的味道，以及其它材料的味道，但是还是觉得没有其它的奶茶店的好吃，可能是我比较喝果茶吧。话说，喝果茶，还不如直接吃水果？</p>
<p>准备继续往下走，在走到下行的步梯的时候。灯突然亮起来了，哈哈哈，一下子就烂漫起来了。谢谢开闸的大哥的神助攻。下去之后便看到了一家冰激凌店，顺道就吃了个冰激凌。她开心的说着：“嘿嘿~别的宝宝有的东西我也有喏~”。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210619_191136-14.jpg" alt="IMG_20210619_191136" /></p>
<p>就这样走着走着，天色便渐渐的从明亮转换成昏暗，慢慢的便可以看到高楼大厦闪烁灯火。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210619_194956-15.jpg" alt="IMG_20210619_194956" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210619_200359-16.jpg" alt="IMG_20210619_200359" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210619_200708-17.jpg" alt="IMG_20210619_200708" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210619_201030-18.jpg" alt="IMG_20210619_201030" /></p>
<p>逛完弹石子老街后，便出来吃烧烤。叫啥我忘了，在弹石子后街那条巷子里。那一排排都是烧烤店。人挺多，环境看起来比较一般，跟广东这边的大排档和烧烤什么的，感觉还是差点儿意思。起码，感觉这边的场地要干净明亮些。烧烤是自己挑，然后给他们烤，各个地方都是这样子的了，没啥特别。但是，他们家的生意实在太好了，我们等了半个小时左右才把第一批的烧烤拿上来。味道是挺不错的，还有一个叫苕皮的，吃起来也有它的特色。第二批拿上来又等了差不多十分钟，但是，在还没吃完第一波的时候，就拿上来了，没啥问题的啦。第二批拿上来的吃起来，感觉可能是换了师傅烤的，稍微要比第一批的差点点，而且味道也偏咸了，反正总体味道还是挺奈斯的啦，但是个人感觉要是像我们这样特地走了差不多一个钟的路，为了吃它就有点儿大可不必了。</p>
<p>离这家店不远的地方，还有一段路，里面有好多好多间那种，普通房间改成 KTV 的 KTV，每一个门口都正对着街，从门外看着里面泛着一层粉红色以及各种灯球射出来的斑斓。当时还没走到，离他们几十米远就能听到震天动地的嘶吼声，或许这样形容不对，那就是豪迈的歌声！</p>
<h2 id="第二天"><a class="markdownIt-Anchor" href="#第二天"></a> 第二天</h2>
<p>第一天走了两万多步，晚上会酒店还看了一部《攀登者》才睡觉(为啥是这部片，因为电影频道的回放只能找到一天前播放过的攀登者，hhh)。睡醒感觉实在太累了，所以，临近中午才出发去吃饭，选的离酒店不远的一家店。叫 “丘二馆较场口店”。入口也是那种小小的门口，经过一个脏兮兮的楼梯，上到二楼。那条楼梯曾经勾起了我小学的记忆。那种水泥扶手，水磨地面。</p>
<p>到店里面之后，那生意也是火爆。俩人想找个单独的桌子都没有。最终也是跟别人拼桌，但是看到店里好多本地人用着本地的方言跟服务员和老板说话，倒是给了我不少信心。一家本地人都喜欢吃的店，应该差不了。我跟她点了四个菜，蒜泥白肉，女朋友心心念念的一道菜，可以说是为了吃这个菜才来的这个店。宫爆鸡丁，经典菜式，不能少了。手撕鸡，隔壁桌的人点了，看起来也很好吃的样子。鱼香肉丝，这无敌经典的菜式，之前在学校就吃了不少这道菜，到了这边就更得尝尝了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210620_124846-19.jpg" alt="IMG_20210620_124846" /></p>
<p>蒜泥白肉，拌好汁之后吃，好吃，但是她说，没放糖，没灵魂。更多的吃到的是一个感觉，辣！宫爆鸡丁的话，一大盘基本都是花生，鸡的确是鸡丁，不多，但是花生和鸡肉都好吃，好评。手撕鸡，好家伙，只能用一句话形容，那味道是真滴辣呀，根本吃不出鸡肉的味道了。鱼香肉丝就是鱼香肉丝的味道，四道菜下来，一瓶王老吉根本不够喝。饭也早已被辣椒红油染成了红红的颜色。</p>
<p>下午去了磁器口，不得不说，里面的商业气息十分浓厚。去过这么多的号称古镇特色的地方旅游。似乎每个地方都搞得一样。都是借着古镇的外表，无数家店买着差不多的特产，差不多的商品，人头涌涌，喧扰纷杂。或许就是这么有意思，没去某个之前，大概自己也能猜到会是怎么样，但是你也总还是会去一趟。</p>
<p>逛了大半圈，便撤退了，去探索新的，没去过地方。比如，李子坝 观景台。应该是这个名字了啦。因为李子坝这仨字就足够让你检索出大把信息了。打车到达之后，是在江边。面朝渝中市区应该，我也没细致的看地理情况。背后是一栋楼，一条轻轨在楼内穿过。很多人在观景台看轻轨穿楼。但是我感觉有那么点儿小缺陷就是，李子坝站就在那栋楼里，所以，你会看到楼的左右有两列车进站。过稍许才会有车出来。这并不能让人有一种连贯的感觉，就那种，一列车从楼的左边呼呼的穿梭到右边的那种连续连贯的感觉。不过，之前没有见过轻轨过楼的场面，也是让人觉着挺有意思的。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210620_170056.jpg" alt="IMG_20210620_170056" /></p>
<p>接下来便前往 大扶梯，emmmm，咋个说。并未给到我们一个比较大的印象，就一列电梯，长长的，挺多人。不过，在电梯运行的中段的时候，往上往下看都不易看到头。视野所在均为电梯和人头，这时，如果你的坐标参考系有那么点儿混乱的话。你会感觉自己是垂直下降，而自己又是斜站在楼梯上的感觉。不好描述，有点奇妙，顺路可以去试试。</p>
<p>然后打了个的过 洪崖洞，准备看看洪崖洞的景观以及夜景，洪崖洞作为网红景点，人流量自然是比较大的。我记得以前去的时候，并不需要去公众号上预约的。但是，现在去的时候，需要预约，可能是因为疫情的原因 bia。但是，进去了里面之后，发现卖的都是那几乎可以说是千篇一律的 火锅底料、酥肉小吃等物品，还有一众采耳店。我女朋友好早好早之前就想采耳体验一下，所以，我们也随便挑了一家店，试试这边的特色，采耳。套餐啥的，我忘了，emmm，大概就是 基础采耳、洗耳啥的，然后叠加一下，变成各种套餐。我寻思体验一下采耳，就不搞洗耳了。但是，在采耳的过程中，给我采耳的小妹疯狂给我推荐洗耳，整个采耳过程，约莫十分钟左右，甚至不到。给我推荐了五六回，她怂恿我道：你老婆都洗耳了，你也洗一个吧，会好很多。然而仍旧得到了我 拒绝升级套餐的答复。然后，我采耳完了之后，我女朋友的确选择了 升级 洗耳套餐，看起来像是用湿润的棉签去把耳道清洁干净。但是就这一个小服务，竟然要多收六十。还是有点儿小坑 bia。事后，女朋友告诉我，她说，给他采耳的小妹也说，你老公都洗耳了，你也洗一个吧。因为采耳的时候，你并不方便大声说话，环境又嘈杂，只能沉默的给他们采耳，你信息就难以进行沟通与确认。哈哈哈，多好的一个利用信息不对等的商业案例。</p>
<p>不知不觉到了晚上，寻思着，到重庆怎么能不吃一顿火锅，要红锅的那种。六点多，饭点时间，要排好久队。一开始预约 佩姐老火锅，但是实在太火爆了。要等十几二十号，无奈就此作罢。转移场地到 沧龙火锅。 这边等的挺快，十几分钟就可以上桌了。门口有雪糕冰棍可以自取，一人一根。挑了个葡萄味的冰棍和一个雪糕。不过，他们在门口炒火锅底料实在是，真的是，太太太，让人容易打喷嚏了。到这店的第一个动作，不是拿冰棍，也不是找门口的接待员说排号。而是先打上几个喷嚏·······</p>
<p>等到可以就坐的时候，是可以用手机扫码点餐的，不过现在应该大部分地方都是这样了吧。毕竟方便的来，也好管理。选了一个套餐，两个人吃绰绰有余。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210620_203827-20.jpg" alt="干一个虾滑" /></p>
<p>由于实在太辣了，吃的就很慢很慢，过程中，疯狂喝饮料，酸梅汁根本不够喝。吃完之后就已经很晚了，店里人都走一半多了。但是空气依旧是火辣且带劲的。出门之后，就准备出发去看洪崖洞，因为想吃完晚饭，洪崖洞的灯饰都亮起来了再去看景色。懒得走这么远了，才挑的这么近的餐厅。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210620_215110.jpg" alt="IMG_20210620_215110" /></p>
<p>洪崖洞的夜景确实挺好看，金黄色的灯条，镶嵌在洪崖洞的建筑的边上，一整片过去，浩浩荡荡，甚是壮观，恍惚间有种重现繁华的历史的感觉，当然不会这么亮啦。甚至在桥上拍照片的人，也是络绎不绝。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/image-20210725021557324-26.jpg" alt="image-20210725021557324" /></p>
<p>这条桥，在白天傍晚时分就已经有很多很多的人在桥上看景色了，等到了晚上，更是热闹，会一路延续到桥中间。之前清明节那一次，更是厉害，整条桥都封了，很多很多的行人就桥上走着，偶尔会听到桥底的地铁轰隆的行驶声，伴随着一种并不是很明显的震动。还是有那么点儿吓人的，当然多体验几次就习惯了。</p>
<h2 id="第三天"><a class="markdownIt-Anchor" href="#第三天"></a> 第三天</h2>
<p>第三天的行程其实相对比较紧凑，因为一点钟的高铁要赶回深圳，毕竟要上班的嘛，打工人，打工魂！所以，中午去附近恰个饭就准备过高铁站了，女朋友则需要回南京复习。所以，选择了就近的一家店，饭粑跎。店里的装修风格较为特别，充满的一股怀旧的气息，地面是以前的那种水泥地，墙面则是青砖墙面，没有什么粉刷，很朴实无华。而桌子则是经典的方桌，加上经典的桥凳，一个筷子盅，真的经典。</p>
<p>叫了一个剁椒猪蹄子、豆花、蒜泥白肉（没错又是它，而且比之前那家的好吃）、排骨饭、一壶青梅酒。味道都是很 nice 的，可惜我只是一个不懂表达美味的程序员。因为味觉跟嗅觉，你是很难从文字上表达出来的，没品尝过就是不太能懂那种滋味。它就这样刻在你脑子里面的某一处，你努力回忆，似乎也难以寻回那种味蕾和嗅觉上的滋味。只能在以后，不经意间，你闻到了，你尝到了，在哪体验过这滋味呢，在哪呢，噢~想起来了······那人那味那斑驳依稀的往日时光</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/IMG_20210621_114755.jpg" alt="IMG_20210621_114755" /></p>
<p>吃完之后，就跟我的无敌宝贝大可爱居居分别了。临别之际，真的有许多的不舍，这一别又得等两个月左右才能相见，多想跟她在一起腻歪着，一起探索新的城市，新的地标，回去之后，有许许多多的回忆，可以像我此时此刻一样，久经时间之后，仍能如数家珍似的回忆着，怀念着，谈笑风生。</p>
<h2 id="结语"><a class="markdownIt-Anchor" href="#结语"></a> 结语</h2>
<p>以这欢乐的三天重庆之游来给美妙的大学生活画上圆满的句号，也算是对未来美好生活起了一个好的开始，希望以后的生活也能如旅游般轻松惬意快乐无比。</p>
<p>未来可期</p>
]]></content>
      <categories>
        <category>小日志</category>
      </categories>
      <tags>
        <tag>旅行</tag>
      </tags>
  </entry>
  <entry>
    <title>Visual Studio 远程调试软件</title>
    <url>/archives/bd777f4a.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>今天搞一篇VS相关的内容，为啥要用到远程部署调试，这个也是有缘由的。要不，闲着蛋疼用它作甚，本地调试它不香？</p>
<p>主要是<a href="https://www.marxcbr.cn/archives/109d9c59.html">上一篇文章</a>说到的那个项目，U盘文件加密软件的项目。为了测试一些功能，得疯狂拔插它，看他正不正常，看它稳定不稳定。那拔插就拔插啊，关远程啥事。其实也没啥影响，就是，有点麻烦，测一次就得将双手从键盘上挪走，去拔插那已经被插到松动的扩展坞，有时还不会识别，气不气嗦。</p>
<p>所以，今天还真的用远程调试来比较舒服些，那我远程部署到哪里调试呢，那当然是部署到虚拟机里面呀。那缘何要放虚拟机里面，前面说了，因为我懒。。。</p>
<p>哈哈哈，主要是虚拟机有硬件连接的功能啦，就是VM右下角那个东西，它给我提供了懒的基础。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C20629640b6582adbceaccd3871d7e209.png" alt="20210121202604" /></p>
<p>这显示倆，是因为我怼了俩U盘，一个接到主机一个接到虚拟机，点它就可以选择对应的U盘是否接入虚拟机</p>
<h2 id="部署环境"><a class="markdownIt-Anchor" href="#部署环境"></a> 部署环境</h2>
<h3 id="接入测试用u盘"><a class="markdownIt-Anchor" href="#接入测试用u盘"></a> 接入测试用U盘</h3>
<p>插到主机USB口之后，会让你选接入到的设备，我这里全部接到主机</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C5697c5b94161cef5adf8273dd294fb0b.png" alt="20210121201858" /></p>
<h3 id="部署远程调试软件到虚拟机中"><a class="markdownIt-Anchor" href="#部署远程调试软件到虚拟机中"></a> 部署远程调试软件到虚拟机中</h3>
<p>扯犊子这么久，正文开始。</p>
<p>将 <strong>msvsmon.exe</strong> 所在的目录整个拖过去，这个工具只要是安装了VS的，都会有，例如我的 msvsmon.exe 路径为 E:\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\Remote Debugger\x64 ，因为我主机、虚拟机以及部署调试的软件均为64位，所以选择64位的程序</p>
<p>拖过去之后，右键管理员运行之，会让你授权管理员，以方便配置防火墙等服务，如果不以管理员运行，到时走到最后一步部署的时候，会有下图说需要管理员运行</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5Cdfed84058b929bbf2bbd630761bad539.png" alt="20210121204536" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5Cbaef079ff6ca7aba4d33b5ca3e83ba66.png" alt="20210121203308" /></p>
<p>哟西，授权后，启动起来了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C458ac8da9cbf1ec411ec794402820016.png" alt="20210121203407" /></p>
<p>打开选项，进行配置，选 <strong>无身份验证</strong> 然后，最长空闲时间<strong>设为0</strong>，因为我记得设为0是无限等待。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C60363f1bbfee0b3c73270128c080ca89.png" alt="20210121203608" /></p>
<p>差不多了，虚拟机这边就这样了。</p>
<h3 id="配置主机端的开发项目"><a class="markdownIt-Anchor" href="#配置主机端的开发项目"></a> 配置主机端的开发项目</h3>
<p>来到项目配置，选择 调试 然后，切换到 远程 Windows 调试器</p>
<p>然后，<strong>设置好运行命令，工作目录，远程服务器的名字，环境，以及部署的目录，还有其他要部署的文件</strong></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5Ca93e8480a4835481ffddc90ab4fa20ae.png" alt="20210121205146" /></p>
<p>在这里，记一下这几个点</p>
<blockquote>
<ul>
<li>
<p>这个其它要部署的文件，可以自动将依赖复制过去，比如我这里写的 cryptopp.dll 这个，如果不自动复制过去的话，手动复制的话，有多蛋疼，懂得都懂</p>
</li>
<li>
<p>远程服务器名称，可以用 whoami 看</p>
</li>
</ul>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C4147c962a2f1cfd573c296316d13ee0d.png" alt="20210121205711" /></p>
<blockquote>
<ul>
<li>部署目录如果不写，会无法自动部署，如下，灰格子</li>
</ul>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C1bd04a2646632c1cc9fcbb744dfe24ac.png" alt="20210121205846" /></p>
<p>配置完毕后，选择好要用的调试器</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C783dba67fcead5c2f6ade0398ff494bb.png" alt="20210121210628" /></p>
<p>点击调试，启动，芜湖，起飞</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C3955be342d68de0da19984b11ea54c66.png" alt="20210121210726" /></p>
<p>往虚拟机一看，芜湖，坠机</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C36313f3058f36377bc64d223193d38e7.png" alt="20210121210806" /></p>
<p>好嘛，忘了将QT的dll弄过去了。</p>
<blockquote>
<p>这里有点儿小坑，似乎是没法将本地机器的目录在配置里面直接拷到远程机器的，为了弄清能不能直接部署目录下的文件过去，特地查了一些官网说明 <a href="https://docs.microsoft.com/zh-cn/visualstudio/debugger/remote-debugging-cpp?view=vs-2019">https://docs.microsoft.com/zh-cn/visualstudio/debugger/remote-debugging-cpp?view=vs-2019</a></p>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5Ce867a4c9852add47cc37a9ad289d4ecf.png" alt="20210121211118" /></p>
<p>所以，远程机器并未安装有QT的环境，所以，是不行的。那只能指定要复制哪些dll过去了，或者手动将需要的dll复制过去</p>
<p>那我又不知道缺失什么dll，一个一个点确定，再一个一个复制过去，那不显得很憨？</p>
<p>所以，就用QT的部署工具，将依赖dll全部给整出来，然后再全部复制到远程机器上</p>
<p>Windows键之后，找到QT的命令行，然后输入一下命令，当然你得换换路径啦</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C284d365d9c9c79bd8fe20f896f1c597f.png" alt="20210121211751" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> E:\Code\UdiskEncryptTools\UdiskEncryptTools\x64\Debug &amp;&amp; windeployqt UdiskEncryptTools.exe</span><br></pre></td></tr></table></figure>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C1bbe0f12817a0cae1f7d7e8b06110743.png" alt="20210121211940" /></p>
<p>自动打包后，依赖的dll就全部都在这里了，来看看目录</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5Cf4af783e032275ae90f3fe577f79fa76.png" alt="20210121212033" /></p>
<p>没毛病，将这些文件全部都复制到远程机器上</p>
<p>再来远程调试一次</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5Cf9c360223e23fc6885dd3eaa60c8a63f.png" alt="20210121212430" /></p>
<p>好家伙，还缺一个dll，ucrtbased.dll，这家伙在C:\Windows\System32 目录下，手动复制一下到虚拟机上</p>
<p>再来一次，肯定可以了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5Cb5279a1d12f84733555c2c8eb3cee18e.png" alt="20210121213149" /></p>
<p><strong>芜湖，起飞！</strong></p>
<h2 id="断点调试"><a class="markdownIt-Anchor" href="#断点调试"></a> 断点调试</h2>
<p>在 处理插入U盘处下断，看看是否正常命中</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C0259856f083dcc6026219dcf6584fc1d.png" alt="20210121213327" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5Ca845f1c1fa118676e8cc32fc7e7ab262.png" alt="20210121202534" /></p>
<p>这里要用到前面说的，将U盘从主机接到虚拟机</p>
<p>然后可以看到命中断点，以及调试信息什么的，都是正常的，岂一个美滋滋了得 ~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5Cc1a4fc829b01dbc5494cffd57228e3fc.png" alt="20210121213535" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C8017c656ba98e41a3797d0b4c0f1fe26.png" alt="20210121213612" /></p>
<h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2>
<p>折腾这么久（其实写文章花了不少时间），就为了节省拔插U盘的时间，顺便复习一波VS远程部署调试的小技能。哈哈哈，阔以了，快乐了，调试去~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C6597a437dde934717c9610a47c6c0d3b.png" alt="20210121201216" /></p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>C++</category>
        <category>Visual Studio</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Visual Studio</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 C++ 在调用 Cryptopp EAX 加密模式时无法进行MDD动态编译问题</title>
    <url>/archives/109d9c59.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>许久未更新，实在没想到这一拖就是几个月，小半年也过去了。这段时间，没能坚持写一下内容出来，也是没办法。工作了，就没有了上学时的清闲，但是这都是主观的。客观上还是有时间的，只不过是自己懒了，嘿嘿，不辩解了，回到正文吧，看看有没有小伙伴遇到这个问题。</p>
<h2 id="问题描述"><a class="markdownIt-Anchor" href="#问题描述"></a> 问题描述</h2>
<p>问题来源是现在空闲着写来玩的一个项目，主要是做U盘文件加密解密的一个小软件。这个时候，就需要加密算法了，我这么懒不可能手撸加密算法的，而且要是在加密的过程中，可以采用多种加密算法的话，就更好了。有OPENSSL和Cryptopp给我选，然后快乐的选择了Cryptopp，以为OPENSSL在大一我编译它的时候，给我留下了不少阴影，哈哈哈，当年可真菜，虽然现在也一样。</p>
<p>看一下导致问题的代码,摘抄一部分如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">typedef</span> EAX_Final&lt;AES, <span class="literal">true</span>&gt; aes_encryption;</span><br><span class="line"> <span class="keyword">typedef</span> EAX_Final&lt;AES, <span class="literal">false</span>&gt; aes_decryption;</span><br><span class="line"> aes_encryption* encoder_;</span><br><span class="line">aes_decryption* decoder_;</span><br><span class="line">encoder_ = <span class="keyword">new</span> aes_encryption();</span><br><span class="line">encoder_-&gt;SetKeyWithIV(aes_key_, aes_key_.size(), iv_);</span><br></pre></td></tr></table></figure>
<p>然后，编译的时候，快乐的报错就来了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1&gt;symmetryEncrypt.obj : error LNK2001: 无法解析的外部符号 <span class="string">&quot;protected: virtual void __cdecl CryptoPP::EAX_Base::SetKeyWithoutResync(unsigned char const *,unsigned __int64,class CryptoPP::NameValuePairs const &amp;)&quot;</span> (?SetKeyWithoutResync@EAX_Base@CryptoPP@@MEAAXPEBE_KAEBVNameValuePairs@2@@Z)</span><br><span class="line">1&gt;symmetryEncrypt.obj : error LNK2001: 无法解析的外部符号 <span class="string">&quot;protected: virtual void __cdecl CryptoPP::EAX_Base::Resync(unsigned char const *,unsigned __int64)&quot;</span> (?Resync@EAX_Base@CryptoPP@@MEAAXPEBE_K@Z)</span><br><span class="line">1&gt;symmetryEncrypt.obj : error LNK2001: 无法解析的外部符号 <span class="string">&quot;protected: virtual unsigned __int64 __cdecl CryptoPP::EAX_Base::AuthenticateBlocks(unsigned char const *,unsigned __int64)&quot;</span> (?AuthenticateBlocks@EAX_Base@CryptoPP@@MEAA_KPEBE_K@Z)</span><br><span class="line">1&gt;symmetryEncrypt.obj : error LNK2001: 无法解析的外部符号 <span class="string">&quot;protected: virtual void __cdecl CryptoPP::EAX_Base::AuthenticateLastHeaderBlock(void)&quot;</span> (?AuthenticateLastHeaderBlock@EAX_Base@CryptoPP@@MEAAXXZ)</span><br><span class="line">1&gt;symmetryEncrypt.obj : error LNK2001: 无法解析的外部符号 <span class="string">&quot;protected: virtual void __cdecl CryptoPP::EAX_Base::AuthenticateLastFooterBlock(unsigned char *,unsigned __int64)&quot;</span> (?AuthenticateLastFooterBlock@EAX_Base@CryptoPP@@MEAAXPEAE_K@Z)</span><br><span class="line">1&gt;E:\UdiskEncryptTools.exe : fatal error LNK1120: 5 个无法解析的外部命令</span><br></pre></td></tr></table></figure>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5Cae5633098a85569d03cc2bcda9d08b9e.png" alt="20210120205550" /></p>
<h2 id="分析问题"><a class="markdownIt-Anchor" href="#分析问题"></a> 分析问题</h2>
<p>在这里可以清楚的看到它提示，缺少EAX_Base类下面的SetKeyWithoutResync、AuthenticateBlocks、Resync…这些函数。</p>
<p>跟进一下 EAX_Final 这个类，可以看到他是继承自 EAX_Base，而 EAX_Base 又继承自 AuthenticatedSymmetricCipherBase, 然后缺失的函数都在这里类里面。</p>
<p>部分代码摘抄如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span>  <span class="title">CRYPTOPP_NO_VTABLE</span> <span class="title">EAX_Base</span> :</span> <span class="keyword">public</span> AuthenticatedSymmetricCipherBase</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="comment">// AuthenticatedSymmetricCipher</span></span><br><span class="line">	<span class="function"><span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">AlgorithmName</span><span class="params">()</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function">  ...</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"> template &lt;class T_BlockCipher, bool T_IsEncryption&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EAX_Final</span> :</span> <span class="keyword">public</span> EAX_Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">StaticAlgorithmName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  ...</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="keyword">protected</span>:</span></span><br><span class="line"><span class="function">	<span class="keyword">void</span> <span class="title">SetKeyWithoutResync</span><span class="params">(<span class="keyword">const</span> byte *userKey, <span class="keyword">size_t</span> keylength, <span class="keyword">const</span> NameValuePairs &amp;params)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">Resync</span><span class="params">(<span class="keyword">const</span> byte *iv, <span class="keyword">size_t</span> len)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">size_t</span> <span class="title">AuthenticateBlocks</span><span class="params">(<span class="keyword">const</span> byte *data, <span class="keyword">size_t</span> len)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">AuthenticateLastHeaderBlock</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure>
<p>好的，有定义和声明的话，肯定是没问题的。再编译一次这个cryptopp.dll看看，然后再编译咱们的项目。依旧是提示缺失这几个东西。我。。。。</p>
<p>不急，一步一步来，看看dll里面有没有这个EAX的东西，用DLL Export Viewer 打开 cryptopp.dll看看<br />
太多了不想翻，直接搜 EAX</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C02a4a438a29d2c02222c9edd0452de22.png" alt="20210120211829" /></p>
<p>还真没有 -_-</p>
<p>那就说明了，编译dll的时候，就没有导出这个函数，那肯定找不到符号嗦。那我们只要将它声明导出函数就可啦。</p>
<h2 id="解决之路"><a class="markdownIt-Anchor" href="#解决之路"></a> 解决之路</h2>
<p>来打开cryptopp的项目，找到编译dll的项目</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C043e62dcb921f27b7515c221f4b8eed5.png" alt="20210120212135" /></p>
<p>然后会发现找不到eax.h 和 eax.cpp</p>
<p>所以，手动添加进来，添加现有项即可</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C9c9695d0a64d7750d47869e77658973d.png" alt="20210120212307" /></p>
<p>添加好之后，兴冲冲的编译dll，然后去编我的exe，然后还是没找到</p>
<p>淦</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-9/VS%E5%88%9B%E5%BB%BAQT%E5%B7%A5%E7%A8%8B%E5%B9%B6%E6%B7%BB%E5%8A%A0%E5%88%B0GitHub%E4%B8%AD/1560080829083.png" alt="" /></p>
<p>所以还是有问题的，回去看eax的源码，比对一下其它有导出函数的类的区别</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C43083492c6b5d115aceaed9cdb13ae63.png" alt="20210120212555" /></p>
<p>答案是一目了然的，它缺了一个宏来修饰，以下是这个宏的声明，是用来声明导出的</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#  <span class="meta-keyword">define</span> CRYPTOPP_DLL __declspec(dllexport)</span></span><br></pre></td></tr></table></figure>
<p>那解决方案也呼之欲出了，将这个宏加上就可</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// eax.h</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CRYPTOPP_DLL</span> <span class="title">CRYPTOPP_NO_VTABLE</span> <span class="title">EAX_Base</span> :</span> <span class="keyword">public</span> AuthenticatedSymmetricCipherBase</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="comment">// AuthenticatedSymmetricCipher</span></span><br><span class="line">	<span class="function"><span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">AlgorithmName</span><span class="params">()</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function">  ...</span></span><br></pre></td></tr></table></figure>
<h2 id="编译"><a class="markdownIt-Anchor" href="#编译"></a> 编译</h2>
<p>编译一手</p>
<p>8核16线程的U跑起编译来简直不要太舒服<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5Cdb7306c6d5adaee5bb4f13ebcdc46ab2.png" alt="20210120213126" /></p>
<p>用工具看看是否有导出函数了，可以看到找到了，稳了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5C548cbb5b43a06a366baf3cd9765fddad.png" alt="20210120213355" /></p>
<p>编译项目EXE去看看，也正常起来了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog%5Cb8c227fc21a149d2d1403156e53d71b4.png" alt="20210120213602" /></p>
<p>嗯，差不多了，问题解决了，文字也到这里了，要是能帮到遇到同样问题的同学就最好了，没的话，我下次扑街了也好看博客来找到解决方案</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>C++</category>
        <category>Visual Studio</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Visual Studio</tag>
        <tag>Cryptopp</tag>
      </tags>
  </entry>
  <entry>
    <title>我的大学(︶.̮︶✽)大三</title>
    <url>/archives/c6a55137.html</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="This blog is encrypted.You must enter the password to read." /><label>This blog is encrypted.You must enter the password to read.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="62729966482d85f9c91b73d3fa6994bd86ceba04d91b13ab09a2057251c10537"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>小日志</category>
      </categories>
      <tags>
        <tag>小日志</tag>
        <tag>我的大学</tag>
      </tags>
  </entry>
  <entry>
    <title>我的大学(︶.̮︶✽)大二</title>
    <url>/archives/84f9c73a.html</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="This blog is encrypted.You must enter the password to read." /><label>This blog is encrypted.You must enter the password to read.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="31628a70a58761d65a549f4d8ae6398fe0ff8a3bbc8d6518e600049e390b48a6"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>小日志</category>
      </categories>
      <tags>
        <tag>小日志</tag>
        <tag>我的大学</tag>
      </tags>
  </entry>
  <entry>
    <title>我的大学(︶.̮︶✽)大一</title>
    <url>/archives/bf79e993.html</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="This blog is encrypted.You must enter the password to read." /><label>This blog is encrypted.You must enter the password to read.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="28f1bed6507dbb5b7c64ff7d96146ba857c74ac3d1dc6b089b914aec9bc793e9"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>小日志</category>
      </categories>
      <tags>
        <tag>小日志</tag>
        <tag>我的大学</tag>
      </tags>
  </entry>
  <entry>
    <title>四年大学之毕业感想</title>
    <url>/archives/9b1b667b.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>四年的时间真的很快，回首往日，2016年入学桂电，在我爸车中四处张望，观察着即将生活四年的的大学环境的我，充满好奇。那时的我心想着，这就是我的大学吗，我即将生活四年的地方，真好。<br />
很多人看似嫌弃的吐槽桂电，但是我却经常为自己能到桂电上大学感到有幸运。桂电很大，人才很多，虽比不上清华，但是毕竟是南方…,诶~懂的都懂。认真学习，过个不轻松的大学可以保证自己能学到很多很多的知识和技能。我也在好好的学习和实践中拿到了一些奖项以及赚了不少的生活费，毕业设计还有幸拿到了校优二等。<br />
细细想来，我的大学似乎就是以社团为支点，撑起我的学习、社交。有幸加入到七星瓢虫工作坊这个社团中，还做了挺长一段时间的负责人。这个社团应该就是我大学待过最长的地方了，在宿舍也不够社团呆的长~~~毅神、CSB他们上一届的学长给了我很多指导，同届的雄哥能经常帮我纠错和监督我，蒋总也跟我一起负责社团一些事务，而kwins则无限骚话，MXC、YCJ这些学弟又真的是有趣，即能帮干一下小活又能带我游戏上分，社团里面有你们真好。<br />
兄弟社团中的涛涛、帅展、莫总等等一群大佬总能带我飞，跟在后面躺着真滴舒服。<br />
还有幸带了一群小班，是很可爱的同学呢，跟他们交流的时候，时候都可以看到以前自己懵懂的样子。<br />
最后我的女朋友温柔可爱，经常乖巧的呆在我身边陪我学习，以及带我吃很多好吃的，才发现学校有这么多好吃的，有个人在旁边陪着学习工作聊天，乐呵乐呵的是这么幸福的。<br />
我的导师姚老师，真滴真滴十分好十分的让我敬爱的一位导师，帮了我无数的忙，也给我了很多的指引和关心，十分感激，我不会忘记在社团打游戏被姚总敲脑阔的场景的。<br />
宿舍我感觉呆的时间不长，但是，大学的宿舍的兄弟萌个个都是人才，而且换了一次宿舍让我拥有了更多的舍友，不管是前舍友还是现舍友，现在都是曾经的舍友了。你们的泡面之情，开黑之夜，真滴太骚了，以后有机会再来一波？<br />
虽然还有很多事情没有做，比如桂林的很多景点没有去逛过，没有去蹭过其他学院的课，没能像姐大那样奖状拿到手软~<br />
最后被我点名了的兄弟萌原谅我，还有很多兄弟的代号没写，因为怕整出一个年级大点名。你们都留着了我的回忆和记录中。感谢大家长久以来的帮助和关照~<br />
大家出来工作了或者继续深造读研了，都各奔前程。虽此次离别注定长久不见，但是在江湖上行走时总会相见的，我们下次见面的时候会是怎么样呢，因为世界不大也不小~</p>
]]></content>
      <categories>
        <category>小日志</category>
      </categories>
      <tags>
        <tag>小日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下部署使用Cuckoo Sandbox布谷鸟沙箱</title>
    <url>/archives/de6fa1ef.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>上一篇文章已经说了我为何要在Windows下部署Cuckoo，就是为了省点内存，提高体验。然后Cuckoo在Windows下在安装部署文档是空的。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/d9e49e05ed1c15bea791a1efdaa184ad.png" alt="Windows布谷鸟" /></p>
<p>好一个 To be documented ~<br />
幸好<strong>Python的代码是跨平台的</strong>，所以，不慌它，奥利给，干了<br />
上一篇文章已经搭建好布谷鸟所需要的虚拟机环境（即沙箱），这里主要记录cuckoo搭建的一些小坑</p>
<h2 id="安装python27"><a class="markdownIt-Anchor" href="#安装python27"></a> 安装Python27</h2>
<p>因为Cuckoo的安装要求是在Python2下面的，所以安装Python27</p>
<p><a href="https://www.python.org/downloads/release/python-2718/">Python2.7.18 下载页面</a></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/0ae942b2abf77eb0c011cb8dc8e98e83.png" alt="Windows布谷鸟" /></p>
<p>下载回来之后，安装好。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/b7fa84b29c2d3fe96ce1e5c0b243dea8.png" alt="Windows布谷鸟" /></p>
<h2 id="安装cuckoo"><a class="markdownIt-Anchor" href="#安装cuckoo"></a> 安装Cuckoo</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/2f2f23ad0ecc0058bc6c4fbc4710dca1.png" alt="Windows布谷鸟" /></p>
<p>U1S1,Pycharm他们Jetbrain家 的Loading图是真的帅。<br />
来到设置里面的解析器的包管理页面，安装一下cuckoo，用pip直接装也一样的，我这里是因为环境有点乱了，pip也乱了，IDE里也配置了镜像源，就开个IDE省事。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/bf78cd85d39a6cba1ddcb9607ee0843a.png" alt="Windows布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/684f76e6209c2bd497ed9978fef8e906.png" alt="Windows布谷鸟" /></p>
<div class="note info flat"><p>在这个步骤如果出现GMS、Crypto库编译错误什么的，可以安装VC的一个Python环境即可<br />
下载安装 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=44266">Microsoft Visual C++ Compiler for Python 2.7</a></p>
</div>
<h3 id="安装pil-pillow"><a class="markdownIt-Anchor" href="#安装pil-pillow"></a> 安装PIL、Pillow</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/3c2b1d051e59187746715fcf117f3c2e.png" alt="Windows布谷鸟" /></p>
<h3 id="安装pymongo"><a class="markdownIt-Anchor" href="#安装pymongo"></a> 安装pymongo</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/36d8c65f71790c95e2d6c66c1fcc7296.png" alt="Windows布谷鸟" /></p>
<h2 id="初始化cuckoo"><a class="markdownIt-Anchor" href="#初始化cuckoo"></a> 初始化Cuckoo</h2>
<blockquote>
<p>cuckoo init</p>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/878926c13f84f19ae46b3c66afd0b39d.png" alt="Windows布谷鸟" /></p>
<div class="note info flat"><p>如果出现启动错误，那就需要将用户目录下的.cuckoo目录删除掉</p>
</div>
<h2 id="启动cuckoo"><a class="markdownIt-Anchor" href="#启动cuckoo"></a> 启动Cuckoo</h2>
<blockquote>
<p>cuckoo -d</p>
</blockquote>
<p>安装了VirtualBox 6.1 ，但是还是出现了这个报错<br />
Potentially vulnerable virtualbox version installed. Failed to retrieve its version. Update if version is: 6.0.5</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/11a895a82eb1869dcfabe755093a5a3b.png" alt="Windows布谷鸟" /></p>
<p><strong>修改配置文件，跳过检测即可</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- C:\Users\你的用户名\.cuckoo\conf\cuckoo.conf --&gt;</span></span><br><span class="line">ignore_vulnerabilities = yes</span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改好之后，启动看看，可以发现找不到vboxmanage<br />
报错提示我们，我们还有配置文件没修改，找到virtualbox.conf，修改path的值为我电脑上的virtualbox的目录下的vboxmanage路径</p>
</blockquote>
<p>2020-06-21 10:55:00,121 [cuckoo] CRITICAL: CuckooCriticalError: VirtualBox’ VBoxManage not found at specified path “/usr/bin/VBoxManage” (as specified in virtualbox.conf). Did you properly install VirtualBox and configure Cuckoo to use it?</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/d3989ef69686a011e9645c6d0fdfeb31.png" alt="Windows布谷鸟" /></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- C:\Users\你的用户名\.cuckoo\conf\virtualbox.conf --&gt;</span></span><br><span class="line"></span><br><span class="line"># Path to the local installation of the VBoxManage utility.</span><br><span class="line"># path = /usr/bin/VBoxManage</span><br><span class="line">path = E:/Program Files/Oracle/VirtualBox/VBoxManage.exe</span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改好之后，再启动看看，报错提示我们没有cuckoo1这个虚拟机，找到virtualbox.conf，修改path的值为我电脑上的virtualbox的目录下的vboxmanage路径</p>
</blockquote>
<p>2020-06-21 11:04:12,516 [cuckoo] CRITICAL: CuckooCriticalError: Please update your configuration. Unable to shut ‘cuckoo1’ down or find the machine in its proper state: The virtual machine ‘cuckoo1’ doesn’t exist! Please create one or more Cuckoo analysis VMs and properly fill out the Cuckoo configuration!</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/14ab5166f5f1f8ae0445b0d055ed5394.png" alt="Windows布谷鸟" /></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- C:\Users\你的用户名\.cuckoo\conf\virtualbox.conf --&gt;</span></span><br><span class="line">[cuckoo1]</span><br><span class="line"># Specify the label name of the current machine as specified in your</span><br><span class="line"># VirtualBox configuration.</span><br><span class="line">label = XP_64</span><br></pre></td></tr></table></figure>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/e0644e7467bd45a247a46415b9d91721.png" alt="Windows布谷鸟" /></p>
<blockquote>
<p>修改好之后，再启动看看，报错提示还原虚拟机的快照失败，叫我给虚拟机搞个快照再说。所以，就给他整个快照噻~</p>
</blockquote>
<p>2020-06-21 11:11:57,365 [cuckoo.machinery.virtualbox] DEBUG: Stopping vm XP_64<br />
2020-06-21 11:11:57,552 [cuckoo.machinery.virtualbox] DEBUG: Restoring virtual machine XP_64 to its current snapshot<br />
2020-06-21 11:11:57,634 [cuckoo] CRITICAL: CuckooCriticalError: Error initializing machines: VBoxManage failed trying to restore the snapshot of machine ‘XP_64’ (this most likely means there is no snapshot, please refer to our documentation for more information on how to setup a snapshot for your VM): error code 1:</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/5b4d505985738c1d1e74c91e3c3bceb1.png" alt="Windows布谷鸟" /></p>
<p>所以，给它整了一个快照</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/4167243b791750b6243c9c7f6dcae333.png" alt="Windows布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/b66abbca83b982af8122aaf056796326.png" alt="Windows布谷鸟" /></p>
<blockquote>
<p>拍好快照之后，再启动看看，看着这个Waiting for analysis tasks. 老夫露出欣慰的笑容 (ಥ_ಥ)</p>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/08fc798b4650cb77cec561ba11a55d0f.png" alt="Windows布谷鸟" /></p>
<h2 id="启动cuckoo-web界面"><a class="markdownIt-Anchor" href="#启动cuckoo-web界面"></a> 启动Cuckoo Web界面</h2>
<blockquote>
<p><strong>cuckoo web</strong><br />
可以看到提示我们，需要配置MongoDB</p>
</blockquote>
<p>In order to use the Cuckoo Web Interface it is required to have MongoDB up-and-running and enabled in Cuckoo. Please refer to our official documentation as well as the $CWD/conf/reporting.conf file.</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/9bfac5c410419cc23a04fbf7634e5cdb.png" alt="Windows布谷鸟" /></p>
<h3 id="下载mongodb"><a class="markdownIt-Anchor" href="#下载mongodb"></a> 下载MongoDB</h3>
<p>先跑去下载一个MongoDB<br />
<a href="https://www.mongodb.com/try/download/community">MongoDB下载地址</a></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/d07fb1af5c1a36156a621115ee6e4f51.png" alt="Windows布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/6d5c56358664b718b6e725343367c1fd.png" alt="Windows布谷鸟" /></p>
<p>安装好了就好了</p>
<h3 id="修改mongodb的配置文件"><a class="markdownIt-Anchor" href="#修改mongodb的配置文件"></a> 修改MongoDB的配置文件</h3>
<blockquote>
<p>找到配置MongoDB的文件，是reporting.conf，打开它，修改一下</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- C:\Users\你的用户名\.cuckoo\conf\reporting.conf --&gt;</span></span><br><span class="line">[mongodb]</span><br><span class="line">enabled = yes</span><br><span class="line">host = 127.0.0.1</span><br><span class="line">port = 27017</span><br></pre></td></tr></table></figure>
<h3 id="创建cuckoo链接"><a class="markdownIt-Anchor" href="#创建cuckoo链接"></a> 创建cuckoo链接</h3>
<p>改好了配置之后，MongoDB也在本地测试能使用之后</p>
<blockquote>
<p>cuckoo web 启动一波，给了我一个新的错误</p>
</blockquote>
<p>$ cuckoo web<br />
C:\Python27\python.exe: can’t open file ‘C:\Python27\Scripts\cuckoo’: [Errno 2] No such file or directory</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/fce4e0320bc29ba65f0a65f7604f93a8.png" alt="Windows布谷鸟" /></p>
<p>为此，我用mklink将cuckoo链接过去，然后再跑一遍，就给了我一个这样子报错</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/bb5ad3b315799805089eda93cc402bf9.png" alt="Windows布谷鸟" /></p>
<p>没办法，只能去翻翻资料，发现挺多人都遇到这个问题的，GitHub上面挺多关于这个报错的issue，幸好都被close了</p>
<p>测试了两种方案，一钟mklink cuckoo.exe 一种mklink <a href="http://cuckoo-script.py">cuckoo-script.py</a></p>
<ul>
<li>
<p>mklink cuckoo.exe</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/d7ae15ba196b1c1927ea5943caf22100.png" alt="Windows布谷鸟" /></p>
</li>
<li>
<p><strong>mklink <a href="http://cuckoo-script.py">cuckoo-script.py</a></strong><br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/b73648c20da39c999a07112c9ca30a6f.png" alt="Windows布谷鸟" /></p>
</li>
</ul>
<p>可以看到mklink py文件的那个方案是正解</p>
<h2 id="访问cuckoo网站"><a class="markdownIt-Anchor" href="#访问cuckoo网站"></a> 访问Cuckoo网站</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/880584a4f0b413f7872f9de853525a2e.png" alt="Windows布谷鸟" /></p>
<p>喜大普奔(ಥ_ಥ)<br />
其实是可以看到是有点儿不正常的，这个先不管，后面再处理</p>
<h2 id="配置网卡大坑"><a class="markdownIt-Anchor" href="#配置网卡大坑"></a> 配置网卡（大坑）</h2>
<p>最开始，没了留意到装好了的XP系统居然没有网卡</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/01a9a052fa1b4e5aaf708d1c212cf08b.png" alt="Windows布谷鸟" /></p>
<p>设备管理器里面也显示网卡驱动有问题，一度导致我想下载一个万能驱动包给他装上<br />
但是，太麻烦了那样子。毕竟VBox要是不支持XP的网卡的话，也太捞了吧。所以，自信认为问题出在VBOX身上。<br />
接着去搞配置，看着这灰色的网卡选项，我一度很绝望。心想：改不了的嘛，什么情况，太辣鸡了吧。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/f37b13fa3f231e5e6dbd57ffaeb55918.png" alt="Windows布谷鸟" /></p>
<p>然而发现是自己蠢了，虚拟机都没关，就挂起在那里，这让人家怎么改嘛。。。<br />
所以，关掉虚拟机之后，就重新配置一下网卡</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/6f0a865de6fc17168181b4ad4838f865.png" alt="Windows布谷鸟" /></p>
<blockquote>
<p>选一个适合自己系统的，要是不知道哪个是系统支持的，可以像我这样，多开几个网卡，选多几个，到时应该总有一个能用的</p>
</blockquote>
<p>从新打开网卡设置页面看看</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/91705c7311a248f6257b7deba1f0de8e.png" alt="Windows布谷鸟" /></p>
<p>再ping一手，奈斯</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/6b2b6cd22e3941ad6d4396d65e8e2171.png" alt="Windows布谷鸟" /></p>
<h2 id="根据ip地址修改一下ip相关配置"><a class="markdownIt-Anchor" href="#根据ip地址修改一下ip相关配置"></a> 根据IP地址修改一下IP相关配置</h2>
<p>虚拟机网卡的问题修好之后，该配置cuckoo的配置文件了。稍微根据自己的虚拟机实际情况处理一下即可</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- C:\Users\你的用户名\.cuckoo\conf\virtulbox.conf --&gt;</span></span><br><span class="line"># Specify the IP address of the current virtual machine. Make sure that the</span><br><span class="line"># IP address is valid and that the host machine is able to reach it. If not,</span><br><span class="line"># the analysis will fail.</span><br><span class="line">ip = 192.168.1.232</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- C:\Users\你的用户名\.cuckoo\conf\cuckoo.conf --&gt;</span></span><br><span class="line">[resultserver]</span><br><span class="line"># The Result Server is used to receive in real time the behavioral logs</span><br><span class="line"># produced by the analyzer.</span><br><span class="line"># Specify the IP address of the host. The analysis machines should be able</span><br><span class="line"># to contact the host through such address, so make sure it&#x27;s valid.</span><br><span class="line"># NOTE: if you set resultserver IP to 0.0.0.0 you have to set the option</span><br><span class="line"># `resultserver_ip` for all your virtual machines in machinery configuration.</span><br><span class="line">ip = 192.168.1.166</span><br></pre></td></tr></table></figure>
<h2 id="配置客户机沙箱"><a class="markdownIt-Anchor" href="#配置客户机沙箱"></a> 配置客户机（沙箱）</h2>
<p>安装增强工具</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/480adf9ad07acf389213a268f7b8d51f.png" alt="Windows布谷鸟" /></p>
<p>重启一下虚拟机</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/d4bdfc801d2d2befd0615abee9153beb.png" alt="Windows布谷鸟" /></p>
<p>下载一个符合虚拟机版本的Python2安装包，扔进去，我这里是32位的Python27。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/29a3bbe3879033ddee8e8accc27498e5.png" alt="Windows布谷鸟" /></p>
<p>然后，去<strong>C:\Users\你的名字.cuckoo\agent</strong>这个地方拉agent.py文件进去，双击运行</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/f28e79739d5224f7dc214d040c65cc8b.png" alt="Windows布谷鸟" /></p>
<blockquote>
<p><strong>建议在此处给它来个快照</strong></p>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/82ef8c154bfd9774c7d70f2c15f7f571.png" alt="Windows布谷鸟" /></p>
<div class="note info flat"><p>如果出现拖曳文件进虚拟失败的问题，可以采用共享文件夹的方案</p>
</div>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/cf15ac245bb6a021f32b2ef9f69f9589.png" alt="Windows布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/b65fc62573b67e4bfb903bd283a17198.png" alt="Windows布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/84d9ece37947617f1f30b915599bdfb3.png" alt="Windows布谷鸟" /></p>
<h2 id="尝试修复cuckoo-web-的异常"><a class="markdownIt-Anchor" href="#尝试修复cuckoo-web-的异常"></a> 尝试修复cuckoo web 的异常</h2>
<p>cuckoo -d<br />
cuckoo web</p>
<p>启动一下后台服务以及web服务</p>
<ul>
<li>注意，没有我下图截的那个红色框的 web启动界面都是不正常的启动。而且是看不到上传图标的</li>
</ul>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/1811a8778ecbc88a647ee0a2013141e0.png" alt="Windows布谷鸟" /><br />
不正常</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/32ef1bbb2942970f4c0ca34e8bc67404.png" alt="Windows布谷鸟" /><br />
正常</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/6117af4b036f65c98dfc112a8cacd47d.png" alt="Windows布谷鸟" /><br />
注意红色框</p>
<blockquote>
<p>正常和不正常的区别咋一看不大，就差了一个上传的图标。实际上，不正常的话，是无法上传病毒样本的。<br />
解决方案也比较玄学，这里随意说说。当时测试，发现有几个js文件会load失败，事关socket传输的问题。一系列尝试无果，然后便扔到服务器OSS中，在线load它。然而，还是测试不正常，一气之下，打尻去了。第二天过来重新启动便可以正常启动了。太神奇了~~~</p>
</blockquote>
<h2 id="配置tcpdump"><a class="markdownIt-Anchor" href="#配置tcpdump"></a> 配置tcpdump</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/2c53a5839321e88597b36f80d1ef97a0.png" alt="Windows布谷鸟" /></p>
<p><a href="http://www.microolap.com/products/network/tcpdump/download/">点击下载 Microolap TCPDUMP for Windows</a><br />
然后解压好，放tcpdump到.cuckoo目录下<br />
修改配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">[sniffer]</span><br><span class="line"># Enable or disable the use of an external sniffer (tcpdump) [yes/no].</span><br><span class="line">enabled = yes</span><br><span class="line"></span><br><span class="line"># Specify the path to your local installation of tcpdump. Make sure this</span><br><span class="line"># path is correct.</span><br><span class="line"># tcpdump = /usr/sbin/tcpdump</span><br><span class="line">tcpdump = C:/Users/Marx/.cuckoo/tcpdump.exe</span><br></pre></td></tr></table></figure>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/dbe6c1f710cd990aadfa60405f9bef39.png" alt="Windows布谷鸟" /></p>
<ul>
<li>不过在后期测试的时候，似乎不太正常，所以这个后期再处理下</li>
</ul>
<h2 id="上传病毒样本"><a class="markdownIt-Anchor" href="#上传病毒样本"></a> 上传病毒样本</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/e295335e4efc4610e3eb59c62f204d3f.png" alt="Windows布谷鸟" /></p>
<p>选中了待分析的软件之后，分析它</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/4a5ee0e55599a77de2f74cf61d811618.png" alt="Windows布谷鸟" /></p>
<p>在cuckoo -d 的日志下，可以看到分析进展，是否正在正常运行分析</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/7634dc64960f9ce8620cdc57bcdd06b1.png" alt="Windows布谷鸟" /></p>
<p>在沙盒里面可以看到病毒运行的亚子</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/4fb7eaa2a4f392b5c3b69acdf2358bb3.png" alt="Windows布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/5f15c8c3418b8869b0813378833d22e1.png" alt="Windows布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/f452b3442cfd95fd9aeeb36e708a5956.png" alt="Windows布谷鸟" /></p>
<p>点击就可以看到报告了</p>
<h2 id="查看报告"><a class="markdownIt-Anchor" href="#查看报告"></a> 查看报告</h2>
<p>这是一个比较正常的软件的一个分析</p>
<ul>
<li>
<p>概要报告<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/53fd1516887e1ac75337faa27fc77786.png" alt="Windows布谷鸟" /></p>
</li>
<li>
<p>静态分析<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/acf2291b345a38cf043bcb6a646219ee.png" alt="Windows布谷鸟" /></p>
</li>
</ul>
<p>下面的是一个病毒的分析报告</p>
<ul>
<li>
<p>概要报告<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/c65cfbfcf9b09a95aedee416fed59d7e.png" alt="Windows布谷鸟" /></p>
</li>
<li>
<p>行为分析<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/b4470d008997a255b567204477a68583.png" alt="Windows布谷鸟" /></p>
</li>
<li>
<p>释放文件<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/Windows%E5%B8%83%E8%B0%B7%E9%B8%9F/ac23335cae8d838eccc672cbdaa3b07c.png" alt="Windows布谷鸟" /></p>
</li>
</ul>
<h2 id="结语"><a class="markdownIt-Anchor" href="#结语"></a> 结语</h2>
<p>差不多啦，布谷鸟的部署，花了我两三个下午。虽说整体部署不是很复杂，遇到错误，fix掉配置的问题就可以了。然后总有玄学错误，让人无法排除。说明Cuckoo的稳定性和健壮性是有待提升的。但是问题不大，毕竟是能解决并正常使用的。就是怎么提高用户部署和使用体验的问题了。接着，Cuckoo的官网是没哟Windows下部署的说明文档的，希望能给看到的同学一些帮助，OK~ Easy~</p>
]]></content>
      <categories>
        <category>信息安全</category>
      </categories>
      <tags>
        <tag>沙盒</tag>
      </tags>
  </entry>
  <entry>
    <title>布谷鸟沙箱-搭建虚拟机环境</title>
    <url>/archives/aaaf4be5.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>布谷鸟的安装使用在一年前已经做过了，但是当时并未用文字记录下过程。而且当时为了节省我那可怜的内存，避免开两三个虚拟机而踩了一堆坑，在Windows上安装CuCkoo布谷鸟来实现沙箱检测。<br />
当然，结果是喜人的</p>
<p>当时就想写文章来记录的，可是一拖就拖了一年了，时间真快啊。开始吧~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-15-55-29_269f03cb.png" alt="2020-06-20-15-55-29" /></p>
<h2 id="安装virtualbox"><a class="markdownIt-Anchor" href="#安装virtualbox"></a> 安装VirtualBox</h2>
<p>到官网下载安装，<a href="https://www.virtualbox.org/wiki/Downloads">链接在此</a></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-19-22-09-07_338dcdb4.png" alt="2020-06-19-22-09-07" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-19-22-09-44_29324f11.png" alt="2020-06-19-22-09-44" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-19-22-13-57_839b0dfa.png" alt="2020-06-19-22-13-57" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-19-22-10-00_f6a7743d.png" alt="2020-06-19-22-10-00" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-19-22-31-32_55e912fe.png" alt="2020-06-19-22-31-32" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-10-36-32_5f885bb9.png" alt="2020-06-20-10-36-32" /></p>
<h2 id="安装xp系统"><a class="markdownIt-Anchor" href="#安装xp系统"></a> 安装XP系统</h2>
<p>Windows XP SP3 忘了在哪里下载的了，文件名是 en_windows_xp_professional_sp3_Nov_2013_Incl_SATA_Drivers.iso<br />
这个倒是很简单就可以找到，下载回来</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-03-56_1274f7a2.png" alt="布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-04-27_5945c420.png" alt="布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-05-05_474b9be3.png" alt="布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-05-22_45a91c0f.png" alt="布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-07-49_048d4dd5.png" alt="布谷鸟" /></p>
<blockquote>
<p>选中自己的系统镜像</p>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-08-26_9716d58a.png" alt="布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-08-59_1903012d.png" alt="布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-10-08_b2566ad6.png" alt="布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-10-34_1eed15a3.png" alt="布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-11-52_3f0746b6.png" alt="布谷鸟" /></p>
<blockquote>
<p>复制文件这步，大概跑了50秒，就搞定了，骄傲一下下</p>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-12-27_5d79d424.png" alt="布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-14-52_b1597933.png" alt="布谷鸟" /></p>
<p>next一下</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-15-38_cf1f6779.png" alt="布谷鸟" /></p>
<p>输一下管理员密码</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-16-26_212390f1.png" alt="布谷鸟" /></p>
<p>设时间为Beijing时间</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-25-58_1da28af1.png" alt="布谷鸟" /></p>
<blockquote>
<p>记得移除掉光驱镜像，否则会进入安装界面</p>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-22-25_119c3881.png" alt="布谷鸟" /></p>
<p>反正做沙箱的，不开防火墙了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-24-34_dff50bcc.png" alt="布谷鸟" /></p>
<p>设置用户名，marxtina</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-25-01_ea98d7dc.png" alt="布谷鸟" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/HEXO/%E5%B8%83%E8%B0%B7%E9%B8%9F/2020-06-20-16-25-30_4f289297.png" alt="布谷鸟" /></p>
<blockquote>
<p>我的蓝天白云</p>
</blockquote>
<blockquote>
<p><strong>虚拟机环境的搭建先到这里吧，图太多了，放同一篇文章，显得不是很好，布谷鸟的坑，留到下一篇里面去</strong></p>
</blockquote>
]]></content>
      <categories>
        <category>信息安全</category>
      </categories>
      <tags>
        <tag>虚拟机</tag>
        <tag>沙盒</tag>
      </tags>
  </entry>
  <entry>
    <title>Filco Majesstouch2 键盘蓝牙连接方法</title>
    <url>/archives/3927d88e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>昨天晚上，键盘突然就连不上电脑了，然后折腾了一会儿才重新连接回电脑<br />
所以小小的记录一下，FILCO Majesstouch2 蓝牙连接方法，免得后面连不上的时候，又得去网上搜或者看说明书了，打开自己的博客就可以看到了。<br />
<img src="http://marxcbr.oss-cn-shenzhen.aliyuncs.com/static%5C960ce425bf714c1fb10aade85197467f.png" alt="20200615180547" /><br />
<img src="http://marxcbr.oss-cn-shenzhen.aliyuncs.com/e581ccaa3b62697ed22bbaa6f6843c96.png" alt="20200615180653" /></p>
<p><img src="http://marxcbr.oss-cn-shenzhen.aliyuncs.com/static%5Ce581ccaa3b62697ed22bbaa6f6843c96.png" alt="20200615180812" /></p>
<p><img src="http://marxcbr.oss-cn-shenzhen.aliyuncs.com/static%5Ce17a13d5a9ef486a13b28445421b8473.png" alt="20200615181456" /></p>
<p><img src="http://marxcbr.oss-cn-shenzhen.aliyuncs.com/static%5Cae1b30013925e16cb3a219f7e6b1bee4.png" alt="20200615181617" /></p>
<h2 id="连接方法"><a class="markdownIt-Anchor" href="#连接方法"></a> 连接方法</h2>
<blockquote>
<ul>
<li>按住 Ctrl Alt Fn 这仨键，大概按个10秒吧，松开手，会看到指示灯亮起来</li>
</ul>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-6-15/Blog/1592208669677.png" alt="Filco Majesstouch2 键盘蓝牙连接方法" /></p>
<blockquote>
<ul>
<li>在1到4的数字键上选择记录号 ① - ④ 中的任何一个，会看到右边的指示灯闪起来</li>
<li>打开电脑的蓝牙设备管理器，点击添加蓝牙设备</li>
</ul>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-6-15/Blog/1592208826120.png" alt="Filco Majesstouch2 键盘蓝牙连接方法" /></p>
<blockquote>
<ul>
<li>搜索到键盘之后，点击连接</li>
</ul>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-6-14/Blog/1592141573908.png" alt="Filco Majesstouch2 键盘蓝牙连接方法" /></p>
<blockquote>
<ul>
<li>在键盘上输入显示的数字，我这里是06417267，最后输完一定要<strong>回车一下，记得回车，记得回车！</strong></li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>确定后，会出现匹配成功的窗口</li>
</ul>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-6-14/Blog/1592141605842.png" alt="Filco Majesstouch2 键盘蓝牙连接方法" /></p>
<p>然后就可以使用键盘了<br />
OK~EZ~ 打完收工</p>
<h2 id="晒图一下"><a class="markdownIt-Anchor" href="#晒图一下"></a> 晒图一下</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-6-15/Blog/HR-%E9%94%AE%E7%9B%98.webp" alt="Filco Majesstouch2 键盘蓝牙连接方法" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-6-15/Blog/%E4%BE%A7%E6%8B%8D_%E7%9C%8B%E5%9B%BE%E7%8E%8B.webp" alt="Filco Majesstouch2 键盘蓝牙连接方法" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-6-15/Blog/%E9%94%AE%E7%9B%98%E5%B7%A6%E4%BE%A7_%E7%9C%8B%E5%9B%BE%E7%8E%8B.webp" alt="Filco Majesstouch2 键盘蓝牙连接方法" /></p>
]]></content>
      <categories>
        <category>小日志</category>
      </categories>
      <tags>
        <tag>键盘</tag>
      </tags>
  </entry>
  <entry>
    <title>C++加密GPT|MBR分区表实现简单磁盘加密</title>
    <url>/archives/f24f7c58.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>最近都在搞移动存储介质的一些相关的东西。恰好，就有个磁盘加密的需求。这个需求是不是真的需要，我其实都不太清楚，哈哈哈。只不过是恰好想到了，然后就做了。因为想到了这个东西，但是不做出来，感觉不舒服~所以，花了一两天的时间去查阅相关资料，把它给整出来了。利用国密算法SM4对分区表进行一个加解密，实现加密后的磁盘怼到电脑上无法正常使用（其实是可以看到磁盘的，只不过打开不了而已）。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-5-6/BogImages/1588741146022.png" alt="C++加密GPT|MBR分区表实现简单磁盘加密" /><br />
这是GPT格式的效果</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-5-6/BogImages/1588742155892.png" alt="C++加密GPT|MBR分区表实现简单磁盘加密" /><br />
这是MBR格式的效果</p>
<p>都是用不了，只显示插入了一个存储介质</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-5-6/BogImages/1588742219330.png" alt="" /><br />
存储管理器里面显示未分配空间</p>
<h2 id="先简单研究一下下mbr和gpt的区别"><a class="markdownIt-Anchor" href="#先简单研究一下下mbr和gpt的区别"></a> 先简单研究一下下MBR和GPT的区别</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-5-6/BogImages/1588763044501.png" alt="C++加密GPT|MBR分区表实现简单磁盘加密" /><br />
MBR结构</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-5-6/BogImages/1588763122842.png" alt="C++加密GPT|MBR分区表实现简单磁盘加密" /><br />
GPT结构</p>
<blockquote>
<p>MBR分区表与GPT分区表的关系<br />
与支持最大卷为2 TB（Terabytes）并且每个磁盘最多有4个主分区（或3个主分区，1个扩展分区和无限制的逻辑驱动器）的MBR磁盘分区的样式相比，GPT磁盘分区样式支持最大为128个分割，一个分割最大18 EB（Exabytes），只受到操作系统限制（由于分区表本身需要占用一定空间，最初规划硬盘分区时，留给分区表的空间决定了最多可以有多少个分区，IA-64版Windows限制最多有128个分区，这也是EFI标准规定的分区表的最小尺寸）。与MBR分区的磁盘不同，至关重要的平台操作数据位于分区，而不是位于非分区或隐藏扇区。另外，GPT分区磁盘有备份分区表来提高分区数据结构的完整性。在UEFI系统上，通常是通过ESP分区中的EFI应用程序文件引导GPT硬盘上的操作系统，而不是活动主分区上的引导程序。<br />
<strong>资料来源</strong>：</p>
<ul>
<li>维基百科 <a href="https://zh.wikipedia.org/wiki/%E4%B8%BB%E5%BC%95%E5%AF%BC%E8%AE%B0%E5%BD%95">https://zh.wikipedia.org/wiki/主引导记录</a></li>
<li>维基百科 <a href="https://zh.wikipedia.org/wiki/GUID%E7%A3%81%E7%A2%9F%E5%88%86%E5%89%B2%E8%A1%A8">https://zh.wikipedia.org/wiki/GUID磁碟分割表</a></li>
</ul>
</blockquote>
<p>总结来说，就是<strong>MBR支持4个主要分区，GPT支持128个</strong>。然后MBR中的分区表是写在第0个扇区，偏移在0x1BE上面的，一共4项，每项16个字节。GPT则在第2个扇区开始写，一共可以划分为128个分区，从偏移0x00就开始写，每项占用128个字节，即以0x80的距离进行偏移记录。然后按照常规512字节一共扇区计算的话，128个项就是占有32个扇区。</p>
<h2 id="使用sm4国密对称加密算法对分区表进行加密"><a class="markdownIt-Anchor" href="#使用sm4国密对称加密算法对分区表进行加密"></a> 使用SM4国密对称加密算法对分区表进行加密</h2>
<p>加密分区表可以有很多钟办法，采用对称、非对称加密、还是简单的异或值、左移右移来搞凯撒密码都可以。只要你喜欢的都可以<br />
在这里，我会采用国密算法SM4进行一个加密操作。SM4的实现不是我写的，是从Github上面搞回来的，具体作者是谁，我并没有记录到，当时拿过来就用了，没有记录到作者，实在不好意思~</p>
<p>该怎么加密，加密之后的数据该放哪个位置。<br />
在这里，采用的最简单的一个做法，不免显得有些蠢~<br />
对于MBR分区则对上文中说到的64个字节的四个分区项加密，然后存放在36号扇区。<br />
对于GPT分区，则对上文说到的 2——33 扇区进行加密，然后存在36号扇区起的连续32个扇区</p>
<p>接着<strong>对上面说到的那些原始分区表存的数据全部清零</strong>。对于GPT的话，还得在第一个扇区读取LBA备份的扇区位置，对备份扇区内的分区表项也给一同抹去才可以生效。因为当检测到主分区表不正常时，会自动读取备份分区表。</p>
<h2 id="解密分区表的办法"><a class="markdownIt-Anchor" href="#解密分区表的办法"></a> 解密分区表的办法</h2>
<p>由于磁盘被加密之后，系统就看到没有分区表了。那就会影响使用了，咱们就要将加密后的数据读取回来，读取位置如上文所说，利用SM4进行解密之后，然后再填回原来分区表的地方。约莫几秒中，系统便会识别出正常的分区表，资源管理器便可以正常使用该分区了。</p>
<h2 id="怎么让分区表一直处于加密状态中呢"><a class="markdownIt-Anchor" href="#怎么让分区表一直处于加密状态中呢"></a> 怎么让分区表一直处于加密状态中呢</h2>
<p>但是，想象一下，要是加密磁盘怼入计算机中，然后给他解密了分区表之后，突然拔出来了。会发生什么呢？<br />
没错，是原来的分区表会保留住。下次他就可以拿着被解锁的磁盘随便用了。<br />
所以，在这里，我们可以在插入磁盘，解密分区表之后，约莫等他几秒，让系统识别出来分区表之后，存在缓存之后，马上又给它给加密了。这样子他在后面使用的时候，突然拔出来，分区表也是加密好了的。</p>
<h2 id="密钥的生成存放方法"><a class="markdownIt-Anchor" href="#密钥的生成存放方法"></a> 密钥的生成存放方法</h2>
<p>SM4的密钥是128位的，即32个字符。我们可以怎么搞出这128位密钥呢</p>
<ul>
<li>随机的生成这个密钥，然后存在某个扇区中</li>
<li>利用用户输入来实现这个密钥输入</li>
<li>利用某种东西来派生出这个128位的密钥，例如利用移动存储介质的序列号（采用PID+VID+SerialNumber）来进行一个MD5运算，生成一个128位的消息摘要，利用这个MD5值进行一个加密。</li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mi>e</mi><mi>y</mi><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>P</mi><mi>I</mi><mi>D</mi><mo>+</mo><mi>V</mi><mi>I</mi><mi>D</mi><mo>+</mo><mi>S</mi><mi>e</mi><mi>r</mi><mi>i</mi><mi>a</mi><mi>l</mi><mi>N</mi><mi>u</mi><mi>m</mi><mi>b</mi><mi>e</mi><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Key=H(PID+VID+SerialNumber)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span></span></p>
<p>这里，我这里采用，第三种办法，毕竟128位的密钥着实不好记的对吧，利用国密算法SM3来生成256位的密钥。然后截取前128位作为密钥，存在某个扇区中，需要时再读取即可。</p>
<h3 id="小小的做一下安全分析"><a class="markdownIt-Anchor" href="#小小的做一下安全分析"></a> 小小的做一下安全分析</h3>
<p>利用 PID+VID+SerialNumber 来生成生成标识符来进行SM3消息摘要是真的安全了吗？并不是，假设我们的加密解密方法被发现了之后，别人还是可以很简单的就写出一个SM3来生成需要用到的消息摘要，用作SM4密钥。<br />
所以，为了避免这个情况，我向服务器请求一个由服务器发送回来的秘密值，这秘密值可以是128位的，也可以1024位，也可以2048位，随意我们来进行生成。当别人想自己生成摘要时，这个秘密值就是他所不知道的，毕竟秘密值长度未知，知道长度也“无从下手”，够他愁了~</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mi>e</mi><mi>y</mi><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>P</mi><mi>I</mi><mi>D</mi><mo>+</mo><mi>V</mi><mi>I</mi><mi>D</mi><mo>+</mo><mi>S</mi><mi>e</mi><mi>r</mi><mi>i</mi><mi>a</mi><mi>l</mi><mi>N</mi><mi>u</mi><mi>m</mi><mi>b</mi><mi>e</mi><mi>r</mi><mo>+</mo><mi>S</mi><mi>e</mi><mi>c</mi><mi>r</mi><mi>e</mi><mi>t</mi><mi>V</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Key=H(PID+VID+SerialNumber+SecretValue)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">u</span><span class="mord mathdefault">e</span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="补充说明"><a class="markdownIt-Anchor" href="#补充说明"></a> 补充说明</h2>
<p>这个移动存储加密方案并不是理想中这么安全的。毕竟，真正的数据区域并没有被加密到。我们只是对分区表进行了一个操作。在加密后，对分区表进行一个清空操作。数据区域，还是明文的情况，如果有心去读取数据的话，可以利用diskgenius、easy recovery 这类软件进行一个数据恢复，进行提取。</p>
<p>因为全盘全分区加密是需要耗费大量时间的，这次用到这种方案只是适用于我当前的需求，各位大哥参考一下即可</p>
<p>代码有几百行，着实不好在博客中展示。就由GitHub这些专业的代码托管平台来展示吧，哈哈哈<br />
项目的GitHub的位置： <a href="https://github.com/97CBR/tmp_project_in_vs2017">tmp_project_in_vs2017</a> 的 encrypted_disk_partition 分支中</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>分区表加密</tag>
        <tag>国密算法</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub这波操作 爱了爱了</title>
    <url>/archives/b4eeef0.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="有个有钱的爸爸就是可以为所欲为"><a class="markdownIt-Anchor" href="#有个有钱的爸爸就是可以为所欲为"></a> 有个有钱的爸爸就是可以为所欲为</h2>
<p>GitHub 在 4月14号晚上九点半左右的时候，突然一封邮件发到我的邮箱里<br />
邮件内容长这样</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-18/BogImages/1587141395107.png" alt="MarxCBR的小屋" /></p>
<ul>
<li><strong>大概就是开放了私有仓库的协同人的人数限制</strong></li>
<li><strong>GitHub Action 的时间有2000分钟每个月</strong></li>
<li><strong>降低某些服务的费用</strong></li>
</ul>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-18/BogImages/1587141930946.png" alt="MarxCBR的小屋" /></p>
<p><strong>隔壁家Gitee的长这样子，害限制5个人呢，毕竟要恰饭的嘛</strong></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-18/BogImages/1587142117145.png" alt="MarxCBR的小屋" /></p>
<p>之前开放私有仓库的时候，就已经感觉到了巨硬的力量<br />
现在开放了无限私有仓，怕是会让Gitee感受到压力哦~</p>
]]></content>
      <categories>
        <category>小日志</category>
      </categories>
      <tags>
        <tag>小日志</tag>
      </tags>
  </entry>
  <entry>
    <title>VMWare 安装Ubuntu18.04-Live-Server记录</title>
    <url>/archives/9c1fd75a.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p><strong>我们该如何根据需求来确定我们需要装的系统呢</strong><br />
那就当然是按照需求来呀，比如我们并不需要界面的Linux，就可以装今天的主角，Ubuntu18.04-Live-Server。当然如果我们需要界面的话，就装带界面的发行版。如果我们打算装系统来做渗透，那么kali欢迎你。</p>
<p>这里我需要装一个Ubuntu来部署一个蜜罐系统，嘿嘿，不用界面就好。所以，选择了这个server版本，那我为啥不用docker呢？哈哈哈</p>
<h2 id="将镜像下载回来"><a class="markdownIt-Anchor" href="#将镜像下载回来"></a> 将镜像下载回来</h2>
<p>这里我们去清华镜像站下载，下载比较快点 <a href="https://mirrors.tuna.tsinghua.edu.cn/">点击进入</a></p>
<p>选择发行版</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586493199109.png" alt="MarxCBR的小屋" /></p>
<p>我要18.04的</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586493186710.png" alt="MarxCBR的小屋" /></p>
<p>用种子或者直接iso镜像都行</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586493169488.png" alt="MarxCBR的小屋" /></p>
<h2 id="在虚拟机里面安装"><a class="markdownIt-Anchor" href="#在虚拟机里面安装"></a> 在虚拟机里面安装</h2>
<p><strong>这部分可以参考以前装kali的记录</strong><br />
创建新的虚拟机</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586494359575.png" alt="MarxCBR的小屋" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586494381222.png" alt="MarxCBR的小屋" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586494452916.png" alt="MarxCBR的小屋" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586494592865.png" alt="MarxCBR的小屋" /></p>
<h2 id="启动虚拟机进行镜像安装"><a class="markdownIt-Anchor" href="#启动虚拟机进行镜像安装"></a> 启动虚拟机进行镜像安装</h2>
<p>这里要等一两分钟<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586494682620.png" alt="MarxCBR的小屋" /></p>
<p>英文就好<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586494756765.png" alt="MarxCBR的小屋" /></p>
<p>不要升级<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586494783386.png" alt="MarxCBR的小屋" /></p>
<p>美式键盘布局<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586494837988.png" alt="MarxCBR的小屋" /></p>
<p>设置网络<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586494847221.png" alt="MarxCBR的小屋" /></p>
<p>不设置代理，这个随意自己<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586494873500.png" alt="MarxCBR的小屋" /></p>
<p>改成阿里源，下载快N倍<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586494994282.png" alt="MarxCBR的小屋" /></p>
<p><a href="http://mirrors.aliyun.com/ubuntu/">http://mirrors.aliyun.com/ubuntu/</a></p>
<p>用整个虚拟磁盘<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586495066864.png" alt="MarxCBR的小屋" /></p>
<p>默认磁盘<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586495078192.png" alt="MarxCBR的小屋" /></p>
<p>分区，，默认<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586495159902.png" alt="MarxCBR的小屋" /></p>
<p>提示要格式化，继续就好<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586495171283.png" alt="MarxCBR的小屋" /></p>
<p>设置我们主机的名字<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586495367233.png" alt="MarxCBR的小屋" /><br />
ps：wkssd是啥意思呢，有兴趣可以猜猜</p>
<p>这里要用空格<strong>确定勾上安装openssh server</strong>方便后续进行ssh连接<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586495351706.png" alt="MarxCBR的小屋" /></p>
<p>要是没有自己要用的软件，就直接选择done安装吧<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586495470980.png" alt="MarxCBR的小屋" /></p>
<p>正在安装的亚子<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586495494986.png" alt="MarxCBR的小屋" /></p>
<p>安装完会给这个提示，并不会自动重启<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586495707011.png" alt="MarxCBR的小屋" /></p>
<p>装完之后，选择reboot会起不来。提示我们要将安装媒介移除，我们要将之前选的ISO镜像去了，选择DVD为自动检测<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586495854660.png" alt="MarxCBR的小屋" /></p>
<p>进入登录界面<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586495890490.png" alt="MarxCBR的小屋" /></p>
<p>前面可能会连续都登不进去，我瞅了一下回显<br />
感觉是生成秘钥什么的<br />
试了两三次之后，就可以正常登录了<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-10/BogImages/1586495982450.png" alt="MarxCBR的小屋" /></p>
<p>OK，差不多就在这样子，简单的记录一下装这个Ubuntu-live-server~嘿嘿</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>虚拟机</category>
      </categories>
      <tags>
        <tag>VMWare</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>利用C++真正的弹出U盘</title>
    <url>/archives/7fc2b650.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>为啥我要用C++来弹出我的U盘呢~<br />
还是我那让人可爱的毕设里面的一个朴素无华的需求<br />
在那个场景里面，我将U盘插进去，然后对其MBR分区写入一个特定的标签后，再从那个特定的位置读取数据进行验证是否已经将标签写入。<br />
完成了这件事之后，我就需要将U盘进行弹出，以便于后续的U盘插入并进行打标签流程</p>
<h2 id="c-弹出u盘有两个方案"><a class="markdownIt-Anchor" href="#c-弹出u盘有两个方案"></a> C++ 弹出U盘有两个方案</h2>
<p>本来我不知道U盘弹出有两个方案的，查阅资料和MSDN，最容易看到，也最常见的就是利用 <strong>CreateFile</strong> 打开设备的句柄，利用 <strong>DeviceIoControl</strong> 来对设备句柄执行 <strong>IOCTL_STORAGE_EJECT_MEDIA</strong> 这个操作码</p>
<p>当然前提是你句柄获取都是正确的，然后利用 FSCTL_LOCK_VOLUME、FSCTL_DISMOUNT_VOLUME、IOCTL_STORAGE_MEDIA_REMOVAL 这些操作码来排除其他进程的干扰和锁定U盘</p>
<p>可是这样子，居然弹出来的设备会变成这样子</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-9/BogImages/1586439632184.png" alt="MarxCBR的小屋" /></p>
<p>你管这叫弹出？这不是我以前认识的弹出~</p>
<p>虽然也打开不了磁盘了，提示叫我插入磁盘</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-9/BogImages/1586439737115.png" alt="MarxCBR的小屋" /></p>
<p>但是你这样子在设备管理器里面也还是可见的，即使使用不了，我利用 <strong>GetLogicalDrives</strong> <strong>CreateFileA</strong> <strong>DeviceIoControl</strong> 这仨函数还是可以将你枚举出来就木得意思了，对吧。</p>
<p>接着，我可爱的火绒给了我灵感</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-9/BogImages/1586440096994.png" alt="MarxCBR的小屋" /></p>
<p>弹出前<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-9/BogImages/1586440108669.png" alt="MarxCBR的小屋" /></p>
<p>弹出后<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-9/BogImages/1586440131724.png" alt="MarxCBR的小屋" /></p>
<p>这才是我想要的效果啊，喵的。用<strong>IOCTL_STORAGE_EJECT_MEDIA</strong>弹出之后还剩一个图标给我一点也不帅好吧<br />
<strong>以下提供到的方案均已测试通过，实现效果如上文说过一致，按需求自取</strong></p>
<h2 id="第一种解决方案会剩一个无法访问到的盘符"><a class="markdownIt-Anchor" href="#第一种解决方案会剩一个无法访问到的盘符"></a> 第一种解决方案，会剩一个无法访问到的盘符</h2>
<p>解决方案这种东西，还是直接上代码说的更清楚，都是写代码的人嘛。<br />
用代码说清楚它</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * \brief 弹出指定盘符存储设备</span></span><br><span class="line"><span class="comment"> * \param drive_volume_name 盘符，E，F</span></span><br><span class="line"><span class="comment"> * \return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">BOOL <span class="title">UsbDrivesManager::RemoveUsbByName</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> drive_volume_name)</span> <span class="keyword">const</span> </span>&#123;</span><br><span class="line">    QString paths = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">auto</span> drive_name = QString(<span class="string">&quot;%1:&quot;</span>).arg(drive_volume_name);</span><br><span class="line">    paths = QString(<span class="string">R&quot;(\\.\%1:)&quot;</span>).arg(drive_volume_name);</span><br><span class="line">    DWORD dw_ret;</span><br><span class="line">    DWORD dw_error;</span><br><span class="line">    WCHAR cs_volume[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    paths.toWCharArray(cs_volume);</span><br><span class="line">    <span class="comment">//打开设备</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">auto</span> h_device = CreateFile(cs_volume,</span><br><span class="line">                                     GENERIC_READ | GENERIC_WRITE,</span><br><span class="line">                                     FILE_SHARE_READ | FILE_SHARE_WRITE,</span><br><span class="line">                                     <span class="literal">NULL</span>,</span><br><span class="line">                                     OPEN_EXISTING,</span><br><span class="line">                                     <span class="number">0</span>,</span><br><span class="line">                                     <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (h_device == INVALID_HANDLE_VALUE) &#123;</span><br><span class="line">        <span class="comment">// can&#x27;t open the drive</span></span><br><span class="line">        dw_error = GetLastError();</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!DeviceIoControl(h_device, FSCTL_LOCK_VOLUME, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, &amp;dw_ret, <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!DeviceIoControl(h_device, FSCTL_DISMOUNT_VOLUME, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, &amp;dw_ret, <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">    PREVENT_MEDIA_REMOVAL pmr_buffer;</span><br><span class="line">    pmr_buffer.PreventMediaRemoval = FALSE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!DeviceIoControl(h_device, IOCTL_STORAGE_MEDIA_REMOVAL, &amp;pmr_buffer, <span class="keyword">sizeof</span>(PREVENT_MEDIA_REMOVAL), <span class="literal">NULL</span>, <span class="number">0</span>, &amp;dw_ret, <span class="literal">NULL</span>))</span><br><span class="line">        qDebug(<span class="string">&quot;DeviceIoControl IOCTL_STORAGE_MEDIA_REMOVAL failed:%d\n&quot;</span>, GetLastError());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> b_result = DeviceIoControl(</span><br><span class="line">                        h_device,</span><br><span class="line">                        IOCTL_STORAGE_EJECT_MEDIA, <span class="comment">//eject USB</span></span><br><span class="line">                        <span class="literal">NULL</span>,</span><br><span class="line">                        <span class="number">0</span>,</span><br><span class="line">                        <span class="literal">NULL</span>,</span><br><span class="line">                        <span class="number">0</span>,</span><br><span class="line">                        &amp;dw_ret,</span><br><span class="line">                        <span class="keyword">static_cast</span>&lt;LPOVERLAPPED&gt;(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">if</span> (!b_result) &#123;</span><br><span class="line">        dw_error = GetLastError();</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    b_result = CloseHandle(h_device);</span><br><span class="line">    <span class="keyword">if</span> (!b_result) &#123;</span><br><span class="line">        dw_error = GetLastError();</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<div class="note info flat"><p>这段代码用到了 Qt 的QString和Qdebug的库，实际使用时，可以根据需求自己稍微加以更改</p>
</div>
<h2 id="弹出u盘不会留下盘符图标"><a class="markdownIt-Anchor" href="#弹出u盘不会留下盘符图标"></a> 弹出U盘，不会留下盘符图标</h2>
<p>还是直接放代码吧</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function">DEVINST <span class="title">UsbDrivesManager::GetDrivesDevInstByDiskNumber</span><span class="params">(<span class="keyword">const</span> <span class="keyword">long</span> disk_number)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">auto</span> h_dev_info = SetupDiGetClassDevs(&amp;GUID_DEVINTERFACE_DISK, <span class="literal">NULL</span>, <span class="literal">NULL</span>,</span><br><span class="line">                                              DIGCF_PRESENT | DIGCF_DEVICEINTERFACE);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (h_dev_info == INVALID_HANDLE_VALUE)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    DWORD dw_index = <span class="number">0</span>;</span><br><span class="line">    SP_DEVICE_INTERFACE_DATA dev_interface_data = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    dev_interface_data.cbSize = <span class="keyword">sizeof</span>(SP_DEVICE_INTERFACE_DATA);</span><br><span class="line">    <span class="keyword">auto</span> b_ret = FALSE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    SP_DEVICE_INTERFACE_DATA sp_did;</span><br><span class="line">    SP_DEVINFO_DATA sp_dd;</span><br><span class="line">    DWORD dw_size;</span><br><span class="line"></span><br><span class="line">    sp_did.cbSize = <span class="keyword">sizeof</span>(sp_did);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        b_ret = SetupDiEnumDeviceInterfaces(h_dev_info, <span class="literal">NULL</span>, &amp;GUID_DEVINTERFACE_DISK, dw_index,</span><br><span class="line">                                            &amp;dev_interface_data);</span><br><span class="line">        <span class="keyword">if</span> (!b_ret)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        SetupDiEnumInterfaceDevice(h_dev_info, <span class="literal">NULL</span>, &amp;GUID_DEVINTERFACE_DISK, dw_index, &amp;sp_did);</span><br><span class="line"></span><br><span class="line">        dw_size = <span class="number">0</span>;</span><br><span class="line">        SetupDiGetDeviceInterfaceDetail(h_dev_info, &amp;sp_did, <span class="literal">NULL</span>, <span class="number">0</span>, &amp;dw_size, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (dw_size) &#123;</span><br><span class="line">            <span class="keyword">auto</span> psp_did = <span class="keyword">static_cast</span>&lt;PSP_DEVICE_INTERFACE_DETAIL_DATA&gt;(HeapAlloc(</span><br><span class="line">                               GetProcessHeap(), HEAP_ZERO_MEMORY, dw_size));</span><br><span class="line">            <span class="keyword">if</span> (psp_did == <span class="literal">NULL</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>; <span class="comment">// autsch</span></span><br><span class="line">            &#125;</span><br><span class="line">            psp_did-&gt;cbSize = <span class="keyword">sizeof</span>(*psp_did);</span><br><span class="line">            ZeroMemory(<span class="keyword">static_cast</span>&lt;PVOID&gt;(&amp;sp_dd), <span class="keyword">sizeof</span>(sp_dd));</span><br><span class="line">            sp_dd.cbSize = <span class="keyword">sizeof</span>(sp_dd);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">long</span> res = SetupDiGetDeviceInterfaceDetail(h_dev_info, &amp;sp_did, psp_did, dw_size, &amp;dw_size, &amp;sp_dd);</span><br><span class="line">            <span class="keyword">if</span> (res) &#123;</span><br><span class="line">                <span class="keyword">const</span> <span class="keyword">auto</span> h_drive = CreateFile(psp_did-&gt;DevicePath, <span class="number">0</span>,</span><br><span class="line">                                                FILE_SHARE_READ | FILE_SHARE_WRITE, <span class="literal">NULL</span>, OPEN_EXISTING, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">                <span class="keyword">if</span> (h_drive != INVALID_HANDLE_VALUE) &#123;</span><br><span class="line">                    STORAGE_DEVICE_NUMBER sdn;</span><br><span class="line">                    DWORD dw_bytes_returned = <span class="number">0</span>;</span><br><span class="line">                    res = DeviceIoControl(h_drive, IOCTL_STORAGE_GET_DEVICE_NUMBER, <span class="literal">NULL</span>, <span class="number">0</span>, &amp;sdn, <span class="keyword">sizeof</span>(sdn), &amp;dw_bytes_returned, <span class="literal">NULL</span>);</span><br><span class="line">                    <span class="keyword">if</span> (res) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (disk_number == <span class="keyword">static_cast</span>&lt;<span class="keyword">long</span>&gt;(sdn.DeviceNumber)) &#123;</span><br><span class="line">                            CloseHandle(h_drive);</span><br><span class="line">                            SetupDiDestroyDeviceInfoList(h_dev_info);</span><br><span class="line">                            <span class="keyword">return</span> sp_dd.DevInst;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    CloseHandle(h_drive);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            HeapFree(GetProcessHeap(), <span class="number">0</span>, psp_did);</span><br><span class="line">        &#125;</span><br><span class="line">        dw_index++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SetupDiDestroyDeviceInfoList(h_dev_info);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">UsbDrivesManager::EjectUsbDisk</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> disk_number)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> dev_inst = GetDrivesDevInstByDiskNumber(disk_number);</span><br><span class="line">    <span class="keyword">if</span> (dev_inst == <span class="number">0</span>) &#123;</span><br><span class="line">        qDebug(<span class="string">&quot;GetDrivesDevInstDiskNumber failed\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ULONG status = <span class="number">0</span>;</span><br><span class="line">    ULONG problem_number = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">auto</span> veto_type = PNP_VetoTypeUnknown;</span><br><span class="line">    <span class="keyword">wchar_t</span> veto_name[MAX_PATH];</span><br><span class="line">    <span class="keyword">auto</span> b_success = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> res = CM_Get_Parent(&amp;dev_inst, dev_inst, <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">if</span> (res != CR_SUCCESS)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	res = CM_Get_DevNode_Status(&amp;status, &amp;problem_number, dev_inst, <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">if</span> (res != CR_SUCCESS)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">auto</span> is_removable = ((status &amp; DN_REMOVABLE) != <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    qDebug(<span class="string">&quot;is removable:%d\n&quot;</span>, is_removable);</span><br><span class="line">    <span class="comment">// try 3 times</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        veto_name[<span class="number">0</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (is_removable)</span><br><span class="line">            res = CM_Request_Device_Eject(dev_inst, &amp;veto_type, veto_name, MAX_PATH, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            res = CM_Query_And_Remove_SubTree(dev_inst, &amp;veto_type, veto_name, MAX_PATH, <span class="number">0</span>);</span><br><span class="line">        b_success = (res == CR_SUCCESS &amp;&amp; veto_name[<span class="number">0</span>] == <span class="string">&#x27;\0&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (b_success)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            Sleep(<span class="number">300</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (b_success)</span><br><span class="line">        qDebug(<span class="string">&quot;Success\n\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<div class="note info flat"><p>上面代码的函数用到的参数可以根据 <strong>STORAGE_DEVICE_NUMBER</strong>下的<strong>DeviceNumber</strong>进行获取<br />
使用 <strong>CM_Request_Device_Eject</strong> 函数，请加上 <strong>#pragma comment(lib, “setupapi.lib”)</strong> 以及 <strong>#include &lt;cfgmgr32.h&gt;</strong><br />
否则会编译失败，提示 <strong>无法解析的外部符号</strong></p>
</div>
<h2 id="彩蛋"><a class="markdownIt-Anchor" href="#彩蛋"></a> 彩蛋</h2>
<p>其实我用IDA和procexp企图看火绒的U盘弹出函数或者调用的API的</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-9/BogImages/1586441793216.png" alt="MarxCBR的小屋" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-9/BogImages/1586442039050.png" alt="MarxCBR的小屋" /></p>
<p>结果就是失败了，哈哈哈，果然<strong>菜是原罪</strong>啊<br />
不过由此得知了火绒的界面是用DuiLib开发的，哈哈哈</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>在VS2017中配置CppCheck代码静态检查工具</title>
    <url>/archives/db7259e3.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>最近代码写的稍微有点多，有写新功能，也有做旧代码的重构<br />
回顾之前的代码，总是感觉当年写的像一坨翔~<br />
这写的都是啥呀，哇~好丑的格式、好烂的代码……<br />
运行起来的时候，哇~又崩了~哇又引发异常了~怎么又访问冲突了呀</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-3/BogImages/1585896957485.png" alt="MarxCBR的小屋" /></p>
<p>所以，我们不能单靠VS自带的检查工具，虽然它也能检查出一些问题。但是我显然需要更强大的检查扫描工具<br />
鉴于之前在华为实习时将代码丢到CI/CD中被<strong>PCLint</strong>吊锤，无限警告报错的经历<br />
我第一时间就想到了配置PCLint。然后查了一下，卧槽，要收费？没钱没钱~<br />
接着就开源真香系列，CppCheck 启动！</p>
<h2 id="简单介绍一下cppcheck"><a class="markdownIt-Anchor" href="#简单介绍一下cppcheck"></a> 简单介绍一下CppCheck</h2>
<blockquote>
<p>Cppcheck是一种用于C和C ++ 编程语言的静态代码分析工具。 它是一个多功能工具，可以检查非标准代码。 [2] 创始人和首席开发人员是DanielMarjamäki。<br />
Cppcheck是GNU通用公共许可证下的免费软件 。</p>
<ul>
<li>来自维基百科解释 <a href="https://zh.wikipedia.org/wiki/Cppcheck">Cppcheck</a></li>
</ul>
</blockquote>
<h2 id="开始安装搭建"><a class="markdownIt-Anchor" href="#开始安装搭建"></a> 开始安装搭建</h2>
<h3 id="到官网下载msi"><a class="markdownIt-Anchor" href="#到官网下载msi"></a> 到官网下载msi</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-3/BogImages/1585897700228.png" alt="MarxCBR的小屋" /></p>
<p>我们<a href="https://github.com/danmar/cppcheck/releases">点击链接</a>下载文件</p>
<h3 id="双击打开msi安装包按照默认下一步即可"><a class="markdownIt-Anchor" href="#双击打开msi安装包按照默认下一步即可"></a> 双击打开msi安装包，按照默认下一步即可</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-2/BogImages/1585817194646.png" alt="MarxCBR的小屋" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-2/BogImages/1585817218184.png" alt="MarxCBR的小屋" /></p>
<h3 id="安装vs的插件"><a class="markdownIt-Anchor" href="#安装vs的插件"></a> 安装VS的插件</h3>
<p>在扩展和更新里面搜索安装</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-3/BogImages/1585897820994.png" alt="MarxCBR的小屋" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-2/BogImages/1585817307359.png" alt="MarxCBR的小屋" /></p>
<p>这里有意思的是，你在里面点下载之后，他会给你“虚晃一枪”给他把github仓库的链接给你打开了。然后自己点击下载就可</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-2/BogImages/1585817290927.png" alt="MarxCBR的小屋" /></p>
<p>双击安装，他会提示你关掉VS</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-2/BogImages/1585817329382.png" alt="MarxCBR的小屋" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-2/BogImages/1585817381605.png" alt="MarxCBR的小屋" /></p>
<h2 id="测试使用"><a class="markdownIt-Anchor" href="#测试使用"></a> 测试使用</h2>
<h3 id="vs直接编译"><a class="markdownIt-Anchor" href="#vs直接编译"></a> VS直接编译</h3>
<p>这里我测试两个项目</p>
<p>之前文章用到的dll的代码编译结果<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-3/BogImages/1585898026077.png" alt="MarxCBR的小屋" /></p>
<p>之前文章提到的毕业设计的代码编译结果<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-2/BogImages/1585817563127.png" alt="MarxCBR的小屋" /></p>
<p>可以看到VS一个问题都没给我找到</p>
<h3 id="在vs里面用cppcheck分析扫描一下"><a class="markdownIt-Anchor" href="#在vs里面用cppcheck分析扫描一下"></a> 在VS里面用CppCheck分析扫描一下</h3>
<p>毕业设计的代码扫描结果，上来就给我警告内存泄露、未使用的变量等等提示</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-2/BogImages/1585817639691.png" alt="MarxCBR的小屋" /></p>
<p>根据提示，修正之后，再扫描一次</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-2/BogImages/1585817799527.png" alt="MarxCBR的小屋" /></p>
<p>扫描一下DLL的那个项目的代码</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-3/BogImages/1585898308038.png" alt="MarxCBR的小屋" /></p>
<p>当然也给我挑出了那些越界的，未使用的变量和函数等问题</p>
<p>举个栗子，这个代码显然越界了，对应了上图230行的警告。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> buffer[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">ReadProcessMemory(pubgHandle, (LPVOID)GetModuleBaseAddress(g_pid, processName), buffer, <span class="number">2</span>, <span class="literal">NULL</span>);</span><br><span class="line">buffer[<span class="number">3</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="直接使用gui客户端"><a class="markdownIt-Anchor" href="#直接使用gui客户端"></a> 直接使用GUI客户端</h3>
<p>可以在客户端里面打开项目进行扫描分析</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-3/BogImages/1585898676469.png" alt="MarxCBR的小屋" /></p>
<p>综合来说，好评哦，搭建配置这么简单，就可以提高自己的代码规范，血赚有没有！</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>C++</category>
        <category>Visual Studio</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Visual Studio</tag>
        <tag>安全</tag>
        <tag>静态检查</tag>
      </tags>
  </entry>
  <entry>
    <title>利用 Detours Hook CreateProcess 实现进程启动拦截</title>
    <url>/archives/79a50542.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>为什么要去利用 detours 进行 Hook CreateProcess 实现进程启动拦截<br />
因为学弟问到了这个问题，就结合之前发出来的那个 Hook OpenProcess 的手法一起给做出来了</p>
<p>进程启动拦截的作用</p>
<ul>
<li>监控启动的进程，最近有什么进程启动过</li>
<li>在进程启动前可以被我进行一些操作，比如<strong>扫描是否有毒</strong>，有问题劳资就不给他启动了，对吧</li>
</ul>
<p>所以，就做了一下这个~</p>
<p>我们知道 detours 是需要 一个和原函数声明一样的假冒函数的，所以，可以大部分参考<a href="https://www.marxcbr.cn/archives/1dd9aa1.html">之前那篇文章</a>进行处理</p>
<p>这次代码贴的有点多，所以，就直接先给大家看看效果<br />
想先看代码建议直接拖到最后看代码。</p>
<h2 id="效果"><a class="markdownIt-Anchor" href="#效果"></a> 效果</h2>
<p>Gif文件过大，不适用放到博客中，请点击打开github查看<br />
<a href="https://github.com/97CBR/VS2017/blob/master/%E5%90%AF%E5%8A%A8%E7%9B%91%E6%8E%A7.gif">效果GIF</a></p>
<h2 id="安装detours"><a class="markdownIt-Anchor" href="#安装detours"></a> 安装detours</h2>
<p>我在这里使用的办法，虽然是最不硬核的办法，但是可能是最节省时间的办法<br />
那就是在<strong>NuGet</strong>里面安装</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-31/BogImages/1585663612306.png" alt="enter description here" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-31/BogImages/1585663665739.png" alt="enter description here" /></p>
<h2 id="创建准备注入的dll项目"><a class="markdownIt-Anchor" href="#创建准备注入的dll项目"></a> 创建准备注入的dll项目</h2>
<p>创建新项目去创建一个dll项目</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-31/BogImages/1585663805600.png" alt="enter description here" /></p>
<h2 id="声明我们需要的自己的-新-旧-createprocess-函数"><a class="markdownIt-Anchor" href="#声明我们需要的自己的-新-旧-createprocess-函数"></a> 声明我们需要的自己的 新-旧 CreateProcess 函数</h2>
<p>注意Windows有两个CreateProcess，</p>
<ul>
<li>一个是 CreateProcessA</li>
<li>一个是 CreateProcessW</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="title">BOOL</span><span class="params">(WINAPI* pCreateProcessA)</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPCSTR lpApplicationName,</span></span></span><br><span class="line"><span class="function"><span class="params">	_Inout_opt_ LPSTR lpCommandLine,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_ BOOL bInheritHandles,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_ DWORD dwCreationFlags,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPVOID lpEnvironment,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPCSTR lpCurrentDirectory,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_ LPSTARTUPINFOA lpStartupInfo,</span></span></span><br><span class="line"><span class="function"><span class="params">	_Out_ LPPROCESS_INFORMATION lpProcessInformation</span></span></span><br><span class="line"><span class="function"><span class="params">)</span> </span>= CreateProcessA;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="title">BOOL</span><span class="params">(WINAPI* pCreateProcessW)</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPCWSTR lpApplicationName,</span></span></span><br><span class="line"><span class="function"><span class="params">    _Inout_opt_ LPWSTR lpCommandLine,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_ BOOL bInheritHandles,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_ DWORD dwCreationFlags,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPVOID lpEnvironment,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPCWSTR lpCurrentDirectory,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_ LPSTARTUPINFOW lpStartupInfo,</span></span></span><br><span class="line"><span class="function"><span class="params">    _Out_ LPPROCESS_INFORMATION lpProcessInformation</span></span></span><br><span class="line"><span class="function"><span class="params">)</span> </span>= CreateProcessW;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL WINAPI <span class="title">newCreateProcessA</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPCSTR lpApplicationName,</span></span></span><br><span class="line"><span class="function"><span class="params">	_Inout_opt_ LPSTR lpCommandLine,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_ BOOL bInheritHandles,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_ DWORD dwCreationFlags,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPVOID lpEnvironment,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPCSTR lpCurrentDirectory,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_ LPSTARTUPINFOA lpStartupInfo,</span></span></span><br><span class="line"><span class="function"><span class="params">	_Out_ LPPROCESS_INFORMATION lpProcessInformation)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> text[<span class="number">128</span>];</span><br><span class="line">    <span class="built_in">sprintf</span>(text, <span class="string">&quot;HOOKing！: %s \n&quot;</span>, lpApplicationName);</span><br><span class="line">    MessageBox(<span class="number">0</span>, text, TEXT(<span class="string">&quot;提示&quot;</span>), MB_OK);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 假设我们只拦截禁止 cmd 启动</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(lpApplicationName, <span class="string">&quot;C:\\Windows\\System32\\cmd.exe&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">        TCHAR  text[<span class="number">128</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">        wsprintf(text, <span class="string">&quot;HOOKing！禁止启动: %s \n&quot;</span>, lpApplicationName);</span><br><span class="line">        MessageBox(<span class="number">0</span>, text, TEXT(<span class="string">&quot;提示&quot;</span>), MB_OK);</span><br><span class="line">        SetLastError(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pCreateProcessA(</span><br><span class="line">               lpApplicationName,</span><br><span class="line">               lpCommandLine,</span><br><span class="line">               lpProcessAttributes,</span><br><span class="line">               lpThreadAttributes,</span><br><span class="line">               bInheritHandles,</span><br><span class="line">               dwCreationFlags,</span><br><span class="line">               lpEnvironment,</span><br><span class="line">               lpCurrentDirectory,</span><br><span class="line">               lpStartupInfo,</span><br><span class="line">               lpProcessInformation</span><br><span class="line">           );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL WINAPI <span class="title">newCreateProcessW</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPCWSTR lpApplicationName,</span></span></span><br><span class="line"><span class="function"><span class="params">    _Inout_opt_ LPWSTR lpCommandLine,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_ BOOL bInheritHandles,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_ DWORD dwCreationFlags,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPVOID lpEnvironment,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPCWSTR lpCurrentDirectory,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_ LPSTARTUPINFOW lpStartupInfo,</span></span></span><br><span class="line"><span class="function"><span class="params">    _Out_ LPPROCESS_INFORMATION lpProcessInformation)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    TCHAR  text[<span class="number">128</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    wsprintf(text, <span class="string">&quot;HOOKing！: %s \n&quot;</span>, lpApplicationName);</span><br><span class="line">    MessageBox(<span class="number">0</span>, text, TEXT(<span class="string">&quot;提示&quot;</span>), MB_OK);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 假设我们只拦截禁止 cmd 启动</span></span><br><span class="line">    <span class="keyword">if</span> (_wcsicmp(lpApplicationName, <span class="string">L&quot;C:\\Windows\\System32\\cmd.exe&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        TCHAR  text[<span class="number">128</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">        wsprintf(text, <span class="string">&quot;HOOKing！禁止启动: %s \n&quot;</span>, lpApplicationName);</span><br><span class="line">        MessageBox(<span class="number">0</span>, text, TEXT(<span class="string">&quot;提示&quot;</span>), MB_OK);</span><br><span class="line">        SetLastError(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pCreateProcessW(</span><br><span class="line">               lpApplicationName,</span><br><span class="line">               lpCommandLine,</span><br><span class="line">               lpProcessAttributes,</span><br><span class="line">               lpThreadAttributes,</span><br><span class="line">               bInheritHandles,</span><br><span class="line">               dwCreationFlags,</span><br><span class="line">               lpEnvironment,</span><br><span class="line">               lpCurrentDirectory,</span><br><span class="line">               lpStartupInfo,</span><br><span class="line">               lpProcessInformation</span><br><span class="line">           );</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="声明dll共享节做-hook-的控制"><a class="markdownIt-Anchor" href="#声明dll共享节做-hook-的控制"></a> 声明DLL共享节，做 Hook 的控制</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//共享代码段</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> data_seg(<span class="meta-string">&quot;SHARED&quot;</span>)</span></span><br><span class="line"></span><br><span class="line">HHOOK g_hOpenProcessHook = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">BOOL g_bStopHook = FALSE;</span><br><span class="line">BOOL g_bHookInstalled = FALSE;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> data_seg()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, <span class="meta-string">&quot;/section:SHARED,RWS&quot;</span>)</span></span><br></pre></td></tr></table></figure>
<h2 id="利用setwindowshookex进行全局hook"><a class="markdownIt-Anchor" href="#利用setwindowshookex进行全局hook"></a> 利用SetWindowsHookEx进行全局HOOK</h2>
<p>在OpenProcessHookProc这个回调函数中进行处理我们的HOOK</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导出函数 加载全局钩子</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> __declspec(dllexport) <span class="function">BOOL <span class="title">SetGoableHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    g_bStopHook = FALSE;</span><br><span class="line"></span><br><span class="line">    g_hOpenProcessHook = SetWindowsHookEx(WH_GETMESSAGE,</span><br><span class="line">                                          CreateProcessHookProc,</span><br><span class="line">                                          ModuleFromAddress(CreateProcessHookProc), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (g_hOpenProcessHook == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">char</span> text[<span class="number">30</span>];</span><br><span class="line">        wsprintf(text, <span class="string">&quot;HOOK失败！error : %d n&quot;</span>, GetLastError());</span><br><span class="line">        MessageBox(<span class="number">0</span>, text, TEXT(<span class="string">&quot;错误&quot;</span>), MB_OK);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="调用这个-拦截启动hook的方法"><a class="markdownIt-Anchor" href="#调用这个-拦截启动hook的方法"></a> 调用这个 拦截启动HOOK的方法</h2>
<p>声明两个函数、一个是进行HOOK函数、一个是取消HOOK的函数，可以灵活处理</p>
<p><strong>此代码处于另一软件项目</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">forLong::myhook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ui.label-&gt;setText(<span class="string">&quot;hooking&quot;</span>);</span><br><span class="line">    HINSTANCE hDLL = ::LoadLibrary(<span class="string">L&quot;MarxHook.dll&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (hDLL) &#123;</span><br><span class="line"></span><br><span class="line">        PFN_setData setData = (PFN_setData)::GetProcAddress(hDLL, <span class="string">&quot;setData&quot;</span>);</span><br><span class="line">        PFN_getData getData = (PFN_getData)::GetProcAddress(hDLL, <span class="string">&quot;getData&quot;</span>);</span><br><span class="line">        SetGoableHook func = (SetGoableHook)GetProcAddress(hDLL, <span class="string">&quot;SetGoableHook&quot;</span>);</span><br><span class="line">        qDebug() &lt;&lt; (<span class="keyword">int</span>)getpid() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        setData((<span class="keyword">int</span>)getpid());</span><br><span class="line">        <span class="keyword">int</span> s = getData();</span><br><span class="line">        func();</span><br><span class="line">        <span class="comment">/*qDebug() &lt;&lt;  &lt;&lt; endl;*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">forLong::unhook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ui.label-&gt;setText(<span class="string">&quot;unhook&quot;</span>);</span><br><span class="line">    HINSTANCE hDLL = ::LoadLibrary(<span class="string">L&quot;MarxHook.dll&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (hDLL) &#123;</span><br><span class="line">        DropGoableHook func = (DropGoableHook)GetProcAddress(hDLL, <span class="string">&quot;DropGoableHook&quot;</span>);</span><br><span class="line">        func();</span><br><span class="line">        PFN_setData setData = (PFN_setData)::GetProcAddress(hDLL, <span class="string">&quot;setData&quot;</span>);</span><br><span class="line">        PFN_getData getData = (PFN_getData)::GetProcAddress(hDLL, <span class="string">&quot;getData&quot;</span>);</span><br><span class="line">        setData(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">//int s = getData();</span></span><br><span class="line">        func();</span><br><span class="line">        <span class="comment">/*   qDebug() &lt;&lt; getData() &lt;&lt; endl;*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="整个dll项目代码一起给出来吧"><a class="markdownIt-Anchor" href="#整个dll项目代码一起给出来吧"></a> 整个dll项目代码一起给出来吧</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;detours.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;TlHelp32.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> HMODULE s_hDll;</span><br><span class="line"><span class="comment">//共享代码段</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> data_seg(<span class="meta-string">&quot;SHARED&quot;</span>)</span></span><br><span class="line">HHOOK g_hMessageHook = <span class="literal">NULL</span>;</span><br><span class="line">HHOOK g_hOpenProcessHook = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">BOOL g_bStopHook = FALSE;</span><br><span class="line">BOOL g_bHookInstalled = FALSE;</span><br><span class="line">DWORD g_pid = <span class="number">74144</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> data_seg()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, <span class="meta-string">&quot;/section:SHARED,RWS&quot;</span>)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="title">HANDLE</span><span class="params">(WINAPI* pOpenProcess)</span><span class="params">(DWORD dwDesiredAccess, BOOL bInheritHandle, DWORD dwProcessId)</span> </span>= OpenProcess;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="title">BOOL</span><span class="params">(WINAPI* pCreateProcessA)</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPCSTR lpApplicationName,</span></span></span><br><span class="line"><span class="function"><span class="params">	_Inout_opt_ LPSTR lpCommandLine,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_ BOOL bInheritHandles,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_ DWORD dwCreationFlags,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPVOID lpEnvironment,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPCSTR lpCurrentDirectory,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_ LPSTARTUPINFOA lpStartupInfo,</span></span></span><br><span class="line"><span class="function"><span class="params">	_Out_ LPPROCESS_INFORMATION lpProcessInformation</span></span></span><br><span class="line"><span class="function"><span class="params">)</span> </span>= CreateProcessA;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="title">BOOL</span><span class="params">(WINAPI* pCreateProcessW)</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPCWSTR lpApplicationName,</span></span></span><br><span class="line"><span class="function"><span class="params">    _Inout_opt_ LPWSTR lpCommandLine,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_ BOOL bInheritHandles,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_ DWORD dwCreationFlags,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPVOID lpEnvironment,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPCWSTR lpCurrentDirectory,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_ LPSTARTUPINFOW lpStartupInfo,</span></span></span><br><span class="line"><span class="function"><span class="params">    _Out_ LPPROCESS_INFORMATION lpProcessInformation</span></span></span><br><span class="line"><span class="function"><span class="params">)</span> </span>= CreateProcessW;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">GetProcID</span><span class="params">(<span class="keyword">char</span>* procName)</span></span>;</span><br><span class="line"></span><br><span class="line">HANDLE pubgHandle = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">char</span>* processName = (<span class="keyword">char</span>*)<span class="string">&quot;forLong.exe&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">HANDLE WINAPI <span class="title">hOpenProcess</span><span class="params">(DWORD dwDesiredAccess, BOOL bInheritHandle, DWORD dwProcessId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//if (GetProcID(processName) == dwProcessId) &#123;</span></span><br><span class="line">    <span class="keyword">if</span> (g_pid == dwProcessId) &#123;</span><br><span class="line">        dwDesiredAccess = PROCESS_VM_READ | PROCESS_VM_WRITE | PROCESS_QUERY_INFORMATION;</span><br><span class="line">        pubgHandle = pOpenProcess(dwDesiredAccess, bInheritHandle, dwProcessId);</span><br><span class="line">        SetLastError(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pOpenProcess(dwDesiredAccess, bInheritHandle, dwProcessId);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//CreateProcess</span></span><br><span class="line"><span class="function">BOOL WINAPI <span class="title">newCreateProcessA</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPCSTR lpApplicationName,</span></span></span><br><span class="line"><span class="function"><span class="params">	_Inout_opt_ LPSTR lpCommandLine,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_ BOOL bInheritHandles,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_ DWORD dwCreationFlags,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPVOID lpEnvironment,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_opt_ LPCSTR lpCurrentDirectory,</span></span></span><br><span class="line"><span class="function"><span class="params">	_In_ LPSTARTUPINFOA lpStartupInfo,</span></span></span><br><span class="line"><span class="function"><span class="params">	_Out_ LPPROCESS_INFORMATION lpProcessInformation)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> text[<span class="number">128</span>];</span><br><span class="line">    <span class="built_in">sprintf</span>(text, <span class="string">&quot;HOOKing！: %s \n&quot;</span>, lpApplicationName);</span><br><span class="line">    MessageBox(<span class="number">0</span>, text, TEXT(<span class="string">&quot;提示&quot;</span>), MB_OK);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(lpApplicationName, <span class="string">&quot;C:\\Windows\\System32\\cmd.exe&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">        TCHAR  text[<span class="number">128</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">        wsprintf(text, <span class="string">&quot;HOOKing！禁止启动: %s \n&quot;</span>, lpApplicationName);</span><br><span class="line">        MessageBox(<span class="number">0</span>, text, TEXT(<span class="string">&quot;提示&quot;</span>), MB_OK);</span><br><span class="line"></span><br><span class="line">        SetLastError(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pCreateProcessA(</span><br><span class="line">               lpApplicationName,</span><br><span class="line">               lpCommandLine,</span><br><span class="line">               lpProcessAttributes,</span><br><span class="line">               lpThreadAttributes,</span><br><span class="line">               bInheritHandles,</span><br><span class="line">               dwCreationFlags,</span><br><span class="line">               lpEnvironment,</span><br><span class="line">               lpCurrentDirectory,</span><br><span class="line">               lpStartupInfo,</span><br><span class="line">               lpProcessInformation</span><br><span class="line">           );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL WINAPI <span class="title">newCreateProcessW</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPCWSTR lpApplicationName,</span></span></span><br><span class="line"><span class="function"><span class="params">    _Inout_opt_ LPWSTR lpCommandLine,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_ BOOL bInheritHandles,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_ DWORD dwCreationFlags,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPVOID lpEnvironment,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_opt_ LPCWSTR lpCurrentDirectory,</span></span></span><br><span class="line"><span class="function"><span class="params">    _In_ LPSTARTUPINFOW lpStartupInfo,</span></span></span><br><span class="line"><span class="function"><span class="params">    _Out_ LPPROCESS_INFORMATION lpProcessInformation)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    TCHAR  text[<span class="number">128</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">    wsprintf(text, <span class="string">&quot;HOOKing！: %s \n&quot;</span>, lpApplicationName);</span><br><span class="line">    MessageBox(<span class="number">0</span>, text, TEXT(<span class="string">&quot;提示&quot;</span>), MB_OK);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (_wcsicmp(lpApplicationName, <span class="string">L&quot;C:\\Windows\\System32\\cmd.exe&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">        TCHAR  text[<span class="number">128</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">        wsprintf(text, <span class="string">&quot;HOOKing！禁止启动: %s \n&quot;</span>, lpApplicationName);</span><br><span class="line">        MessageBox(<span class="number">0</span>, text, TEXT(<span class="string">&quot;提示&quot;</span>), MB_OK);</span><br><span class="line"></span><br><span class="line">        SetLastError(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pCreateProcessW(</span><br><span class="line">               lpApplicationName,</span><br><span class="line">               lpCommandLine,</span><br><span class="line">               lpProcessAttributes,</span><br><span class="line">               lpThreadAttributes,</span><br><span class="line">               bInheritHandles,</span><br><span class="line">               dwCreationFlags,</span><br><span class="line">               lpEnvironment,</span><br><span class="line">               lpCurrentDirectory,</span><br><span class="line">               lpStartupInfo,</span><br><span class="line">               lpProcessInformation</span><br><span class="line">           );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//查找函数地址</span></span><br><span class="line"><span class="function">HMODULE WINAPI <span class="title">ModuleFromAddress</span><span class="params">(PVOID pv)</span> </span>&#123;</span><br><span class="line">    MEMORY_BASIC_INFORMATION mbi;</span><br><span class="line">    <span class="keyword">if</span> (::VirtualQuery(pv, &amp;mbi, <span class="keyword">sizeof</span>(mbi)) != <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> (HMODULE)mbi.AllocationBase;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD_PTR <span class="title">GetModuleBaseAddress</span><span class="params">(DWORD pid, TCHAR* name)</span> </span>&#123;</span><br><span class="line">    DWORD_PTR baseAddress = <span class="literal">NULL</span>;</span><br><span class="line">    HANDLE hSnapshot = CreateToolhelp32Snapshot(TH32CS_SNAPMODULE, pid);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (hSnapshot == INVALID_HANDLE_VALUE)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    MODULEENTRY32 entry = &#123; <span class="literal">NULL</span> &#125;;</span><br><span class="line"></span><br><span class="line">    entry.dwSize = <span class="keyword">sizeof</span>(MODULEENTRY32);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!Module32First(hSnapshot, &amp;entry)) &#123;</span><br><span class="line">        CloseHandle(hSnapshot);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(entry.szModule, name)) &#123;</span><br><span class="line">            baseAddress = (DWORD_PTR)entry.modBaseAddr;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (Module32Next(hSnapshot, &amp;entry));</span><br><span class="line"></span><br><span class="line">    CloseHandle(hSnapshot);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> baseAddress;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">SetHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//如果已经安装就return</span></span><br><span class="line">    <span class="keyword">if</span> (g_bHookInstalled)</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">    DetourTransactionBegin();</span><br><span class="line">    DetourUpdateThread(GetCurrentThread());</span><br><span class="line"></span><br><span class="line">    DetourAttach((PVOID*)&amp;pOpenProcess, hOpenProcess);</span><br><span class="line">    DetourAttach((PVOID*)&amp;pCreateProcessA, newCreateProcessA);</span><br><span class="line">    DetourAttach((PVOID*)&amp;pCreateProcessW, newCreateProcessW);</span><br><span class="line"></span><br><span class="line">	DetourTransactionCommit();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (pubgHandle != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">char</span> buffer[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        ReadProcessMemory(pubgHandle, (LPVOID)GetModuleBaseAddress(g_pid, processName), buffer, <span class="number">2</span>, <span class="literal">NULL</span>);</span><br><span class="line">        buffer[<span class="number">3</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; buffer &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    g_bHookInstalled = TRUE;</span><br><span class="line">    <span class="keyword">return</span> g_bHookInstalled;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DropHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//如果已经卸载就return</span></span><br><span class="line">    <span class="keyword">if</span> (!g_bHookInstalled)<span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">    DetourTransactionBegin();</span><br><span class="line">    DetourUpdateThread(GetCurrentThread());</span><br><span class="line">    DetourDetach((PVOID*)&amp;pOpenProcess, hOpenProcess);</span><br><span class="line">    DetourDetach((PVOID*)&amp;pCreateProcessA, newCreateProcessA);</span><br><span class="line">    DetourDetach((PVOID*)&amp;pCreateProcessW, newCreateProcessW);</span><br><span class="line"></span><br><span class="line">    LONG ret = DetourTransactionCommit();</span><br><span class="line">    g_bHookInstalled = FALSE;</span><br><span class="line">    <span class="keyword">return</span> ret == NO_ERROR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> LRESULT CALLBACK <span class="title">CreateProcessHookProc</span><span class="params">(<span class="keyword">int</span> nCode, WPARAM wParam, LPARAM lParam)</span> </span>&#123;</span><br><span class="line">    PKBDLLHOOKSTRUCT p = (PKBDLLHOOKSTRUCT)lParam;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">wchar_t</span> Dir[_MAX_DIR];</span><br><span class="line">    <span class="keyword">wchar_t</span> FullPath[MAX_PATH]; <span class="comment">// [sp+200h] [bp-614h]@1</span></span><br><span class="line">    <span class="keyword">wchar_t</span> Ext[_MAX_EXT];</span><br><span class="line">    <span class="keyword">wchar_t</span> Filename[_MAX_FNAME];</span><br><span class="line">    <span class="keyword">wchar_t</span> Drive[_MAX_DRIVE];</span><br><span class="line">    GetModuleFileNameW(<span class="number">0</span>, FullPath, MAX_PATH);</span><br><span class="line">    _wsplitpath_s(FullPath, Drive, _MAX_DRIVE, Dir, _MAX_DIR, Filename, _MAX_FNAME, Ext, _MAX_EXT);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">wstring</span> tar = Filename;</span><br><span class="line"></span><br><span class="line">    transform(tar.begin(), tar.end(), tar.begin(), towlower);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//C:\Windows\explorer.exe</span></span><br><span class="line">    <span class="comment">//C:\Windows\System32\Taskmgr.exe</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((_wcsicmp(Filename, <span class="string">L&quot;explorer&quot;</span>) == <span class="number">0</span>) || (_wcsicmp(Filename, <span class="string">L&quot;taskmgr&quot;</span>) == <span class="number">0</span>)) &#123;</span><br><span class="line">        <span class="comment">//if (true) &#123;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//安装钩子</span></span><br><span class="line">        <span class="comment">//MessageBox(NULL, &quot;DLL_PROCESS_ATTACH taskmgr&quot;, &quot;info&quot;, MB_OK);</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!g_bStopHook)</span><br><span class="line">            SetHook();</span><br><span class="line">        <span class="comment">//卸载钩子</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            DropHook();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> CallNextHookEx(g_hOpenProcessHook, nCode, wParam, lParam);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//导出函数 加载全局钩子</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> __declspec(dllexport) <span class="function">BOOL <span class="title">SetGoableHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    g_bStopHook = FALSE;</span><br><span class="line"></span><br><span class="line">    g_hOpenProcessHook = SetWindowsHookEx(WH_GETMESSAGE,</span><br><span class="line">                                          CreateProcessHookProc,</span><br><span class="line">                                          ModuleFromAddress(CreateProcessHookProc), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (g_hOpenProcessHook == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">char</span> text[<span class="number">30</span>];</span><br><span class="line">        wsprintf(text, <span class="string">&quot;HOOK失败！error : %d n&quot;</span>, GetLastError());</span><br><span class="line">        MessageBox(<span class="number">0</span>, text, TEXT(<span class="string">&quot;错误&quot;</span>), MB_OK);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//导出函数 卸载全局钩子</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> __declspec(dllexport) <span class="function">BOOL <span class="title">DropGoableHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    g_bStopHook = TRUE;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span>  __declspec(dllexport) <span class="function"><span class="keyword">void</span> <span class="title">setData</span><span class="params">(<span class="keyword">int</span> target_pid)</span> </span>&#123;</span><br><span class="line">    g_pid = target_pid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span>  __declspec(dllexport) <span class="function"><span class="keyword">int</span> <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> g_pid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">(HMODULE hModule,</span></span></span><br><span class="line"><span class="function"><span class="params">                      DWORD  ul_reason_for_call,</span></span></span><br><span class="line"><span class="function"><span class="params">                      LPVOID lpReserved</span></span></span><br><span class="line"><span class="function"><span class="params">                     )</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (ul_reason_for_call) &#123;</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">        s_hDll = hModule;</span><br><span class="line">        DisableThreadLibraryCalls(hModule);</span><br><span class="line">        <span class="comment">//SetGoableHook();</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_ATTACH:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_DETACH:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line">        <span class="comment">//DropGoableHook();</span></span><br><span class="line">        UnhookWindowsHookEx(g_hOpenProcessHook);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// dllmain.cpp : Defines the entry point for the DLL application.</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;detours.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;TlHelp32.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//共享代码段</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> data_seg(<span class="meta-string">&quot;SHARED&quot;</span>)</span></span><br><span class="line">HHOOK g_hMessageHook = <span class="literal">NULL</span>;</span><br><span class="line">HHOOK g_hOpenProcessHook = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">BOOL g_bStopHook = FALSE;</span><br><span class="line">BOOL g_bHookInstalled = FALSE;</span><br><span class="line">DWORD g_pid = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> data_seg()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, <span class="meta-string">&quot;/section:SHARED,RWS&quot;</span>)</span></span><br><span class="line"><span class="comment">//__declspec(allocate(&quot;SHARED&quot;))int g_pid=0;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> HMODULE s_hDll;</span><br><span class="line"></span><br><span class="line">HINSTANCE g_hInstance = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*显示GetLastError的信息*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showerr</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* m)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">char</span> message[<span class="number">255</span>];</span><br><span class="line">	FormatMessage(FORMAT_MESSAGE_FROM_SYSTEM, <span class="number">0</span>, GetLastError()</span><br><span class="line">		, MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), message, <span class="number">255</span>, <span class="number">0</span>);</span><br><span class="line">	MessageBox(<span class="literal">NULL</span>, message, m, MB_OK);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">MyGetProcessId</span><span class="params">(<span class="keyword">char</span>* ProcessName)</span> </span>&#123;</span><br><span class="line">	PROCESSENTRY32 pe32;</span><br><span class="line">	pe32.dwSize = <span class="keyword">sizeof</span>(pe32);</span><br><span class="line">	<span class="comment">//获得系统内所有进程快照</span></span><br><span class="line">	HANDLE hProcessSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">if</span> (hProcessSnap == INVALID_HANDLE_VALUE)</span><br><span class="line">		<span class="keyword">return</span> FALSE;</span><br><span class="line">	<span class="comment">//枚举列表中的第一个进程</span></span><br><span class="line">	BOOL bProcess = Process32First(hProcessSnap, &amp;pe32);</span><br><span class="line">	<span class="keyword">while</span> (bProcess) &#123;</span><br><span class="line">		<span class="comment">//比较得到的进程名和要保护的进程名是否相同</span></span><br><span class="line">		<span class="keyword">if</span> (stricmp(pe32.szExeFile, ProcessName) == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="comment">//相同则返回此进程ID</span></span><br><span class="line">			<span class="keyword">return</span> pe32.th32ProcessID;</span><br><span class="line">		&#125;</span><br><span class="line">		bProcess = Process32Next(hProcessSnap, &amp;pe32);</span><br><span class="line">	&#125;</span><br><span class="line">	CloseHandle(hProcessSnap);</span><br><span class="line">	<span class="comment">//否则返回0</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> ULONG_PTR  DWORD_PTR;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="title">HANDLE</span><span class="params">(WINAPI* pOpenProcess)</span><span class="params">(DWORD dwDesiredAccess, BOOL bInheritHandle, DWORD dwProcessId)</span> </span>= OpenProcess;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">GetProcID</span><span class="params">(<span class="keyword">char</span>* procName)</span></span>;</span><br><span class="line"></span><br><span class="line">HANDLE pubgHandle = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">char</span>* processName = (<span class="keyword">char</span>*)<span class="string">&quot;forLong.exe&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">HANDLE WINAPI <span class="title">hOpenProcess</span><span class="params">(DWORD dwDesiredAccess, BOOL bInheritHandle, DWORD dwProcessId)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//if (GetProcID(processName) == dwProcessId) &#123;</span></span><br><span class="line">	<span class="keyword">if</span> (g_pid == dwProcessId) &#123;</span><br><span class="line">		dwDesiredAccess = PROCESS_VM_READ | PROCESS_VM_WRITE | PROCESS_QUERY_INFORMATION;</span><br><span class="line">		pubgHandle = pOpenProcess(dwDesiredAccess, bInheritHandle, dwProcessId);</span><br><span class="line">		SetLastError(<span class="number">5</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> pOpenProcess(dwDesiredAccess, bInheritHandle, dwProcessId);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">GetProcID</span><span class="params">(<span class="keyword">char</span>* procName)</span> </span>&#123;</span><br><span class="line">	PROCESSENTRY32 pe32;</span><br><span class="line">	HANDLE hSnapshot = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	pe32.dwSize = <span class="keyword">sizeof</span>(PROCESSENTRY32);</span><br><span class="line">	hSnapshot = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (Process32First(hSnapshot, &amp;pe32)) &#123;</span><br><span class="line">		<span class="keyword">do</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (<span class="built_in">strcmp</span>(pe32.szExeFile, procName) == <span class="number">0</span>)</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125; <span class="keyword">while</span> (Process32Next(hSnapshot, &amp;pe32));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (hSnapshot != INVALID_HANDLE_VALUE)</span><br><span class="line">		CloseHandle(hSnapshot);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> pe32.th32ProcessID;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD_PTR <span class="title">GetModuleBaseAddress</span><span class="params">(DWORD pid, TCHAR* name)</span> </span>&#123;</span><br><span class="line">	DWORD_PTR baseAddress = <span class="literal">NULL</span>;</span><br><span class="line">	HANDLE hSnapshot = CreateToolhelp32Snapshot(TH32CS_SNAPMODULE, pid);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (hSnapshot == INVALID_HANDLE_VALUE)</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	MODULEENTRY32 entry = &#123; <span class="literal">NULL</span> &#125;;</span><br><span class="line"></span><br><span class="line">	entry.dwSize = <span class="keyword">sizeof</span>(MODULEENTRY32);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (!Module32First(hSnapshot, &amp;entry)) &#123;</span><br><span class="line">		CloseHandle(hSnapshot);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">do</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (!<span class="built_in">strcmp</span>(entry.szModule, name)) &#123;</span><br><span class="line">			baseAddress = (DWORD_PTR)entry.modBaseAddr;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">while</span> (Module32Next(hSnapshot, &amp;entry));</span><br><span class="line"></span><br><span class="line">	CloseHandle(hSnapshot);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> baseAddress;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hookOpenProcess</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//AllocConsole();</span></span><br><span class="line">	DetourTransactionBegin();</span><br><span class="line">	DetourUpdateThread(GetCurrentThread());</span><br><span class="line">	DetourAttach((PVOID*)&amp;pOpenProcess, hOpenProcess);</span><br><span class="line">	DetourTransactionCommit();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (pubgHandle != <span class="literal">NULL</span>) &#123;</span><br><span class="line">		<span class="keyword">char</span> buffer[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">		ReadProcessMemory(pubgHandle, (LPVOID)GetModuleBaseAddress(g_pid, processName), buffer, <span class="number">2</span>, <span class="literal">NULL</span>);</span><br><span class="line">		buffer[<span class="number">3</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; buffer &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">SetHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//如果已经安装就return</span></span><br><span class="line">	<span class="keyword">if</span> (g_bHookInstalled)</span><br><span class="line">		<span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">	CreateThread(<span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="keyword">reinterpret_cast</span>&lt;LPTHREAD_START_ROUTINE&gt;(hookOpenProcess), <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//CreateThread(NULL, NULL, reinterpret_cast&lt;LPTHREAD_START_ROUTINE&gt;(watch_task), NULL, NULL, NULL);</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//char text[30];</span></span><br><span class="line">	<span class="comment">//wsprintf(text, &quot;HOOK 启动！: %ld&quot;, GetCurrentThread());</span></span><br><span class="line">	<span class="comment">//MessageBox(0, text, TEXT(&quot;OK&quot;), MB_OK);</span></span><br><span class="line"></span><br><span class="line">	g_bHookInstalled = TRUE;</span><br><span class="line">	<span class="keyword">return</span> g_bHookInstalled;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DropHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//如果已经卸载就return</span></span><br><span class="line">	<span class="keyword">if</span> (!g_bHookInstalled)<span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//char text[30];</span></span><br><span class="line">	<span class="comment">//wsprintf(text, &quot;HOOK 解除！: %d&quot;, GetLastError());</span></span><br><span class="line">	<span class="comment">//MessageBox(0, text, TEXT(&quot;错误&quot;), MB_OK);</span></span><br><span class="line"></span><br><span class="line">	DetourTransactionBegin();</span><br><span class="line">	DetourUpdateThread(GetCurrentThread());</span><br><span class="line">	DetourDetach((PVOID*)&amp;pOpenProcess, hOpenProcess);</span><br><span class="line"></span><br><span class="line">	LONG ret = DetourTransactionCommit();</span><br><span class="line">	g_bHookInstalled = FALSE;</span><br><span class="line">	<span class="keyword">return</span> ret == NO_ERROR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查找函数地址</span></span><br><span class="line"><span class="function">HMODULE WINAPI <span class="title">ModuleFromAddress</span><span class="params">(PVOID pv)</span> </span>&#123;</span><br><span class="line">	MEMORY_BASIC_INFORMATION mbi;</span><br><span class="line">	<span class="keyword">if</span> (::VirtualQuery(pv, &amp;mbi, <span class="keyword">sizeof</span>(mbi)) != <span class="number">0</span>)</span><br><span class="line">		<span class="keyword">return</span> (HMODULE)mbi.AllocationBase;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> LRESULT CALLBACK <span class="title">OpenProcessHookProc</span><span class="params">(<span class="keyword">int</span> nCode, WPARAM wParam, LPARAM lParam)</span> </span>&#123;</span><br><span class="line">	PKBDLLHOOKSTRUCT p = (PKBDLLHOOKSTRUCT)lParam;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">wchar_t</span> Dir[_MAX_DIR];</span><br><span class="line">	<span class="keyword">wchar_t</span> FullPath[MAX_PATH]; <span class="comment">// [sp+200h] [bp-614h]@1</span></span><br><span class="line">	<span class="keyword">wchar_t</span> Ext[_MAX_EXT];</span><br><span class="line">	<span class="keyword">wchar_t</span> Filename[_MAX_FNAME];</span><br><span class="line">	<span class="keyword">wchar_t</span> Drive[_MAX_DRIVE];</span><br><span class="line">	GetModuleFileNameW(<span class="number">0</span>, FullPath, MAX_PATH);</span><br><span class="line">	_wsplitpath_s(FullPath, Drive, _MAX_DRIVE, Dir, _MAX_DIR, Filename, _MAX_FNAME, Ext, _MAX_EXT);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">wstring</span> tar = Filename;</span><br><span class="line"></span><br><span class="line">	transform(tar.begin(), tar.end(), tar.begin(), towlower);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (_wcsicmp(Filename, <span class="string">L&quot;Taskmgr&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">		<span class="comment">//安装钩子</span></span><br><span class="line">		<span class="comment">//MessageBox(NULL, &quot;DLL_PROCESS_ATTACH taskmgr&quot;, &quot;info&quot;, MB_OK);</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (!g_bStopHook)</span><br><span class="line">			SetHook();</span><br><span class="line">		<span class="comment">//卸载钩子</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			DropHook();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> CallNextHookEx(g_hOpenProcessHook, nCode, wParam, lParam);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//导出函数 加载全局钩子</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> __declspec(dllexport) <span class="function">BOOL <span class="title">SetGoableHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	g_bStopHook = FALSE;</span><br><span class="line">	g_hOpenProcessHook = SetWindowsHookEx(WH_GETMESSAGE,</span><br><span class="line">		OpenProcessHookProc,</span><br><span class="line">		ModuleFromAddress(OpenProcessHookProc), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (g_hOpenProcessHook == <span class="literal">NULL</span>) &#123;</span><br><span class="line">		<span class="keyword">char</span> text[<span class="number">30</span>];</span><br><span class="line">		wsprintf(text, <span class="string">&quot;HOOK失败！error : %d n&quot;</span>, GetLastError());</span><br><span class="line">		MessageBox(<span class="number">0</span>, text, TEXT(<span class="string">&quot;错误&quot;</span>), MB_OK);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//导出函数 卸载全局钩子</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> __declspec(dllexport) <span class="function">BOOL <span class="title">DropGoableHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	g_bStopHook = TRUE;</span><br><span class="line">	<span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span>  __declspec(dllexport) <span class="function"><span class="keyword">void</span> <span class="title">setData</span><span class="params">(<span class="keyword">int</span> target_pid)</span> </span>&#123;</span><br><span class="line">	g_pid = target_pid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span>  __declspec(dllexport) <span class="function"><span class="keyword">int</span> <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> g_pid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">HMODULE WINAPI <span class="title">Detoured</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> s_hDll;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">(HMODULE hModule,</span></span></span><br><span class="line"><span class="function"><span class="params">	DWORD  ul_reason_for_call,</span></span></span><br><span class="line"><span class="function"><span class="params">	LPVOID lpReserved</span></span></span><br><span class="line"><span class="function"><span class="params">)</span> </span>&#123;</span><br><span class="line">	g_hInstance = (HINSTANCE)hModule;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">switch</span> (ul_reason_for_call) &#123;</span><br><span class="line">	<span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">		s_hDll = hModule;</span><br><span class="line">		DisableThreadLibraryCalls(hModule);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> DLL_THREAD_ATTACH:</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> DLL_THREAD_DETACH:</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line">		UnhookWindowsHookEx(g_hOpenProcessHook);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>Hook</tag>
        <tag>进程启动拦截</tag>
      </tags>
  </entry>
  <entry>
    <title>VS2017 调试DLL的操作办法</title>
    <url>/archives/cbfbcb33.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>最近在搞Hook这东西玩，但是，感觉这玩意玩起来有点玄学的意味呀<br />
所以，就想着用调试去揭开他的神秘面纱</p>
<h2 id="简单介绍一下dll"><a class="markdownIt-Anchor" href="#简单介绍一下dll"></a> 简单介绍一下DLL</h2>
<p>以下是来自百度百科的解释</p>
<blockquote>
<p>动态链接库英文为DLL，是Dynamic Link Library的缩写。DLL是一个包含可由多个程序，同时使用的代码和数据的库。在Windows中，这种文件被称为应用程序拓展。例如，在 Windows 操作系统中，Comdlg32.dll 执行与对话框有关的常见函数。因此，每个程序都可以使用该 DLL 中包含的功能来实现“打开”对话框。这有助于避免代码重用和促进内存的有效使用。 通过使用 DLL，程序可以实现模块化，由相对独立的组件组成。例如，一个计账程序可以按模块来销售。可以在运行时将各个模块加载到主程序中（如果安装了相应模块）。因为模块是彼此独立的，所以程序的加载速度更快，而且模块只在相应的功能被请求时才加载。</p>
</blockquote>
<h2 id="在vs2017中对dll工程进行设置"><a class="markdownIt-Anchor" href="#在vs2017中对dll工程进行设置"></a> 在VS2017中对DLL工程进行设置</h2>
<h3 id="进入项目设置"><a class="markdownIt-Anchor" href="#进入项目设置"></a> 进入项目设置</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-1/BogImages/1585721941987.png" alt="MarxCBR的小屋" /></p>
<p>这里可以分成两种调试办法，一种是非附加调试，另一种是附加到其他进程调试</p>
<p>区别是什么呢，下面分成两种说明</p>
<h3 id="非附加调试"><a class="markdownIt-Anchor" href="#非附加调试"></a> 非附加调试</h3>
<p>非附加调试，一般适用于：<br />
本地开发了一个软件，其中某些地方调用了 LoadLibrary 函数去加载我的DLL<br />
例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">HINSTANCE hDLL = ::LoadLibrary(<span class="string">L&quot;HOOK.dll&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (hDLL) &#123;</span><br><span class="line">    <span class="comment">// do your work</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个时候，我们要怎么设置项目配置呢<br />
按照以下步骤</p>
<ul>
<li>调试</li>
<li>本地Windows调试器</li>
<li>命令 即将调用到这个dll的exe</li>
<li>工作目录 .</li>
</ul>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-1/BogImages/1585722040334.png" alt="MarxCBR的小屋" /></p>
<h3 id="附加到其他进程调试"><a class="markdownIt-Anchor" href="#附加到其他进程调试"></a> 附加到其他进程调试</h3>
<p>附加到其他进程调试，一般适用于：<br />
本地开发了一个DLL，某个程序会明确的调用到我的DLL，或者，我们通过某些手段使得 目标程序 调用到了我的DLL<br />
例如： 我之前发的那篇文章，利用 detours Hook别人的函数，就需要注入dll。</p>
<p>这个时候，我们要怎么设置项目配置呢<br />
按照以下步骤</p>
<ul>
<li>调试</li>
<li>本地Windows调试器</li>
<li>命令 即将调用到这个dll的exe</li>
<li>附加 是</li>
</ul>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-1/BogImages/1585721992676.png" alt="MarxCBR的小屋" /></p>
<h2 id="测试一下调试效果"><a class="markdownIt-Anchor" href="#测试一下调试效果"></a> 测试一下调试效果</h2>
<p>我们启动会加载我们将要调试的DLL的进程</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-1/BogImages/1585722821253.png" alt="MarxCBR的小屋" /></p>
<h2 id="记录一下小坑"><a class="markdownIt-Anchor" href="#记录一下小坑"></a> 记录一下小坑</h2>
<p>在目标EXE未加载我们的DLL之前进行调试，是无法命中我们的断点的</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-1/BogImages/1585722365251.png" alt="MarxCBR的小屋" /></p>
<p>在目标进程加载我们的DLL之后，我们的调试则可以命中断点</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-4-1/BogImages/1585722506415.png" alt="MarxCBR的小屋" /></p>
<center> 要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正 </center>]]></content>
      <categories>
        <category>Visual Studio</category>
      </categories>
      <tags>
        <tag>Visual Studio</tag>
        <tag>调试</tag>
      </tags>
  </entry>
  <entry>
    <title>利用 Detours Hook OpenProcess 实现指定进程保护</title>
    <url>/archives/1dd9aa1.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>为什么要去利用 detours 进行 Hook OpenProcess 实现指定进程保护呢<br />
因为我的毕设是移动存储设备的安全监控<br />
所以，要求软件在电脑上运行的时候，不允许用户自由的关闭程序。得将自己保护起来，就像杀软一样，要先将自己保护好了，再去保护别人</p>
<h2 id="效果"><a class="markdownIt-Anchor" href="#效果"></a> 效果</h2>
<p>这次代码贴的有点多，所以，就直接先给大家看看效果</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/%E6%95%88%E6%9E%9C.gif" alt="" /></p>
<h2 id="安装detours"><a class="markdownIt-Anchor" href="#安装detours"></a> 安装detours</h2>
<p>我在这里使用的办法，虽然是最不硬核的办法，但是可能是最节省时间的办法<br />
那就是在<strong>NuGet</strong>里面安装</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-31/BogImages/1585663612306.png" alt="enter description here" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-31/BogImages/1585663665739.png" alt="enter description here" /></p>
<h2 id="创建准备注入的dll项目"><a class="markdownIt-Anchor" href="#创建准备注入的dll项目"></a> 创建准备注入的dll项目</h2>
<p>创建新项目去创建一个dll项目</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-31/BogImages/1585663805600.png" alt="enter description here" /></p>
<h2 id="声明我们需要的自己的-新-旧-openprocess函数"><a class="markdownIt-Anchor" href="#声明我们需要的自己的-新-旧-openprocess函数"></a> 声明我们需要的自己的 新-旧 OpenProcess函数</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="title">HANDLE</span><span class="params">(WINAPI* pOpenProcess)</span><span class="params">(DWORD dwDesiredAccess, BOOL bInheritHandle, DWORD dwProcessId)</span> </span>= OpenProcess;</span><br><span class="line"></span><br><span class="line"><span class="function">HANDLE WINAPI <span class="title">hOpenProcess</span><span class="params">(DWORD dwDesiredAccess, BOOL bInheritHandle, DWORD dwProcessId)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//if (GetProcID(processName) == dwProcessId) &#123;</span></span><br><span class="line">	<span class="keyword">if</span> (g_pid == dwProcessId) &#123;</span><br><span class="line">		dwDesiredAccess = PROCESS_VM_READ | PROCESS_VM_WRITE | PROCESS_QUERY_INFORMATION;</span><br><span class="line">		pubgHandle = pOpenProcess(dwDesiredAccess, bInheritHandle, dwProcessId);</span><br><span class="line">		SetLastError(<span class="number">5</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> pOpenProcess(dwDesiredAccess, bInheritHandle, dwProcessId);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="声明dll共享节将我们需要保护的进程pid什么的放进去"><a class="markdownIt-Anchor" href="#声明dll共享节将我们需要保护的进程pid什么的放进去"></a> 声明DLL共享节，将我们需要保护的进程pid什么的放进去</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//共享代码段</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> data_seg(<span class="meta-string">&quot;SHARED&quot;</span>)</span></span><br><span class="line"></span><br><span class="line">HHOOK g_hOpenProcessHook = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">BOOL g_bStopHook = FALSE;</span><br><span class="line">BOOL g_bHookInstalled = FALSE;</span><br><span class="line">DWORD g_pid = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> data_seg()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, <span class="meta-string">&quot;/section:SHARED,RWS&quot;</span>)</span></span><br></pre></td></tr></table></figure>
<h2 id="利用setwindowshookex进行全局hook"><a class="markdownIt-Anchor" href="#利用setwindowshookex进行全局hook"></a> 利用SetWindowsHookEx进行全局HOOK</h2>
<p>在OpenProcessHookProc这个回调函数中进行处理我们的HOOK</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//导出函数 加载全局钩子</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> __declspec(dllexport) <span class="function">BOOL <span class="title">SetGoableHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	g_bStopHook = FALSE;</span><br><span class="line">	g_hOpenProcessHook = SetWindowsHookEx(WH_GETMESSAGE,</span><br><span class="line">		OpenProcessHookProc,</span><br><span class="line">		ModuleFromAddress(OpenProcessHookProc), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (g_hOpenProcessHook == <span class="literal">NULL</span>) &#123;</span><br><span class="line">		<span class="keyword">char</span> text[<span class="number">30</span>];</span><br><span class="line">		wsprintf(text, <span class="string">&quot;HOOK失败！error : %d n&quot;</span>, GetLastError());</span><br><span class="line">		MessageBox(<span class="number">0</span>, text, TEXT(<span class="string">&quot;错误&quot;</span>), MB_OK);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="调用这个保护hook的方法"><a class="markdownIt-Anchor" href="#调用这个保护hook的方法"></a> 调用这个保护HOOK的方法</h2>
<p>声明两个函数、一个是进行HOOK函数、一个是取消HOOK的函数，可以灵活处理</p>
<p><strong>此代码处于另一软件项目</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">forLong::myhook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ui.label-&gt;setText(<span class="string">&quot;hooking&quot;</span>);</span><br><span class="line">    HINSTANCE hDLL = ::LoadLibrary(<span class="string">L&quot;HOOK.dll&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (hDLL) &#123;</span><br><span class="line"></span><br><span class="line">        PFN_setData setData = (PFN_setData)::GetProcAddress(hDLL, <span class="string">&quot;setData&quot;</span>);</span><br><span class="line">        PFN_getData getData = (PFN_getData)::GetProcAddress(hDLL, <span class="string">&quot;getData&quot;</span>);</span><br><span class="line">        SetGoableHook func = (SetGoableHook)GetProcAddress(hDLL, <span class="string">&quot;SetGoableHook&quot;</span>);</span><br><span class="line">        qDebug() &lt;&lt; (<span class="keyword">int</span>)getpid() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        setData((<span class="keyword">int</span>)getpid());</span><br><span class="line">        <span class="keyword">int</span> s = getData();</span><br><span class="line">        func();</span><br><span class="line">        <span class="comment">/*qDebug() &lt;&lt;  &lt;&lt; endl;*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">forLong::unhook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ui.label-&gt;setText(<span class="string">&quot;unhook&quot;</span>);</span><br><span class="line">    HINSTANCE hDLL = ::LoadLibrary(<span class="string">L&quot;HOOK.dll&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (hDLL) &#123;</span><br><span class="line">        DropGoableHook func = (DropGoableHook)GetProcAddress(hDLL, <span class="string">&quot;DropGoableHook&quot;</span>);</span><br><span class="line">        func();</span><br><span class="line">        PFN_setData setData = (PFN_setData)::GetProcAddress(hDLL, <span class="string">&quot;setData&quot;</span>);</span><br><span class="line">        PFN_getData getData = (PFN_getData)::GetProcAddress(hDLL, <span class="string">&quot;getData&quot;</span>);</span><br><span class="line">        setData(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">//int s = getData();</span></span><br><span class="line">        func();</span><br><span class="line">        <span class="comment">/*   qDebug() &lt;&lt; getData() &lt;&lt; endl;*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<div class="note warning flat"><p>其实，单纯这样处理，如果单hook一次，任务管理器在重启的时候就会将这个HOOK给绕过了。<br />
这样子就办法达到继续HOOK OpenProcess 的目的了</p>
</div>
<p>所以，我们得处理一下</p>
<h2 id="fix掉重启任务管理器绕过hook的方案"><a class="markdownIt-Anchor" href="#fix掉重启任务管理器绕过hook的方案"></a> fix掉重启任务管理器绕过HOOK的方案</h2>
<p>其实很简单，我们只要监控任务管理器是否启动就可以了<br />
只要启动了就即可进行API拦截注入 进行HOOK<br />
如果关闭了，则停止HOOK</p>
<p>代码可以这样写</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">forLong::CheckAppRunningStatus</span><span class="params">(<span class="keyword">const</span> QString&amp; appName)</span> </span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> Q_OS_WIN</span></span><br><span class="line">    QProcess* process = <span class="keyword">new</span> QProcess;</span><br><span class="line">    process-&gt;start(<span class="string">&quot;tasklist&quot;</span>, QStringList() &lt;&lt; <span class="string">&quot;-fi&quot;</span> &lt;&lt; <span class="string">&quot;imagename eq &quot;</span> + appName);</span><br><span class="line">    process-&gt;waitForFinished();</span><br><span class="line">    QString outputStr = QString::fromLocal8Bit(process-&gt;readAllStandardOutput());</span><br><span class="line">    qDebug() &lt;&lt; outputStr &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">if</span> (outputStr.contains(appName))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">forLong::watchTaskmgr</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (CheckAppRunningStatus(<span class="string">&quot;Taskmgr.exe&quot;</span>)) &#123;</span><br><span class="line">            qDebug() &lt;&lt; <span class="string">&quot;Taskmgr&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            myhook();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            qDebug() &lt;&lt; <span class="string">&quot;no  Taskmgr&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            unhook();</span><br><span class="line">        &#125;</span><br><span class="line">        Sleep(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="整个dll项目代码一起给出来吧"><a class="markdownIt-Anchor" href="#整个dll项目代码一起给出来吧"></a> 整个dll项目代码一起给出来吧</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// dllmain.cpp : Defines the entry point for the DLL application.</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;detours.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;TlHelp32.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//共享代码段</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> data_seg(<span class="meta-string">&quot;SHARED&quot;</span>)</span></span><br><span class="line">HHOOK g_hMessageHook = <span class="literal">NULL</span>;</span><br><span class="line">HHOOK g_hOpenProcessHook = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">BOOL g_bStopHook = FALSE;</span><br><span class="line">BOOL g_bHookInstalled = FALSE;</span><br><span class="line">DWORD g_pid = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> data_seg()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, <span class="meta-string">&quot;/section:SHARED,RWS&quot;</span>)</span></span><br><span class="line"><span class="comment">//__declspec(allocate(&quot;SHARED&quot;))int g_pid=0;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> HMODULE s_hDll;</span><br><span class="line"></span><br><span class="line">HINSTANCE g_hInstance = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*显示GetLastError的信息*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showerr</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* m)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">char</span> message[<span class="number">255</span>];</span><br><span class="line">	FormatMessage(FORMAT_MESSAGE_FROM_SYSTEM, <span class="number">0</span>, GetLastError()</span><br><span class="line">		, MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), message, <span class="number">255</span>, <span class="number">0</span>);</span><br><span class="line">	MessageBox(<span class="literal">NULL</span>, message, m, MB_OK);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">MyGetProcessId</span><span class="params">(<span class="keyword">char</span>* ProcessName)</span> </span>&#123;</span><br><span class="line">	PROCESSENTRY32 pe32;</span><br><span class="line">	pe32.dwSize = <span class="keyword">sizeof</span>(pe32);</span><br><span class="line">	<span class="comment">//获得系统内所有进程快照</span></span><br><span class="line">	HANDLE hProcessSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">if</span> (hProcessSnap == INVALID_HANDLE_VALUE)</span><br><span class="line">		<span class="keyword">return</span> FALSE;</span><br><span class="line">	<span class="comment">//枚举列表中的第一个进程</span></span><br><span class="line">	BOOL bProcess = Process32First(hProcessSnap, &amp;pe32);</span><br><span class="line">	<span class="keyword">while</span> (bProcess) &#123;</span><br><span class="line">		<span class="comment">//比较得到的进程名和要保护的进程名是否相同</span></span><br><span class="line">		<span class="keyword">if</span> (stricmp(pe32.szExeFile, ProcessName) == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="comment">//相同则返回此进程ID</span></span><br><span class="line">			<span class="keyword">return</span> pe32.th32ProcessID;</span><br><span class="line">		&#125;</span><br><span class="line">		bProcess = Process32Next(hProcessSnap, &amp;pe32);</span><br><span class="line">	&#125;</span><br><span class="line">	CloseHandle(hProcessSnap);</span><br><span class="line">	<span class="comment">//否则返回0</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> ULONG_PTR  DWORD_PTR;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="title">HANDLE</span><span class="params">(WINAPI* pOpenProcess)</span><span class="params">(DWORD dwDesiredAccess, BOOL bInheritHandle, DWORD dwProcessId)</span> </span>= OpenProcess;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">GetProcID</span><span class="params">(<span class="keyword">char</span>* procName)</span></span>;</span><br><span class="line"></span><br><span class="line">HANDLE pubgHandle = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">char</span>* processName = (<span class="keyword">char</span>*)<span class="string">&quot;forLong.exe&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">HANDLE WINAPI <span class="title">hOpenProcess</span><span class="params">(DWORD dwDesiredAccess, BOOL bInheritHandle, DWORD dwProcessId)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//if (GetProcID(processName) == dwProcessId) &#123;</span></span><br><span class="line">	<span class="keyword">if</span> (g_pid == dwProcessId) &#123;</span><br><span class="line">		dwDesiredAccess = PROCESS_VM_READ | PROCESS_VM_WRITE | PROCESS_QUERY_INFORMATION;</span><br><span class="line">		pubgHandle = pOpenProcess(dwDesiredAccess, bInheritHandle, dwProcessId);</span><br><span class="line">		SetLastError(<span class="number">5</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> pOpenProcess(dwDesiredAccess, bInheritHandle, dwProcessId);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">GetProcID</span><span class="params">(<span class="keyword">char</span>* procName)</span> </span>&#123;</span><br><span class="line">	PROCESSENTRY32 pe32;</span><br><span class="line">	HANDLE hSnapshot = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	pe32.dwSize = <span class="keyword">sizeof</span>(PROCESSENTRY32);</span><br><span class="line">	hSnapshot = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (Process32First(hSnapshot, &amp;pe32)) &#123;</span><br><span class="line">		<span class="keyword">do</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (<span class="built_in">strcmp</span>(pe32.szExeFile, procName) == <span class="number">0</span>)</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125; <span class="keyword">while</span> (Process32Next(hSnapshot, &amp;pe32));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (hSnapshot != INVALID_HANDLE_VALUE)</span><br><span class="line">		CloseHandle(hSnapshot);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> pe32.th32ProcessID;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD_PTR <span class="title">GetModuleBaseAddress</span><span class="params">(DWORD pid, TCHAR* name)</span> </span>&#123;</span><br><span class="line">	DWORD_PTR baseAddress = <span class="literal">NULL</span>;</span><br><span class="line">	HANDLE hSnapshot = CreateToolhelp32Snapshot(TH32CS_SNAPMODULE, pid);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (hSnapshot == INVALID_HANDLE_VALUE)</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	MODULEENTRY32 entry = &#123; <span class="literal">NULL</span> &#125;;</span><br><span class="line"></span><br><span class="line">	entry.dwSize = <span class="keyword">sizeof</span>(MODULEENTRY32);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (!Module32First(hSnapshot, &amp;entry)) &#123;</span><br><span class="line">		CloseHandle(hSnapshot);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">do</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (!<span class="built_in">strcmp</span>(entry.szModule, name)) &#123;</span><br><span class="line">			baseAddress = (DWORD_PTR)entry.modBaseAddr;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">while</span> (Module32Next(hSnapshot, &amp;entry));</span><br><span class="line"></span><br><span class="line">	CloseHandle(hSnapshot);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> baseAddress;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hookOpenProcess</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//AllocConsole();</span></span><br><span class="line">	DetourTransactionBegin();</span><br><span class="line">	DetourUpdateThread(GetCurrentThread());</span><br><span class="line">	DetourAttach((PVOID*)&amp;pOpenProcess, hOpenProcess);</span><br><span class="line">	DetourTransactionCommit();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (pubgHandle != <span class="literal">NULL</span>) &#123;</span><br><span class="line">		<span class="keyword">char</span> buffer[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">		ReadProcessMemory(pubgHandle, (LPVOID)GetModuleBaseAddress(g_pid, processName), buffer, <span class="number">2</span>, <span class="literal">NULL</span>);</span><br><span class="line">		buffer[<span class="number">3</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; buffer &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">SetHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//如果已经安装就return</span></span><br><span class="line">	<span class="keyword">if</span> (g_bHookInstalled)</span><br><span class="line">		<span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">	CreateThread(<span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="keyword">reinterpret_cast</span>&lt;LPTHREAD_START_ROUTINE&gt;(hookOpenProcess), <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//CreateThread(NULL, NULL, reinterpret_cast&lt;LPTHREAD_START_ROUTINE&gt;(watch_task), NULL, NULL, NULL);</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//char text[30];</span></span><br><span class="line">	<span class="comment">//wsprintf(text, &quot;HOOK 启动！: %ld&quot;, GetCurrentThread());</span></span><br><span class="line">	<span class="comment">//MessageBox(0, text, TEXT(&quot;OK&quot;), MB_OK);</span></span><br><span class="line"></span><br><span class="line">	g_bHookInstalled = TRUE;</span><br><span class="line">	<span class="keyword">return</span> g_bHookInstalled;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DropHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//如果已经卸载就return</span></span><br><span class="line">	<span class="keyword">if</span> (!g_bHookInstalled)<span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//char text[30];</span></span><br><span class="line">	<span class="comment">//wsprintf(text, &quot;HOOK 解除！: %d&quot;, GetLastError());</span></span><br><span class="line">	<span class="comment">//MessageBox(0, text, TEXT(&quot;错误&quot;), MB_OK);</span></span><br><span class="line"></span><br><span class="line">	DetourTransactionBegin();</span><br><span class="line">	DetourUpdateThread(GetCurrentThread());</span><br><span class="line">	DetourDetach((PVOID*)&amp;pOpenProcess, hOpenProcess);</span><br><span class="line"></span><br><span class="line">	LONG ret = DetourTransactionCommit();</span><br><span class="line">	g_bHookInstalled = FALSE;</span><br><span class="line">	<span class="keyword">return</span> ret == NO_ERROR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查找函数地址</span></span><br><span class="line"><span class="function">HMODULE WINAPI <span class="title">ModuleFromAddress</span><span class="params">(PVOID pv)</span> </span>&#123;</span><br><span class="line">	MEMORY_BASIC_INFORMATION mbi;</span><br><span class="line">	<span class="keyword">if</span> (::VirtualQuery(pv, &amp;mbi, <span class="keyword">sizeof</span>(mbi)) != <span class="number">0</span>)</span><br><span class="line">		<span class="keyword">return</span> (HMODULE)mbi.AllocationBase;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> LRESULT CALLBACK <span class="title">OpenProcessHookProc</span><span class="params">(<span class="keyword">int</span> nCode, WPARAM wParam, LPARAM lParam)</span> </span>&#123;</span><br><span class="line">	PKBDLLHOOKSTRUCT p = (PKBDLLHOOKSTRUCT)lParam;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">wchar_t</span> Dir[_MAX_DIR];</span><br><span class="line">	<span class="keyword">wchar_t</span> FullPath[MAX_PATH]; <span class="comment">// [sp+200h] [bp-614h]@1</span></span><br><span class="line">	<span class="keyword">wchar_t</span> Ext[_MAX_EXT];</span><br><span class="line">	<span class="keyword">wchar_t</span> Filename[_MAX_FNAME];</span><br><span class="line">	<span class="keyword">wchar_t</span> Drive[_MAX_DRIVE];</span><br><span class="line">	GetModuleFileNameW(<span class="number">0</span>, FullPath, MAX_PATH);</span><br><span class="line">	_wsplitpath_s(FullPath, Drive, _MAX_DRIVE, Dir, _MAX_DIR, Filename, _MAX_FNAME, Ext, _MAX_EXT);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">wstring</span> tar = Filename;</span><br><span class="line"></span><br><span class="line">	transform(tar.begin(), tar.end(), tar.begin(), towlower);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (_wcsicmp(Filename, <span class="string">L&quot;Taskmgr&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">		<span class="comment">//安装钩子</span></span><br><span class="line">		<span class="comment">//MessageBox(NULL, &quot;DLL_PROCESS_ATTACH taskmgr&quot;, &quot;info&quot;, MB_OK);</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (!g_bStopHook)</span><br><span class="line">			SetHook();</span><br><span class="line">		<span class="comment">//卸载钩子</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			DropHook();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> CallNextHookEx(g_hOpenProcessHook, nCode, wParam, lParam);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//导出函数 加载全局钩子</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> __declspec(dllexport) <span class="function">BOOL <span class="title">SetGoableHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	g_bStopHook = FALSE;</span><br><span class="line">	g_hOpenProcessHook = SetWindowsHookEx(WH_GETMESSAGE,</span><br><span class="line">		OpenProcessHookProc,</span><br><span class="line">		ModuleFromAddress(OpenProcessHookProc), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (g_hOpenProcessHook == <span class="literal">NULL</span>) &#123;</span><br><span class="line">		<span class="keyword">char</span> text[<span class="number">30</span>];</span><br><span class="line">		wsprintf(text, <span class="string">&quot;HOOK失败！error : %d n&quot;</span>, GetLastError());</span><br><span class="line">		MessageBox(<span class="number">0</span>, text, TEXT(<span class="string">&quot;错误&quot;</span>), MB_OK);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//导出函数 卸载全局钩子</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> __declspec(dllexport) <span class="function">BOOL <span class="title">DropGoableHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	g_bStopHook = TRUE;</span><br><span class="line">	<span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span>  __declspec(dllexport) <span class="function"><span class="keyword">void</span> <span class="title">setData</span><span class="params">(<span class="keyword">int</span> target_pid)</span> </span>&#123;</span><br><span class="line">	g_pid = target_pid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span>  __declspec(dllexport) <span class="function"><span class="keyword">int</span> <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> g_pid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">HMODULE WINAPI <span class="title">Detoured</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> s_hDll;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">(HMODULE hModule,</span></span></span><br><span class="line"><span class="function"><span class="params">	DWORD  ul_reason_for_call,</span></span></span><br><span class="line"><span class="function"><span class="params">	LPVOID lpReserved</span></span></span><br><span class="line"><span class="function"><span class="params">)</span> </span>&#123;</span><br><span class="line">	g_hInstance = (HINSTANCE)hModule;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">switch</span> (ul_reason_for_call) &#123;</span><br><span class="line">	<span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">		s_hDll = hModule;</span><br><span class="line">		DisableThreadLibraryCalls(hModule);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> DLL_THREAD_ATTACH:</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> DLL_THREAD_DETACH:</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line">		UnhookWindowsHookEx(g_hOpenProcessHook);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>Hook</tag>
        <tag>进程保护</tag>
      </tags>
  </entry>
  <entry>
    <title>Github Pages + Coding Pages 同时部署 HEXO 并绑定自定义域名</title>
    <url>/archives/dbd2cb4b.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>这篇文章主要介绍一下怎么将HEXO部署到 coding 中 ，并绑定自定义域名<br />
这样子可以有效解决</p>
<ul>
<li>百度无法索引部署在github pages中的博客内容</li>
<li>国内访问速度较慢</li>
</ul>
<h2 id="注册-coding-账号进行部署"><a class="markdownIt-Anchor" href="#注册-coding-账号进行部署"></a> 注册 CODING 账号进行部署</h2>
<p>先注册一个账号 <a href="https://coding.net/">CODING</a></p>
<p>然后登陆进去</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585413955591.png" alt="MarxCBR的小屋" /></p>
<h3 id="点击全部项目"><a class="markdownIt-Anchor" href="#点击全部项目"></a> 点击全部项目</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585414009129.png" alt="MarxCBR的小屋" /></p>
<h3 id="新建项目"><a class="markdownIt-Anchor" href="#新建项目"></a> 新建项目</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585414039555.png" alt="MarxCBR的小屋" /></p>
<h3 id="选择-decops-项目"><a class="markdownIt-Anchor" href="#选择-decops-项目"></a> 选择 DecOps 项目</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585414072691.png" alt="MarxCBR的小屋" /></p>
<h3 id="填写项目名称"><a class="markdownIt-Anchor" href="#填写项目名称"></a> 填写项目名称</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585414133750.png" alt="MarxCBR的小屋" /></p>
<h3 id="进入项目"><a class="markdownIt-Anchor" href="#进入项目"></a> 进入项目</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585414265785.png" alt="MarxCBR的小屋" /></p>
<h3 id="点击构建与部署中的静态网站"><a class="markdownIt-Anchor" href="#点击构建与部署中的静态网站"></a> 点击构建与部署中的静态网站</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585414216950.png" alt="MarxCBR的小屋" /></p>
<h3 id="进行实名认证"><a class="markdownIt-Anchor" href="#进行实名认证"></a> 进行实名认证</h3>
<h3 id="新建静态网站"><a class="markdownIt-Anchor" href="#新建静态网站"></a> 新建静态网站</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585414380516.png" alt="MarxCBR的小屋" /></p>
<p>添加之后，可以看到这样的界面</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585414480421.png" alt="MarxCBR的小屋" /></p>
<p>点击右上角的<strong>设置</strong></p>
<h3 id="绑定自定义域名"><a class="markdownIt-Anchor" href="#绑定自定义域名"></a> 绑定自定义域名</h3>
<p>先将自己的自定义域名解析到CODING pages 上面先</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585415697355.png" alt="MarxCBR的小屋" /></p>
<p>等到十分钟左右，当然也不固定啦，有时快有时慢~</p>
<p>然后将自己的自定义域名添加到coding pages里面去</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585414647414.png" alt="MarxCBR的小屋" /></p>
<p>点击确定之后</p>
<p>可以看到这样的界面，会告诉你域名的证书正在申请中</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585414680605.png" alt="MarxCBR的小屋" /></p>
<p>等几分钟就会告诉你已经申请成功，显示<strong>正常</strong>了</p>
<h2 id="将主机的ssh公钥放到配置文件里面去"><a class="markdownIt-Anchor" href="#将主机的ssh公钥放到配置文件里面去"></a> 将主机的SSH公钥放到配置文件里面去</h2>
<p>进入个人设置里的SSH公钥设置</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585415032358.png" alt="MarxCBR的小屋" /></p>
<p>点击 新增公钥<br />
然后将 ~/.ssh/id_rsa.pub 的内容拷进去就OK</p>
<h2 id="在-_configyml-中添加部署配置"><a class="markdownIt-Anchor" href="#在-_configyml-中添加部署配置"></a> 在 _config.yml 中添加部署配置</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585415202132.png" alt="MarxCBR的小屋" /></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">git@github.com:97CBR/97CBR.github.io.git</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">git@e.coding.net:MarxCBR/marxcbr/marxcbr.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>
<h2 id="执行-hexo-d-进行部署"><a class="markdownIt-Anchor" href="#执行-hexo-d-进行部署"></a> 执行 hexo d 进行部署</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585415333067.png" alt="MarxCBR的小屋" /></p>
<h2 id="踩坑记录"><a class="markdownIt-Anchor" href="#踩坑记录"></a> 踩坑记录</h2>
<p>这里的东西才是给力的东西呀，坑不踩无以做记录</p>
<h3 id="coding-域名证书申请失败"><a class="markdownIt-Anchor" href="#coding-域名证书申请失败"></a> CODING 域名证书申请失败</h3>
<p>报错如下</p>
<blockquote>
<p>acme:error:unauthorized: Invalid response from <a href="http://www.marxcbr.cn/.well-known/acme-challenge/Gh_xL4eBlBO8RGPnjJ-O7ao7lnFFfJGX4BajL0kE9XE">http://www.marxcbr.cn/.well-known/acme-challenge/Gh_xL4eBlBO8RGPnjJ-O7ao7lnFFfJGX4BajL0kE9XE</a> [185.199.111.153]: &quot;<!DOCTYPE html>\n<html>\n <head>\n &lt;meta http-equiv=“Content-type” content=&quot;tex</p>
</blockquote>
<p>这里是因为我之前已经部署在github上面启用HTTPS了。所以他检测申请的时候，就会存在问题。<br />
所以，解决方案就是在 域名解析控制台中停用 github pages 的解析。待这边申请成功之后，再进行启用 github pages 的解析</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585415613889.png" alt="MarxCBR的小屋" /></p>
<p>再大概等一会儿，再去coding里面绑定自己的域名<br />
如果急的话，可以用 <a href="http://tool.chinaz.com/dns/?type=1&amp;host=www.marxcbr.cn&amp;ip=">站长工具去测试</a> 看到github的解析消失之后，就可以去coding申请了</p>
<h3 id="设置域名的解析分流"><a class="markdownIt-Anchor" href="#设置域名的解析分流"></a> 设置域名的解析分流</h3>
<p>在域名解析控制台中设置域名的解析路线<br />
大概可以像我这样设置，将github的优先解析到国外</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-29/BogImages/1585415979387.png" alt="MarxCBR的小屋" /></p>
<h2 id="结语"><a class="markdownIt-Anchor" href="#结语"></a> 结语</h2>
<p>大概就写这么多了，我明天再具体测测访问速度的变化以及百度这扑街引擎能否检索到我的博客。三更半夜了，睡了睡了~</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>HEXO</category>
      </categories>
      <tags>
        <tag>HEXO</tag>
        <tag>网页优化</tag>
      </tags>
  </entry>
  <entry>
    <title>迁移之前的文章到博客中</title>
    <url>/archives/74b5295.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="可算迁移好我的文章了"><a class="markdownIt-Anchor" href="#可算迁移好我的文章了"></a> 可算迁移好我的文章了</h2>
<p>经过两天的努力，终于将之前的三十多篇文章迁移到我的博客中了<br />
三十多篇文章，均被我重新看了一遍，将很多需要添加段落标题的地方都加了标题</p>
<p>在整理的过程中，感觉到之前写的文章的格式的不规范。难怪经常被吐槽排版好乱。哈哈哈，虚心接受了。后面得再稍微注意一下格式，排版太乱的文章。将心比心，我也不喜欢看。就和我不看CSDN里面那些被各个博主抄来抄去的文章一样。</p>
<h2 id="为啥不继续首发公众号了"><a class="markdownIt-Anchor" href="#为啥不继续首发公众号了"></a> 为啥不继续首发公众号了</h2>
<p>为啥不继续将文章在公众号里面首发了呢</p>
<ul>
<li>
<p>微信公众号对已发表的文章不好进行修正，才可以修正20个字</p>
</li>
<li>
<p>手机屏幕普通比较小，查看我发的文章的代码不方便</p>
</li>
<li>
<p>如果文章的长度过长，例如我发的某些文章长度达到两三千字。基本上都没谁会用手机看完它，按同学说的就是：这么长？打扰了~</p>
</li>
<li>
<p>微信公众号发文章的圈子大小决定了文章浏览量的多少。按照普通人的心理，点在看和分享的同学基本没几个。有几种心理</p>
<ul>
<li>一种是感觉质量不好</li>
<li>一种是怕点了再看就被别人知道自己看了这些内容，与其身份、设定不符</li>
<li>一种就是有一种社交负担，怕别人认为：我觉得这内容不太好啊，你这都点在看？</li>
<li>一种就是纯属看到一半就退出不看的</li>
<li>再有一种是发现内容很好，能学到很多的东西，但是怕点再看或者分享给别人之后。别人也会了，导致自己可能会比别人落后</li>
</ul>
</li>
</ul>
<p>综上，还是在博客上面发文章好些。只要是能找到文章的，基本都是代表着有这方面的需求的。这样子读者阅读文章的专注度会高，往往也会读完整篇文章。代码查看起来也方便。而我这边再后期发现文章存在错误也方便进行勘误，将错误的地方更改。</p>
<h2 id="结语"><a class="markdownIt-Anchor" href="#结语"></a> 结语</h2>
<p>OK，叨叨到这里，后面大家看到文章，觉得有错误、有改进或者是觉得不错的。就留个言，在评论区交流一下下哈</p>
<p>送上我最近很喜欢的一句话 ↓</p>
<h2 id="在实践中摸索前进"><a class="markdownIt-Anchor" href="#在实践中摸索前进"></a> 在实践中摸索前进</h2>
]]></content>
      <categories>
        <category>小日志</category>
      </categories>
      <tags>
        <tag>小日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Github Pages 被攻击无法访问</title>
    <url>/archives/7b49fb01.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天早上就在整理我之前发过的一些文章，在做文章迁移</p>
<p>下午的时候，突然也就显示无法访问了<br />
一开始还以为是我的梯子扑街了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-27/BogImages/1585239532239.png" alt="" /></p>
<p>然后，更换了一个节点，挂全局去访问<br />
这时候，有意思的画面就出现了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-27/BogImages/1585239933132.png" alt="" /></p>
<p>不安全？你跟我说不安全？我用的可是github page里面强制使用的证书<br />
直觉告诉我 这次gayhub可能被人家攻击了<br />
然后跑去群里跟小伙伴告知了一声</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-27/BogImages/1585240204931.png" alt="" /></p>
<p>然后，使用edge打开了一下下我的博客，显示如下</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-27/BogImages/1585239812716.png" alt="" /></p>
<p>导出证书瞅一眼</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-27/BogImages/1585239842124.png" alt="" /></p>
<p>帅啊，某位老哥的QQ引人瞩目<br />
这证书劫持可是真滴骚骚了，访问就 不安全警告 或者 就直接访问不了<br />
还有一些大佬们搭建的github page 上面的博客我也打开验证过了，无法打开。</p>
<p>猜猜Github的人什么时候才能修复好？</p>
]]></content>
      <categories>
        <category>小日志</category>
      </categories>
      <tags>
        <tag>小日志</tag>
        <tag>信息安全</tag>
      </tags>
  </entry>
  <entry>
    <title>我感觉我就像一块海绵</title>
    <url>/archives/3aaed7d.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>我感觉我就像一块海绵，<br />
因为我总能在汲取到水分时感到欣喜，<br />
犹如甘露滋润了新叶。<br />
但是海绵里的水总会被蒸发掉一部分，<br />
所以我又得继续汲取水分，<br />
循环往复无穷已。</p>
]]></content>
      <categories>
        <category>思考&amp;感悟</category>
      </categories>
      <tags>
        <tag>思考&amp;感悟</tag>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title>Python分析聊天记录</title>
    <url>/archives/318b512.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="跟妹纸聊天是每个男孩纸的梦想"><a class="markdownIt-Anchor" href="#跟妹纸聊天是每个男孩纸的梦想"></a> 跟妹纸聊天是每个男孩纸的梦想</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-23/Python%E5%88%86%E6%9E%90%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95/1574477164015.png" alt="" /></p>
<p>同学们，许久不更新了~<br />
内容嘛~如题所示，用Python来小小的分析一下和妹纸的聊天记录。<br />
分析看看和她聊天互发了多少条消息，用到最频繁的词语是什么，最高频发送消息的时间等等。</p>
<p>PS：本文的数据展示已取得对方的同意~</p>
<h2 id="导出聊天记录"><a class="markdownIt-Anchor" href="#导出聊天记录"></a> 导出聊天记录</h2>
<p>首先，和她最主要的沟通工具是Tencent家的QQ，而比较少用的微信，就不作统计了。（PS：我差点找不到导出聊天记录的方法）<br />
所以，为了节省大家的时间，给大家简明扼要的说说怎么导出聊天记录（方法不唯一，仅供参考）</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-23/Python%E5%88%86%E6%9E%90%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95/1574477616623.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-23/Python%E5%88%86%E6%9E%90%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95/1574477651780.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-23/Python%E5%88%86%E6%9E%90%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95/1574477726627.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-23/Python%E5%88%86%E6%9E%90%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95/1574477778311.png" alt="" /></p>
<p>到这里就已经是导出聊天记录了</p>
<h2 id="准备写一手代码"><a class="markdownIt-Anchor" href="#准备写一手代码"></a> 准备写一手代码</h2>
<p>咱们将聊天记录放到咱们的代码目录里面去，Python用起来</p>
<h3 id="先统计一下我跟妹纸互相发送了多少条消息"><a class="markdownIt-Anchor" href="#先统计一下我跟妹纸互相发送了多少条消息"></a> 先统计一下我跟妹纸互相发送了多少条消息</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-23/Python%E5%88%86%E6%9E%90%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95/1574478319903.png" alt="" /></p>
<p>这个数据的计算很简单，根据导出的聊天记录观察一下就可以知道要怎么统计了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-23/Python%E5%88%86%E6%9E%90%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95/1574478422876.png" alt="" /></p>
<p>如图，咱们只要统计用户名，备注名就可以了。其他不包含名字的，就不统计即可</p>
<h3 id="咱们统计一下互相发送最高频的词"><a class="markdownIt-Anchor" href="#咱们统计一下互相发送最高频的词"></a> 咱们统计一下，互相发送最高频的词</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-23/Python%E5%88%86%E6%9E%90%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95/1574476316773.png" alt="" /></p>
<p>这是柱状图，横轴就是词语，纵轴自然懂</p>
<p>这个数据的来源，是利用了最多人使用的jieba分词的库进行统计的<br />
既然利用别人的库进行词语划分，所以我们要处理的还是，数据的筛选的问题。<br />
所以，关注点是怎么去掉不希望统计到的内容，比如用户名、备注名、表情包、图片等等内容。<br />
这里，还是上面统计消息次数那招，看到有不希望看到的，就不要了。<br />
所以，可以用一段小函数，去过滤掉即可</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-23/Python%E5%88%86%E6%9E%90%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95/1574478941833.png" alt="" /></p>
<p>这样写，虽然蠢，但是实现够快速呀~（有时间写这么多高级的算法，还不如多陪陪妹纸？）</p>
<h3 id="再统计发送消息的散点图"><a class="markdownIt-Anchor" href="#再统计发送消息的散点图"></a> 再统计发送消息的散点图</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-23/Python%E5%88%86%E6%9E%90%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95/1574476564829.png" alt="" /></p>
<p>这是2D的散点图，纵轴是0~23小时、横轴是分钟，后面的数字都黏在一起了。。。。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-23/Python%E5%88%86%E6%9E%90%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95/1574476581634.png" alt="" /></p>
<h3 id="2维的不够骚看看3维的"><a class="markdownIt-Anchor" href="#2维的不够骚看看3维的"></a> 2维的不够骚看看3维的</h3>
<p>这个图是3D的散点图，横轴是0~60分钟，纵轴是0~23小时，竖轴是0~60秒</p>
<p>为啥要做2D和3D的两个图出来呢？因为一分钟内发送的N条消息，无法在上面那个2D的图中展示出来，而3D的就可以将，这几千条消息都展示出来了。（当然，因为没考虑日期的问题，某些点还是有可能会重复叠在一起）</p>
<p>从这两个图，就可以大概看到发送消息的高频时间段以及低频的时间段，以及某些特别的点 (如凌晨5点钟的消息~)</p>
<h2 id="生成词云"><a class="markdownIt-Anchor" href="#生成词云"></a> 生成词云</h2>
<p>最后，就是题图的生成了，题图是一个词云。使用的是 wordcloud 这个库，简单快速的生成了一个词云。<br />
可以生成带图案模型的图片哦，我这里这张用的就是那张，张开手的乔巴 。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-23/Python%E5%88%86%E6%9E%90%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95/1574474939006.png" alt="" /></p>
<p>好了，扯了这么多，不给一份代码，感觉都有点奇怪。应该结合代码来写的，这篇内容。<br />
（脑洞：把要说的东西，都在代码里面用注释写？）</p>
<p>代码就贴这里吧（超烂勿喷）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 11/20/2019 5:29 PM</span></span><br><span class="line"><span class="comment"># @Author  : MARX·CBR</span></span><br><span class="line"><span class="comment"># @File    : chat_analysis.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> plotly.offline.offline <span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud, ImageColorGenerator</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">boy_name = <span class="string">&quot;MARX·CBR&quot;</span></span><br><span class="line">girl_name = <span class="string">&quot;xxx&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_num</span>(<span class="params">content</span>):</span></span><br><span class="line">    marx_count = <span class="number">0</span></span><br><span class="line">    hr_count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> content:</span><br><span class="line">        <span class="keyword">if</span> boy_name <span class="keyword">in</span> li:</span><br><span class="line">            marx_count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> girl_name <span class="keyword">in</span> li:</span><br><span class="line">            hr_count += <span class="number">1</span></span><br><span class="line">    print(<span class="string">&quot;&#123;&#125; sended : &#123;&#125;&quot;</span>.<span class="built_in">format</span>(boy_name, marx_count))</span><br><span class="line">    print(<span class="string">&quot;&#123;&#125; sended      : &#123;&#125;&quot;</span>.<span class="built_in">format</span>(girl_name, hr_count))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">use_jieba_and_show</span>(<span class="params">content</span>):</span></span><br><span class="line">    words = jieba.lcut(content)</span><br><span class="line">    <span class="comment"># print(words)</span></span><br><span class="line">    counts = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(word) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            counts[word] = counts.get(word, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    items = <span class="built_in">list</span>(counts.items())</span><br><span class="line">    items.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 把注释去了，便可看到柱形图</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># lab = []</span></span><br><span class="line">    <span class="comment"># num = []</span></span><br><span class="line">    <span class="keyword">for</span> it <span class="keyword">in</span> items[:<span class="number">20</span>:]:</span><br><span class="line">        word, count = it</span><br><span class="line">        print(<span class="string">&quot;&#123;&#125;\t&#123;&#125;&quot;</span>.<span class="built_in">format</span>(word, count))</span><br><span class="line">    <span class="comment">#     lab.append(word)</span></span><br><span class="line">    <span class="comment">#     num.append(count)</span></span><br><span class="line">    <span class="comment"># plt.bar(range(len(lab)), num, tick_label=lab)</span></span><br><span class="line">    <span class="comment"># plt.show()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">remove_pic</span>(<span class="params">content</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;[图片]&quot;</span> <span class="keyword">in</span> content:</span><br><span class="line">        content = content.replace(<span class="string">&#x27;[图片]&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&quot;[表情]&quot;</span> <span class="keyword">in</span> content:</span><br><span class="line">        content = content.replace(<span class="string">&#x27;[表情]&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_more_word</span>(<span class="params">content</span>):</span></span><br><span class="line">    all_msg = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> content:</span><br><span class="line">        <span class="keyword">if</span> boy_name <span class="keyword">in</span> line:</span><br><span class="line">            all_msg += <span class="string">&quot; &quot;</span></span><br><span class="line">        <span class="keyword">elif</span> girl_name <span class="keyword">in</span> line:</span><br><span class="line">            all_msg += <span class="string">&quot; &quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            msg = remove_pic(line)</span><br><span class="line">            all_msg += msg</span><br><span class="line">    use_jieba_and_show(all_msg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_times_3d</span>(<span class="params">all_msg_time</span>):</span></span><br><span class="line">    fig = plt.figure()</span><br><span class="line">    ax = plt.subplot(projection=<span class="string">&#x27;3d&#x27;</span>)</span><br><span class="line">    X = np.arange(<span class="number">0</span>, <span class="number">60</span>, <span class="number">1</span>)</span><br><span class="line">    Y = np.arange(<span class="number">0</span>, <span class="number">24</span>, <span class="number">1</span>)</span><br><span class="line">    plt.xlim((<span class="number">0</span>, <span class="number">60</span>))</span><br><span class="line">    plt.ylim((<span class="number">0</span>, <span class="number">24</span>))</span><br><span class="line">    plt.xticks(X, fontsize=<span class="number">10</span>)</span><br><span class="line">    plt.yticks(Y, fontsize=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ti <span class="keyword">in</span> all_msg_time:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            y = <span class="built_in">int</span>(ti[<span class="number">0</span>:<span class="number">2</span>:])</span><br><span class="line">            x = <span class="built_in">int</span>(ti[<span class="number">3</span>:<span class="number">5</span>:])</span><br><span class="line">            z = <span class="built_in">int</span>(ti[<span class="number">6</span>:<span class="number">8</span>:])</span><br><span class="line">            ax.scatter(x, y, z, s=<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            ...</span><br><span class="line">    <span class="comment">#    plt.show()</span></span><br><span class="line">    ax.set_zlabel(<span class="string">&#x27;second&#x27;</span>)</span><br><span class="line">    ax.set_ylabel(<span class="string">&#x27;hour&#x27;</span>)</span><br><span class="line">    ax.set_xlabel(<span class="string">&#x27;minute&#x27;</span>)</span><br><span class="line">    plt.savefig(<span class="string">&#x27;chat_3d.png&#x27;</span>, dpi=<span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_times_2d</span>(<span class="params">all_msg_time</span>):</span></span><br><span class="line">    fig = plt.figure()</span><br><span class="line">    ax = plt.subplot()</span><br><span class="line">    my_x_ticks = np.arange(<span class="number">0</span>, <span class="number">60</span>, <span class="number">1</span>)</span><br><span class="line">    my_y_ticks = np.arange(<span class="number">0</span>, <span class="number">24</span>, <span class="number">1</span>)</span><br><span class="line">    plt.xticks(my_x_ticks)</span><br><span class="line">    plt.yticks(my_y_ticks)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ti <span class="keyword">in</span> all_msg_time:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            y = <span class="built_in">int</span>(ti[<span class="number">0</span>:<span class="number">2</span>:])</span><br><span class="line"></span><br><span class="line">            x = <span class="built_in">int</span>(ti[<span class="number">3</span>:<span class="number">5</span>:])</span><br><span class="line"></span><br><span class="line">            ax.scatter(x, y, s=<span class="number">5</span>, alpha=<span class="number">0.9</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            ...</span><br><span class="line">    <span class="comment">#    plt.show()</span></span><br><span class="line">    plt.savefig(<span class="string">&#x27;chat_2d.png&#x27;</span>, dpi=<span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_times</span>(<span class="params">content</span>):</span></span><br><span class="line">    all_msg_time = []</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> content:</span><br><span class="line">        ct = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> boy_name <span class="keyword">in</span> li:</span><br><span class="line">            ct = li[<span class="number">11</span>:<span class="number">19</span>:]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> girl_name <span class="keyword">in</span> li:</span><br><span class="line">            ct = li[<span class="number">11</span>:<span class="number">19</span>:]</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;&quot;</span> != ct:</span><br><span class="line">            all_msg_time.append(ct)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ...</span><br><span class="line">    all_msg_time.sort()</span><br><span class="line">    print(all_msg_time)</span><br><span class="line">    show_times_2d(all_msg_time)</span><br><span class="line">    show_times_3d(all_msg_time)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generation_cloud_img</span>(<span class="params">content, filename</span>):</span></span><br><span class="line">    path_img = <span class="string">&quot;./background.jpg&quot;</span></span><br><span class="line">    background_image = np.array(Image.<span class="built_in">open</span>(path_img))</span><br><span class="line">    cut_text = <span class="string">&quot; &quot;</span>.join(jieba.cut(content))</span><br><span class="line"></span><br><span class="line">    wordCloud = WordCloud(font_path=<span class="string">&quot;C:/Windows/Fonts/simfang.ttf&quot;</span>,</span><br><span class="line">                          background_color=<span class="string">&quot;white&quot;</span>,</span><br><span class="line">                          mask=background_image,</span><br><span class="line">                          width=<span class="number">1920</span>,</span><br><span class="line">                          height=<span class="number">1080</span>).generate(cut_text)</span><br><span class="line">    image_colors = ImageColorGenerator(background_image)</span><br><span class="line"></span><br><span class="line">    plt.imshow(wordCloud.recolor(color_func=image_colors), interpolation=<span class="string">&quot;bilinear&quot;</span>)</span><br><span class="line">    <span class="comment"># plt.imshow(wordCloud,interpolation=&quot;bilinear&quot;)</span></span><br><span class="line">    plt.axis(<span class="string">&quot;off&quot;</span>)</span><br><span class="line">    <span class="comment"># plt.show()</span></span><br><span class="line">    plt.savefig(<span class="string">&#x27;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(filename), dpi=<span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cloud_img</span>(<span class="params">content</span>):</span></span><br><span class="line">    <span class="comment"># path_img = &quot;./backgrounds.jpg&quot;</span></span><br><span class="line">    <span class="comment"># path_img = &quot;./hrs.jpg&quot;</span></span><br><span class="line">    <span class="comment"># path_img = &quot;./rrby.jfif&quot;</span></span><br><span class="line">    all_msg = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> content:</span><br><span class="line">        <span class="keyword">if</span> boy_name <span class="keyword">in</span> line:</span><br><span class="line">            all_msg += <span class="string">&quot; &quot;</span></span><br><span class="line">        <span class="keyword">elif</span> girl_name <span class="keyword">in</span> line:</span><br><span class="line">            all_msg += <span class="string">&quot; &quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            msg = remove_pic(line)</span><br><span class="line">            all_msg += msg</span><br><span class="line">    generation_cloud_img(all_msg, <span class="string">&quot;cloudword.png&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">separate_analysis</span>(<span class="params">content</span>):</span></span><br><span class="line">    cbr_msg = <span class="string">&quot;&quot;</span></span><br><span class="line">    hr_msg = <span class="string">&quot;&quot;</span></span><br><span class="line">    flag = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> content:</span><br><span class="line">        <span class="keyword">if</span> boy_name <span class="keyword">in</span> line:</span><br><span class="line">            flag = <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">elif</span> girl_name <span class="keyword">in</span> line:</span><br><span class="line">            flag = <span class="number">2</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> flag == <span class="number">1</span>:</span><br><span class="line">                msg = remove_pic(line)</span><br><span class="line">                cbr_msg += msg</span><br><span class="line">            <span class="keyword">elif</span> flag == <span class="number">2</span>:</span><br><span class="line">                msg = remove_pic(line)</span><br><span class="line">                hr_msg += msg</span><br><span class="line">    use_jieba_and_show(cbr_msg)</span><br><span class="line">    use_jieba_and_show(hr_msg)</span><br><span class="line">    generation_cloud_img(cbr_msg, <span class="string">&#x27;cbr.png&#x27;</span>)</span><br><span class="line">    generation_cloud_img(hr_msg, <span class="string">&#x27;hr.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    print(<span class="string">&#x27;Run it ~&#x27;</span>)</span><br><span class="line">    <span class="comment"># chat.txt 就是聊天记录</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;xxx.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        contents = f.readlines()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># count_num(contents)</span></span><br><span class="line">    <span class="comment"># show_more_word(contents)</span></span><br><span class="line">    <span class="comment"># show_times(contents)</span></span><br><span class="line">    <span class="comment"># cloud_img(contents)</span></span><br><span class="line">    separate_analysis(contents)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>有趣的东西</tag>
        <tag>Python</tag>
        <tag>数据可视化</tag>
      </tags>
  </entry>
  <entry>
    <title>Visual Studio 2017 自动创建带增删查改的MVC网站</title>
    <url>/archives/ca407765.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="妹纸都开口了还有拒绝的理由吗"><a class="markdownIt-Anchor" href="#妹纸都开口了还有拒绝的理由吗"></a> 妹纸都开口了，还有拒绝的理由吗</h2>
<p>某天某妹纸找我，说这个MVC的创建不太会，要记一下controller、models、还有页面引用的东西，好不方便~<br />
记不住咋办嘛~有没快速生成适合自己使用的带有增删查改功能的MVC网站呢<br />
方法是有滴，经过本人的一番摸索~且听我给你一一讲述</p>
<p>步骤如下，咱这么简单的操作就不说这么多了，关键的内容咱再讲一下哈</p>
<h2 id="创建web应用程序项目"><a class="markdownIt-Anchor" href="#创建web应用程序项目"></a> 创建Web应用程序项目</h2>
<p>咱们先创建一个项目，新建-&gt;<a href="http://ASP.NET">ASP.NET</a> Web应用程序，起个有意义的名字-&gt;MVC-&gt;创建即可</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354143420.png" alt="1" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354168572.png" alt="2" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354184787.png" alt="3" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354201510.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354214238.png" alt="" /></p>
<h2 id="进入models文件夹创建属于我们的类"><a class="markdownIt-Anchor" href="#进入models文件夹创建属于我们的类"></a> 进入models文件夹，创建属于我们的类</h2>
<p>创建好了项目组之后，咱们二话不说，来到models文件夹<br />
右键，添加一个类，记得类的名字咱起个有意义的好吗</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354242831.png" alt="1" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354276507.png" alt="2" /></p>
<h2 id="安装entityframework"><a class="markdownIt-Anchor" href="#安装entityframework"></a> 安装EntityFramework</h2>
<p>由于类里面要用到EntityFramework，所以，咱们给装一下，如果装了的同学，可以忽略这一部分</p>
<h3 id="pm安装"><a class="markdownIt-Anchor" href="#pm安装"></a> PM安装</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354458639.png" alt="1" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354488862.png" alt="2" /></p>
<h3 id="界面化安装"><a class="markdownIt-Anchor" href="#界面化安装"></a> 界面化安装</h3>
<p>另外一个安装方法-by小机灵鬼</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354545782.png" alt="1" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354553488.png" alt="2" /></p>
<p>创建好类之后，就可以看到这样子的内容了<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%BD%91%E7%AB%99/1573357028594.png" alt="" /></p>
<h2 id="创建好类之后准备添加属性"><a class="markdownIt-Anchor" href="#创建好类之后准备添加属性"></a> 创建好类之后，准备添加属性</h2>
<p>这里是关键，大家注意看了哈</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354683024.png" alt="" /></p>
<p>先导入咱们的Entity，然后在我们的类里面添加我们要加属性，什么ID，名字、性别、邮件什么的，随意大家，请自由发挥<br />
接着就是再写一个派生自DBContext基类的类。用来处理提取、 存储和更新的实体框架我们自己的数据库上下文Marx类在数据库中的实例<br />
public DbSet<Marx> marxes { get; set; }<br />
这样子子就写好了</p>
<h2 id="在controllers里面操作"><a class="markdownIt-Anchor" href="#在controllers里面操作"></a> 在controllers里面操作</h2>
<p>然后再点到controllers，右键添加控制器，选择包含识图的MVC5控制器</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354716778.png" alt="1" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354780938.png" alt="2" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354804545.png" alt="3" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354824972.png" alt="4" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354835569.png" alt="5" /></p>
<p>有些同学可能会出这样的报错，咱们重新生成一下解决方案就好了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354844467.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354858584.png" alt="1" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354869227.png" alt="2" /></p>
<p>已启动全部重新生成: 项目: MarxMVC, 配置: Debug Any CPU</p>
<p>再配置一次</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354900325.png" alt="" /><br />
点了添加之后，就会出现这样子的操作界面</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354908752.png" alt="" /></p>
<p>一会儿过后，就可以看到控制器、页面已经全部生成了</p>
<h2 id="已经自动生成控制器-页面"><a class="markdownIt-Anchor" href="#已经自动生成控制器-页面"></a> 已经自动生成控制器、页面</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354950453.png" alt="1" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354958268.png" alt="2" /></p>
<h2 id="测试一下效果"><a class="markdownIt-Anchor" href="#测试一下效果"></a> 测试一下效果</h2>
<p>进入index的页面，点击运行，给大家展示一下 创建、修改、删除、详情的功能</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573354976250.png" alt="1" /><br />
进入首页</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573355031667.png" alt="2" /><br />
使用创建功能</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573355078545.png" alt="3" /><br />
回到首页可以看到生效</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573355088663.png" alt="4" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573355107207.png" alt="5" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573355114110.png" alt="6" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573355183157.png" alt="7" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-11-10/VS_%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%B8%A6%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E7%9A%84MVC%E7%B3%BB%E7%BB%9F/1573355193810.png" alt="8" /></p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>Visual Studio</category>
      </categories>
      <tags>
        <tag>MVC</tag>
        <tag>.Net</tag>
        <tag>Visual Studio</tag>
      </tags>
  </entry>
  <entry>
    <title>WO麦克风软件破解收费功能以及去广告</title>
    <url>/archives/9b7bb0cb.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="没有录音插孔的烦恼"><a class="markdownIt-Anchor" href="#没有录音插孔的烦恼"></a> 没有录音插孔的烦恼</h2>
<p>还是先废话说说怎么会想到做这个软件的破解。跟大家扯一下背景，交代一下下防止大家有疑问。因为我的Lenovo小新只有一个耳机输出口，没办法用到我耳机上面的麦克风，只能用本子自带的那个麦克风。这就导致了平时<strong>录音质量不好</strong>（其实是因为开黑的时候语音被吐槽说话太小声了）。</p>
<h2 id="找找有没便宜简单的解决方案"><a class="markdownIt-Anchor" href="#找找有没便宜简单的解决方案"></a> 找找有没便宜简单的解决方案</h2>
<p>所以问了问谷歌、度娘什么的，就晓得了“WO麦克风”这个软件。然后便安装好PC的客户端以及Android的客户端。在局域网内使用WIFI连接，测试了一下，收音效果比笔记本自带的mic好些，延迟也在可接受范围。</p>
<p>但是，在Android客户端有一些小瑕疵，比如：有广告、音量无法调整。尝试调整音量时，就提示我这个音量调整是收费功能，订阅即可~<br />
Android客户端大概长这样子</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571820216731.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571820187080.png" alt="" /></p>
<h2 id="穷屌丝没钱订阅试试破解"><a class="markdownIt-Anchor" href="#穷屌丝没钱订阅试试破解"></a> 穷屌丝没钱订阅，试试破解</h2>
<p>先取回apk文件</p>
<p>这里因为本人不想拿根数据线连着手机，太麻烦了。所以选择用adb 无线连接过去进行操作。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/WO%E5%BD%95%E9%9F%B3%E8%BD%AF%E4%BB%B6%E4%BF%AE%E6%94%B9/1571664370249.png" alt="" /><br />
使用默认端口连接</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/WO%E5%BD%95%E9%9F%B3%E8%BD%AF%E4%BB%B6%E4%BF%AE%E6%94%B9/1571664324027.png" alt="" /><br />
将我们需要修改的这个wo麦克风取回电脑本地</p>
<p>有同学可能不知道我是怎么找到这个软件的路径取回来的</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/WO%E5%BD%95%E9%9F%B3%E8%BD%AF%E4%BB%B6%E4%BF%AE%E6%94%B9/1571664352302.png" alt="" /><br />
怎么做找到这几个软件的路径？进到adb shell里面再使用一个 pm path 命令很简单啦<br />
蛤包名不知道咋个找到？请回顾前面发过的文章“ADB操作手机的那些骚操作”，不赘述啦~</p>
<h2 id="逆向分析"><a class="markdownIt-Anchor" href="#逆向分析"></a> 逆向分析</h2>
<p>取回来之后，右键apk文件，用压缩软件打开瞅一眼，如下所示</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571821623983.png" alt="" /><br />
进入res目录没看到什么奇奇怪怪so文件，咱们就先假设他没壳没加固过</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/WO%E5%BD%95%E9%9F%B3%E8%BD%AF%E4%BB%B6%E4%BF%AE%E6%94%B9/1571665564118.png" alt="" /></p>
<h3 id="进行反编译"><a class="markdownIt-Anchor" href="#进行反编译"></a> 进行反编译</h3>
<p>将apk文件丢进APKIDE（APK改之理）中，自动反编译便会安排上了~<br />
当然，有可能有些同学会反编译失败。出现类似这样的东西~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571822362719.png" alt="" /><br />
明显就是告诉你，反编译错误了</p>
<h3 id="更换apktool"><a class="markdownIt-Anchor" href="#更换apktool"></a> 更换apktool</h3>
<p>这个情况，给他换一下apktool就好了</p>
<p>下载一个新的apktool回来，将原来那个换掉就好。你看原来自带的apktool时间戳都2015年的，安卓发展这么快，反编译后面新做的软件难免会出问题的嘛。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571822444921.png" alt="" /><br />
OK，反编译好，打开清单文件就可以看到这样的界面了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571822707756.png" alt="" /></p>
<h3 id="找找广告"><a class="markdownIt-Anchor" href="#找找广告"></a> 找找广告</h3>
<p>咱们开头说了，不喜欢广告，我们在AndroidManifest里面看看能不能找到一些关于广告的东西</p>
<p>其实都不用怎么看，扫视了一眼，就发现了关于广告的内容。因为看到了ads，咱们平时有同学用过屏蔽网页广告的软件吧，是不是也带有ad</p>
<p>谷歌提供的广告服务，com.google.android.gms.ads.APPLICATION_ID</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571822875717.png" alt="" /></p>
<p>ads是谷歌公司的主要广告服务产品~<br />
咱们前面说了，Android软件就是由一个个activity做成的。所以，咱们在这里把有关ads的activity都删掉试试看，能不能编译出来，能否去掉广告~<br />
在这里，搜索一下关于ads的所有内容，并把所在行标记好</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571820613324.png" alt="" /></p>
<h2 id="修完完毕重新编译"><a class="markdownIt-Anchor" href="#修完完毕重新编译"></a> 修完完毕重新编译</h2>
<p>OK，这三行，咱们都给删了，然后保存。编译一下~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/WO%E5%BD%95%E9%9F%B3%E8%BD%AF%E4%BB%B6%E4%BF%AE%E6%94%B9/1571668660546.png" alt="" /><br />
报错失败了，咱就知道不会这么简单~</p>
<h3 id="找到报错点"><a class="markdownIt-Anchor" href="#找到报错点"></a> 找到报错点</h3>
<p>看一下报错，是资源错误，这就很好办了~去报错所在xml，找到这个属性，删掉保存就好~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/WO%E5%BD%95%E9%9F%B3%E8%BD%AF%E4%BB%B6%E4%BF%AE%E6%94%B9/1571668686268.png" alt="" /><br />
编译，安装，保存按钮灰色说明已保存~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571823433432.png" alt="" /><br />
OK,删掉之后，确认保存更改之后，咱们再编译一次。<br />
编译通过了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571823538688.png" alt="" /></p>
<h2 id="编译通过准备重新安装"><a class="markdownIt-Anchor" href="#编译通过准备重新安装"></a> 编译通过，准备重新安装</h2>
<p>点击安装按钮~</p>
<p>如果安装失败~，把手机原来的软件卸载掉再试一次，想知道为啥要这样的同学，麻烦回顾以前发过的文章~</p>
<h3 id="看看去广告后的效果"><a class="markdownIt-Anchor" href="#看看去广告后的效果"></a> 看看去广告后的效果</h3>
<p>OK，装好之后，打开软件，可以看到，已经是没有广告了~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-29/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1572324077218.png" alt="" /></p>
<p>但是，录音的音量还是调整不了。。。</p>
<h2 id="重新分析尝试破解音量调节"><a class="markdownIt-Anchor" href="#重新分析尝试破解音量调节"></a> 重新分析，尝试破解音量调节</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571825976390.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571826021533.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571826035485.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571826055537.png" alt="" /><br />
看看Java代码</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571826126626.png" alt="" /><br />
是这里没错了，结合函数名推测一下~</p>
<p>不妨在这里看看，看一下这段函数，写了啥</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">if</span> (<span class="keyword">this</span>.mSettings.isSubscriptionValid())</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">this</span>.mSettings.setVolume(paramInt);</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.mBinder != <span class="keyword">null</span>) &#123;</span><br><span class="line">	<span class="keyword">this</span>.mBinder.setVolumeLevel(paramInt);</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>这段是设置音量的，咋一看没啥问题。在if语句判断一下是不是通过订阅，如果通过的话，进入循环体使用setVolume来设置音量</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">this</span>.mSettings.setVolume(<span class="number">5</span>);</span><br><span class="line">  <span class="keyword">this</span>.mVolumeBar.setProgress(<span class="number">5</span>);</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="keyword">this</span>.mConfirmingToSubscribe);</span><br><span class="line">confirm(<span class="string">&quot;&quot;</span>, <span class="string">&quot;Volume adjustment is a premium feature. You need to subscribe to do that.&quot;</span>, <span class="string">&quot;Subscribe&quot;</span>, <span class="string">&quot;Cancel&quot;</span>, <span class="string">&quot;subscribe&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>.mConfirmingToSubscribe = <span class="keyword">true</span>;</span><br></pre></td></tr></table></figure>
<p>这个do循环，进去就给return 了~有点迷。。。不过，似乎是为了锁住音量条的</p>
<p>OK，咱们就从this.mSettings.isSubscriptionValid() 入手，看看这个方法是啥东西</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571827778193.png" alt="" /></p>
<p>点击这个函数，自动跳转过去</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571827830485.png" alt="" /></p>
<p>再跟一下mIsSubscriptionValid</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571827873145.png" alt="" /></p>
<p>可以看到在 Settings 这个类里面声明了这个变量<br />
双击它，看看这个类里面还有什么地方用到了这个变量</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571828150020.png" alt="" /></p>
<p>这个地方，看起来像给他赋值一个false啊</p>
<p>好，不如就先给他把false改成true试试<br />
当然在这里Java伪代码里面改是木得用的，要去smali里面去改</p>
<p>找到这个settings.class文件的smali代码</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571829032576.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1571829068564.png" alt="" /></p>
<p>这些smali代码对照着Java，是不是很容易就定位出这个文件没错了。<br />
找到咱们要改的subscriptionValid</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E5%BD%95%E9%9F%B3%E8%BD%AF%E4%BB%B6%E4%BF%AE%E6%94%B9/1571811145227.png" alt="" /></p>
<p>伪代码里面有这个getBoolean出现吧~，咱们看看这行写的啥<br />
invoke-interface {v2, v3, v5}, Landroid/content/SharedPreferences;-&gt;getBoolean(Ljava/lang/String;Z)Z</p>
<p>invoke-interface 是个调用指令，调用了android/content/SharedPreferences类里面的getBoolean，传了V2,V3,V5 这三个参数。根据Java伪代码以及经验，咱们v5存的就是false了</p>
<p>往上面找~看看v5赋了啥进去</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E5%BD%95%E9%9F%B3%E8%BD%AF%E4%BB%B6%E4%BF%AE%E6%94%B9/1571811163258.png" alt="" /><br />
给了个0x0，就是0的意思咯，众所周知0就是false噻<br />
咱们把他整成0x1，就是true了吧</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-23/WO%E5%BD%95%E9%9F%B3%E8%BD%AF%E4%BB%B6%E4%BF%AE%E6%94%B9/1571811154922.png" alt="" /></p>
<h2 id="重新回编译安装"><a class="markdownIt-Anchor" href="#重新回编译安装"></a> 重新回编译安装</h2>
<p>OK，改完，保存好。编译，安装一下。测试</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-29/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1572326180719.png" alt="" /></p>
<p>可以看到已经被我们随意调节音乐大小了<br />
鉴于实在不方便在文章里面展示出调节收录音量大小的变化，就不作演示了。但是，亲测是可以去掉广告，正常使用并可以正常调节音量的哟。</p>
<h2 id="附录测试平台"><a class="markdownIt-Anchor" href="#附录测试平台"></a> 附录：测试平台</h2>
<p>测试平台：Redmi Note 3</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-29/WO%E9%BA%A6%E5%85%8B%E9%A3%8E%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%94%B6%E8%B4%B9%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%8E%BB%E5%B9%BF%E5%91%8A/1572326432466.png" alt="" /><br />
逆向平台：Windows 10 专业版、APKIDE 3.2.0.0、akptool 241</p>
<h2 id="总结一下"><a class="markdownIt-Anchor" href="#总结一下"></a> 总结一下</h2>
<p>1、Android的逆向分析，先判断有没加壳（有的话就先不做了，不在咱们现在这篇文章的讨论范围内）</p>
<p>2、然后丢进反编译工具处理，尽量把Java的代码也反编译出来，方便自己对代码的理解。毕竟人肉解析smali代码还是有点儿难受的~</p>
<p>3、根据自己要修改的内容去找到对应的smali文件，看一下他的处理流程，结合Java代码看会好些</p>
<p>4、确定修改点之后，就修改文件。修改好一点就编译测试一下，别贪多，一步一步排查，心急吃不了热豆腐嘛~</p>
<p>5、编译安装之后，检查App以及功能是否还能正常使用</p>
<h2 id="结尾叨叨"><a class="markdownIt-Anchor" href="#结尾叨叨"></a> 结尾叨叨</h2>
<p>又到结尾叨叨的时候了，这次这个文章也是2400字左右（基本是三篇高中作文的量？），读到这里的同学们仍旧是真爱~</p>
<p>Android逆向是比较有意思的一个东西，有一点儿门槛。随着Android软件的安全攻防推进，现在的App大部分都做的比以前安全多了。所以，逆向破解难度也在逐步提高，这是好事。</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>信息安全</category>
      </categories>
      <tags>
        <tag>APK</tag>
        <tag>逆向</tag>
        <tag>破解</tag>
      </tags>
  </entry>
  <entry>
    <title>NAS邮件服务器</title>
    <url>/archives/fd5228cc.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="为了装13而搭建一个邮件服务器"><a class="markdownIt-Anchor" href="#为了装13而搭建一个邮件服务器"></a> 为了装13而搭建一个邮件服务器</h2>
<p>嘿，各位同学们，看过我之前写过的文章的同学，应该知道，我写了两三篇关于NAS的文章。大部分是关于NAS的内网穿透使用，以及服务搭建的内容。但是，我的那个黑群晖的CPU以及内存的平均利用率才占个百分几和百分之二十左右。<br />
完完全全可以继续挖掘出更加多有趣有意思的服务进行一个使用啊，仅仅当作一个存储阵列，未免有点大才小用了叭~<br />
所以，后续，本人又给他安装搭建起了，Plex Media Serve 、 Docker 、Cloud Sync 、 MailPlus Server 之类的服务。</p>
<p>咱们这期就挑 MailPlus Server 来给大家说说，咱们，怎么去搭建一个属于自己的邮件服务器，对自己的邮箱内容做到一个完全可控。<br />
因为，怎么说，咱们平时用的无论是163邮箱、QQ邮箱、Gmail邮箱、企业邮箱 等等邮箱，咱们不能说是完全归自己管的吧。有些邮件被拦截了，丢失了，咱也不好打电话给客服找回来吧~<br />
要是自己搭建的服务，邮件的发送，接收，数据导入导出，完全都是可以看到的，可控滴呀~<br />
还有咱们给别人留邮箱地址的时候，留的是自己搭建的邮箱，是不是瞬间显得高大上一些呀~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571654314451.png" alt="" /></p>
<p>说一下我用到的东西：</p>
<ul>
<li>一部NAS，咱们现在用的是黑群晖</li>
<li>一个域名，咱用之前自己注册过的</li>
<li>一部拥有公网IP的服务器</li>
</ul>
<p>OK，咱们现在开始操作好吗~</p>
<h2 id="进入群晖控制面板进行安装软件"><a class="markdownIt-Anchor" href="#进入群晖控制面板进行安装软件"></a> 进入群晖控制面板进行安装软件</h2>
<p>先把咱们的群晖界面打开，进入控制面板，如图所示<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-16/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571225285844.png" alt="" /><br />
把上面指的两个套件（MailPlus、MialPlus Server）安装好，过程如下</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-16/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571225300770.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-16/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571225319869.png" alt="" /><br />
转好之后，咱们就要打开 <strong>MailPlus Server</strong></p>
<h3 id="打开-mailplus-server"><a class="markdownIt-Anchor" href="#打开-mailplus-server"></a> 打开 MailPlus Server</h3>
<p>选择创建新邮件系统</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-16/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571225856682.png" alt="" /></p>
<p>配置一下这个页面，咱们选择好网络界面用的是那个网卡，一般的同学都是一个的吧~也有可能有大佬有两三个。咱们自己选好就可以了。其实个人感觉这个问题不大。主要的是域名还有主机名的配置，填对。<br />
域名就填自己的域名，不要www，直接填域名。主机名就用mail 做前缀吧~<br />
如下所示</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-16/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571225903553.png" alt="" /><br />
过些许时间~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-16/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571225963356.png" alt="" /><br />
然后，打开一下，<strong>MailPlus Server</strong><br />
进入<strong>账号</strong>，将自己想要激活的账号激活了，我这里选择把 admin 激活<br />
记得，勾上之后，要点<strong>应用</strong>呀，带哥们~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-16/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571226020897.png" alt="" /></p>
<p>切换选项卡到服务，把几个功能都检查勾选一下，如下所示</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571655765861.png" alt="" /></p>
<h3 id="打开synology应用程序门户进行设置"><a class="markdownIt-Anchor" href="#打开synology应用程序门户进行设置"></a> 打开Synology应用程序门户进行设置</h3>
<p>下面打开<strong>控制面板</strong>，打开<strong>Synology应用程序门户</strong>，可以看到如下界面</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-16/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571226056643.png" alt="" /></p>
<p>点一下<strong>MailPlus</strong>，然后再点<strong>编辑</strong></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-16/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571226080767.png" alt="" /></p>
<p>点击<strong>启用自定义别名</strong>，在别名处，填入咱们设的mail<br />
然后勾上 <strong>启动自定义域</strong>，然后填入咱们的www前缀的域名，顺手把 HTTP/2 启用一下</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571655352670.png" alt="" /></p>
<p>然后，鉴于之前写过了NAS内网穿透的内容。咱们就不多重复搭建内网穿透的过程了。详见：远程访问NAS内网穿透<br />
直接说一下，我是怎么将NAS绑定到我公网IP的服务器以及设置的域名解析的哈</p>
<h2 id="旧文内容更正声明"><a class="markdownIt-Anchor" href="#旧文内容更正声明"></a> 旧文内容更正声明</h2>
<p>这里更正一下之前那篇 远程访问NAS内网穿透 文章，里面介绍端口转发的办法是使用 <strong>rinetd</strong> 这个工具来快速实现。<br />
然后，实践之后，现实给了我<strong>狠狠的两拳</strong></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571656268500.png" alt="" /></p>
<p>原因就是，某天我收到了服务器监控脚本发到手机的邮件，说CPU占用率超高，达到90%+了。然后，赶紧上线查了一下<sub>我的一眼就能看到我的CPU被某进程疯狂蹂躏</sub>它就是rinetd。<br />
我觉着CPU当时的内心想法是这样的：</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571656493685.png" alt="" /></p>
<p>具体原因是因为：rinetd使用的是select、并不是epoll。</p>
<p>解决办法就是停止使用，rinetd 这个工具，使用Nginx进行转发。</p>
<h2 id="停用rinetd使用nginx"><a class="markdownIt-Anchor" href="#停用rinetd使用nginx"></a> 停用rinetd使用Nginx</h2>
<h3 id="修改nginx配置"><a class="markdownIt-Anchor" href="#修改nginx配置"></a> 修改Nginx配置</h3>
<p>Nginx的配置文件，大概就这样写：</p>
<p>先在某路径下面创建好咱们的nginx的conf文件，里面写入这样的内容</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571656784005.png" alt="" /></p>
<p>然后再 events {} 后面，把steam{} 写好，里面将咱们的conf包含进去就好，为了防止以后想添加更多的conf又要修改主配置文件，所以把include路径中所有的conf都load进来，用*.conf来表示就好<br />
如下</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571657157327.png" alt="" /></p>
<p>OK，咱们到底需要开放什么端口呢？咱配置文件也不能瞎写啊，要转发什么端口？<br />
我这这里列一下吧：分别是</p>
<p>25、465、587、995、993、101、143 这几个端口。</p>
<h3 id="打开防火墙"><a class="markdownIt-Anchor" href="#打开防火墙"></a> 打开防火墙</h3>
<p>要是像本人这样，用的阿里云服务器，记得还要去服务器里面把<strong>防火墙</strong>对应的端口开一下。</p>
<p>接下来就到激动人心的DNS解析配置时间了<br />
对不起<sub>我域名也是阿里云里面买的</sub>，所以还是以阿里云为例演示</p>
<h3 id="进行域名解析"><a class="markdownIt-Anchor" href="#进行域名解析"></a> 进行域名解析</h3>
<p>登录控制台之后，找到<strong>云解析DNS</strong> ，找不到的同学，可以这样找</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571657615555.png" alt="" /></p>
<p>打开之后，选择自己的域名进行解析设置</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571657714243.png" alt="" /></p>
<p>然后添加几个记录、以本人的为样</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571658418224.png" alt="" /></p>
<p>添加一个记录的过程，如下所示</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571657931632.png" alt="" /></p>
<p>参考上面的图，对准主机记录 以及 记录类型，把那几个记录值都添加好之后。可以说完成了95%的工作了。</p>
<h2 id="基本完成打开mailplus试试"><a class="markdownIt-Anchor" href="#基本完成打开mailplus试试"></a> 基本完成，打开MailPlus试试</h2>
<p>然后就可以回到NAS里面，打开一下MailPlus</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571658057369.png" alt="" /></p>
<p>进去之后，可以试试发个邮件，看看能否成功发出，然后，测试能否正常接收邮件</p>
<p>这里有个坑，一般发邮件之后，遭到退信情况的话，大都可能是<strong>SPF</strong>没配置好。这个SPF坑，大家遇到的话，去查一下该咋个配置就好，挺好处理的。这里不展开说~</p>
<p>给个测试过程出来，看看。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571661180135.png" alt="" /></p>
<p>这是使用 自己搭建的服务发送的</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571661200375.png" alt="" /></p>
<p>这个是我另外一个邮箱接到邮件后，回复一下~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-21/NAS%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/1571660132121.png" alt="" /></p>
<p>可以看到成功接收到了，打完收工</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>有趣的东西</tag>
        <tag>NAS</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>CVE-2019-14287复现记录</title>
    <url>/archives/be5b30a1.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="日常睡前刷资讯消息"><a class="markdownIt-Anchor" href="#日常睡前刷资讯消息"></a> 日常睡前刷资讯消息</h2>
<p>前两天16号晚上十二点多，日常刷资讯的时候，忽然瞅见了一篇文章说受限用户可以运行root命令<br />
普通用户执行root指令，这不就权限绕过了嘛~<br />
是个好东西</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-18/CVE-2019-14287%E5%A4%8D%E7%8E%B0%E8%AE%B0%E5%BD%95/1571383854639.png" alt="" /></p>
<p>这个漏洞是由苹果信息安全部门的大佬发现的，提供了漏洞的利用方式</p>
<blockquote>
<p>sudo -u#-1 id -u<br />
sudo -u#4294967295 id -u</p>
</blockquote>
<p>这两个方式都可以<br />
下面将本人复现记录放一下</p>
<h2 id="动手复现"><a class="markdownIt-Anchor" href="#动手复现"></a> 动手复现</h2>
<p>先添加一个账号tina</p>
<p>useradd tina<br />
passwd tina<br />
然后在 /etc/sudoers这个文件中配置权限</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-18/CVE-2019-14287%E5%A4%8D%E7%8E%B0%E8%AE%B0%E5%BD%95/1571386098956.png" alt="" /></p>
<p>接着 su tina 切换用户</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-18/CVE-2019-14287%E5%A4%8D%E7%8E%B0%E8%AE%B0%E5%BD%95/1571386133017.png" alt="" /></p>
<p>尝试一下列出root目录内容</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-18/CVE-2019-14287%E5%A4%8D%E7%8E%B0%E8%AE%B0%E5%BD%95/1571386167287.png" alt="" /></p>
<p>然后利用漏洞看一下</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-18/CVE-2019-14287%E5%A4%8D%E7%8E%B0%E8%AE%B0%E5%BD%95/1571385583872.png" alt="" /></p>
<p>然后 试一下写入一个文件</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-18/CVE-2019-14287%E5%A4%8D%E7%8E%B0%E8%AE%B0%E5%BD%95/1571385550973.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-18/CVE-2019-14287%E5%A4%8D%E7%8E%B0%E8%AE%B0%E5%BD%95/1571386335570.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-18/CVE-2019-14287%E5%A4%8D%E7%8E%B0%E8%AE%B0%E5%BD%95/1571385515949.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-18/CVE-2019-14287%E5%A4%8D%E7%8E%B0%E8%AE%B0%E5%BD%95/1571385583872.png" alt="" /></p>
<p>可以看到是无法写入的</p>
<p>利用漏洞写看一下<br />
sudo -u#-1 vim /root/xuzhiting.txt</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-18/CVE-2019-14287%E5%A4%8D%E7%8E%B0%E8%AE%B0%E5%BD%95/1571386318184.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-10-18/CVE-2019-14287%E5%A4%8D%E7%8E%B0%E8%AE%B0%E5%BD%95/1571386372613.png" alt="" /><br />
可以看到已经在root目录下写入了我们的文件</p>
<h2 id="我们还是修复一下下漏洞吧"><a class="markdownIt-Anchor" href="#我们还是修复一下下漏洞吧"></a> 我们还是修复一下下漏洞吧</h2>
<p>修复该咋个处理？<br />
这个漏洞修复可以通过升级sudo版本来完成</p>
<p>文章部分内容参考此处：<a href="https://www.sudo.ws/alerts/minus_1_uid.html">https://www.sudo.ws/alerts/minus_1_uid.html</a></p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>信息安全</category>
      </categories>
      <tags>
        <tag>CVE</tag>
        <tag>漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>可视化Tracert路由追踪工具</title>
    <url>/archives/a9897d1a.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>tracert 很多同学可能都没用过，以至于连名字可能都不知道，即使用过可能也只是知道这个Windows自带的命令可以查看路由，而不太清楚这背后的原理。</p>
<p>所以，最近就自己搞了一个工具，可视化Tracert路由追踪工具。方便自己查看网络路由情况。实测效果和Windows自带的tracert一样。并提供多了两三个功能以便查看</p>
<ul>
<li>平均路由时间</li>
<li>路由时间方差</li>
<li>使用颜色直观反映时间情况</li>
</ul>
<h2 id="windows自带的tracert运行效果"><a class="markdownIt-Anchor" href="#windows自带的tracert运行效果"></a> Windows自带的tracert运行效果</h2>
<p>先给大家看一下Windows自带的tracert运行效果。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-21/%E5%8F%AF%E8%A7%86%E5%8C%96Tracert%E8%B7%AF%E7%94%B1%E8%BF%BD%E8%B8%AA%E5%B7%A5%E5%85%B7/1555848632003.png" alt="MarxCBR的小屋" /></p>
<h2 id="tracert追踪原理"><a class="markdownIt-Anchor" href="#tracert追踪原理"></a> tracert追踪原理</h2>
<p>tracert是一款计算机网络工具，可显示数据包在IP网络经过的路由器的IP地址。<br />
为何可以追踪？<br />
原理如下：</p>
<blockquote>
<p>程序是利用增加存活时间（TTL）值来实现其功能的。每当数据包经过一个路由器，其存活时间就会减1。当其存活时间是0时，主机便取消数据包，并发送一个ICMP TTL数据包给原数据包的发出者。<br />
程序发出的首3个数据包TTL值是1，之后3个是2，如此类推，它便得到一连串数据包路径。注意IP不保证每个数据包走的路径都一样。</p>
</blockquote>
<p>差不多就和下面这个图一样，每一种颜色代表没一次发送的数据包。绿色是TTL为1的，蓝色为TTL为2的……依次类推……<br />
PS：原谅我的灵魂画作…… 侧面印证了数位板的重要性，有没推荐的啊，朋友们</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-21/%E5%8F%AF%E8%A7%86%E5%8C%96Tracert%E8%B7%AF%E7%94%B1%E8%BF%BD%E8%B8%AA%E5%B7%A5%E5%85%B7/1555845935593.png" alt="" /></p>
<h2 id="实现思路"><a class="markdownIt-Anchor" href="#实现思路"></a> 实现思路</h2>
<p>所以，我们只要用ICMP协议发送自己构造的数据包就可以实现路由追踪功能了。即构造TTL值从1开始的ICMP数据包，然后逐个增加TTL值，直到到达目标机器上面。<br />
这里有个注意的点，并不是所有网关都会如实返回 ICMP 超时报文。出于安全性考虑，大多数防火墙以及启用了防火墙功能的路由器缺省配置为不返回各种 ICMP 报文，其余路由器或交换机也可被管理员主动修改配置变为不返回 ICMP 报文。因此 Tracert 程序不一定能拿全所有的沿途网关地址。所以，当某个 TTL 值的数据包得不到响应时，并不能停止这一追踪进程，程序仍然会把 TTL 递增而发出下一个数据包。一直达到默认或用参数指定的追踪限制才结束追踪。</p>
<h2 id="icmp报文格式"><a class="markdownIt-Anchor" href="#icmp报文格式"></a> ICMP报文格式</h2>
<p>然后给大家展示一个ICMP报文格式</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-21/%E5%8F%AF%E8%A7%86%E5%8C%96Tracert%E8%B7%AF%E7%94%B1%E8%BF%BD%E8%B8%AA%E5%B7%A5%E5%85%B7/1555846553971.png" alt="" /></p>
<p>这个报文类型，其实有很多种，大家可以看到前面类型一共保留了8位，2的8次方=256。但是现在其实只分了大概40种左右。在这里我们将类型选为 8-请求回显 。</p>
<h2 id="使用c-和-qt5-进行开发"><a class="markdownIt-Anchor" href="#使用c-和-qt5-进行开发"></a> 使用C++ 和 QT5 进行开发</h2>
<p>然后编程语言采用C++，使用winsock发送数据，界面的话，就采用QT5整合界面。</p>
<h3 id="qt开发的软件打包方法"><a class="markdownIt-Anchor" href="#qt开发的软件打包方法"></a> QT开发的软件打包方法</h3>
<p>在这里扯一下QT开发的软件该怎么打包<br />
在这个过程中，我们要选择对应的版本工具进行打包。<br />
比如我这里用的是VS2017 release 的 x64 位的软件 ，所以，在选择打包工具的时候，就应该用对应的版本。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-21/%E5%8F%AF%E8%A7%86%E5%8C%96Tracert%E8%B7%AF%E7%94%B1%E8%BF%BD%E8%B8%AA%E5%B7%A5%E5%85%B7/1555847937646.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-21/%E5%8F%AF%E8%A7%86%E5%8C%96Tracert%E8%B7%AF%E7%94%B1%E8%BF%BD%E8%B8%AA%E5%B7%A5%E5%85%B7/1555847999791.png" alt="" /></p>
<p>打开后，cd 到软件目录，输入 QT 打包命令 <strong>windeployqt</strong> 你软件</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-21/%E5%8F%AF%E8%A7%86%E5%8C%96tracert%E8%B7%AF%E7%94%B1%E8%BF%BD%E8%B8%AA%E5%B7%A5%E5%85%B7/1555844904194.png" alt="" /></p>
<h2 id="效果"><a class="markdownIt-Anchor" href="#效果"></a> 效果</h2>
<p>最后，软件跑出来的效果大概长这样子：</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/trace.png" alt="" /></p>
<p>由于代码太多，项目不方便在文章中展示<br />
该项目已经上传到GitHub，欢迎大家去fork、给star,GitHub地址<a href="https://github.com/97CBR/Tracert">Tracert</a></p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>QT开发</category>
      </categories>
      <tags>
        <tag>QT</tag>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>用QSS给QT默认的控件穿件衣服</title>
    <url>/archives/479bb35e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前文再续书接上一回"><a class="markdownIt-Anchor" href="#前文再续书接上一回"></a> 前文再续，书接上一回</h2>
<p>继续上面的那个磁盘映射软件，咱们上一篇已经成功利用Windows中C++的一个接口，实现了网络驱动器映射的功能</p>
<p>但是，长这样的软件，您想用吗？？？</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-18/%E7%94%A8QSS%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560865577695.png" alt="" /></p>
<p>不啊，咱们看到这个的软件，相信大家都会毫不犹豫的关掉<br />
可能还会吐槽一下，这~软件也太丑了吧。。。<br />
毕竟老话有讲：人靠衣装，佛靠金装<br />
所以，咱们今天，大概说说，怎么搞，将自己的控件穿件衣服<br />
让咱们自己写的软件变的美美哒</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-18/%E7%94%A8QSS%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560865778310.png" alt="" /></p>
<p>大概我随意给它变成了这样子</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-18/%E7%94%A8QSS%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/%E6%95%88%E6%9E%9C.gif" alt="" /></p>
<p>那，咱们就给自己的那个软件来穿件衣服吧</p>
<h2 id="删除不需要的控件"><a class="markdownIt-Anchor" href="#删除不需要的控件"></a> 删除不需要的控件</h2>
<p>删除不需要的默认生成的控件<br />
因为我们的软件并不需要默认的菜单栏<br />
也不需要默认的状态栏<br />
所以，咱们选择删除它<br />
如下所示</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-15/%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560603257772.png" alt="" /></p>
<p>OK，删完了咱们不要的东西</p>
<h2 id="给底面换个背景颜色"><a class="markdownIt-Anchor" href="#给底面换个背景颜色"></a> 给底面换个背景颜色</h2>
<p>咱们准备给最里面的底面换个颜色<br />
大概就像，女生给自己打个粉底吧</p>
<p>步骤就像下面这样</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-15/%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560603363845.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-15/%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560603389608.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-15/%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560603412558.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-15/%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560603439991.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-18/%E7%94%A8QSS%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560866088683.png" alt="" /></p>
<p>怎么样，左边是效果图，右边是原图<br />
“美白效果”是不是满分啊<br />
当然，咱们也可以把颜色换成自己喜欢的任何一个 RGB 值</p>
<h2 id="添加自己的组件"><a class="markdownIt-Anchor" href="#添加自己的组件"></a> 添加自己的组件</h2>
<p>添加自己的控件或者是利用控件组合起来的控件<br />
大概长这样</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-18/%E7%94%A8QSS%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560866491488.png" alt="" /></p>
<p>当然，这个样子也是用默认控件做成的<br />
摆起来仍不美观<br />
但是，让自己这个组合控件变的更好看并不是咱们今天的主要话题</p>
<p>我们这次，先给大家讲一下组合控件该怎么控制、怎么摆<br />
上面那块东西，用了这几个控件<br />
主要考虑用来做驱动器的状态显示：<br />
图标、本地盘符名称、远程路径、已用容量、最下面是显示已用和总空间</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-18/%E7%94%A8QSS%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560866696566.png" alt="" /></p>
<p>我们按照设想的样子给他摆好之后<br />
注意哦，我用的并不是Widget、而是QH\VBoxLayout 这两个做容器<br />
后期，QH\VBoxLayout 可以转换到widget的，不用担心<br />
因为，控件的默认sizepolicy有这几个参数</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-18/%E7%94%A8QSS%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560866943372.png" alt="" /></p>
<p>默认的控件，垂直策略都是 Fixed<br />
咱们可以根据自己的需求，而改变自己的策略</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-18/%E7%94%A8QSS%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560867025841.png" alt="" /></p>
<p>这几个策略的区别在这里，我列出来给大家看看</p>
<p>Fixed&lt;&lt;&lt;&gt;&gt;&gt;缺省大小是唯一可以接收的改变，因此部件不能放大也不能缩小。<br />
Minimum&lt;&lt;&lt;&gt;&gt;&gt;缺省大小是最小值，并且是充分的。部件允许扩展，但是并不倾向扩展（例如：水平方向上的按钮），不能比缺省大小提供的大小更小。<br />
Maximum&lt;&lt;&lt;&gt;&gt;&gt;缺省大小是最大值，假如其它部件需要空间并且不会破坏该部件，那么该部件允许被缩小（例如：一个分割线）。<br />
Preferred&lt;&lt;&lt;&gt;&gt;&gt;缺省大小是最佳效果，部件允许放大或缩小，但不倾向于扩展比sizeHint()大（QWidget的缺省策略）。<br />
Expanding&lt;&lt;&lt;&gt;&gt;&gt;缺省大小是合理的大小，但部件允许缩小并且可用。部件可以利用额外的空间，因此它将会得到尽可能多的空间（例如：水平方向上的滑块）。<br />
MinimumExpanding&lt;&lt;&lt;&gt;&gt;&gt;缺省大小是最小值，并且是足够的。部件允许使用额外空间，因此它将会得到尽可能多的空间（例如：水平方向上的滑块）。<br />
Ignored&lt;&lt;&lt;&gt;&gt;&gt;缺省大小将会被忽略，部件将会得到尽可能多的空间。</p>
<p>然后，我们到QVBoxLayout这个控件中<br />
我们可以对QVBoxLayout这个容器中的控件按照比例进行排序<br />
如下所示：</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-15/%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560604473422.png" alt="" /></p>
<p>你看，箭头指的 1,1,1 分别就是 horizontallayout_2、label、progressbar 这三个东西的比例了<br />
而layoutSpacing这个会控制控件间隔</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-18/%E7%94%A8QSS%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560867540871.png" alt="" /></p>
<p>左边的是设为10，右边的设为0<br />
区别还是挺大的哈</p>
<p>OK，到这里，我们成功搞出了一个组合控件</p>
<h2 id="给按钮换个样子"><a class="markdownIt-Anchor" href="#给按钮换个样子"></a> 给按钮换个样子</h2>
<p>大概可以做成这样子</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-18/%E7%94%A8QSS%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560869173668.png" alt="" /></p>
<p>咱们给他的字换成了白色、底为红色、边界是圆润的<br />
大家并不用盘它哈<br />
做到这个效果也很简单<br />
如上文一样，咱们编写QSS<br />
如下所示</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-18/%E7%94%A8QSS%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560869275715.png" alt="" /></p>
<p>QSS和CSS很像<br />
Qt支持所有的CSS2定义的选择器<br />
大家看着CSS怎么写，大概也可以试试，万一就通用呢</p>
<h2 id="做一下动效"><a class="markdownIt-Anchor" href="#做一下动效"></a> 做一下动效</h2>
<p>我们处理一下上面文章刚开头看到的那个界面滑动的效果<br />
这个动效的实现，也很简单</p>
<p>我们大概可以理解成，将界面分成3块<br />
然后，点击按钮的时候，将下面的那块平滑移动覆盖到上面中间那块<br />
当然，如果是已经覆盖了，就将他下滑而将中间显示出来<br />
这里要用到三个函数<br />
分别是<br />
setGeometry：设置控件大小及位置<br />
resize：设置界面大小<br />
repaint：刷新界面</p>
<p>在这里，说一下，这个动效的实现是要用循环来完成的<br />
咱们上面三个函数都得放到循环里面哦</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-18/%E7%94%A8QSS%E7%BB%99QT%E9%BB%98%E8%AE%A4%E7%9A%84%E6%8E%A7%E4%BB%B6%E7%A9%BF%E4%BB%B6%E8%A1%A3%E6%9C%8D/1560868559094.png" alt="" /></p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>QT开发</category>
      </categories>
      <tags>
        <tag>QT</tag>
        <tag>QSS</tag>
        <tag>开发技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>自己写一个映射网络驱动器工具</title>
    <url>/archives/dc4eed07.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="我们不如自己写一个映射网络驱动器工具吧"><a class="markdownIt-Anchor" href="#我们不如自己写一个映射网络驱动器工具吧"></a> 我们不如自己写一个映射网络驱动器工具吧</h2>
<p>还记得上篇说到的VS创建QT工程并添加到GitHub中吗？<br />
我们当时创建了一个项目，叫NetDrive，是本人闲着打算写的一个小工具，打算做一个网络驱动器的映射的工具<br />
这小东西开源在GitHub中，大家可以在GitHub中fork下来一起玩，参加到这个小项目中，欢迎提交PR哦。<br />
那废话不多说了，我们打开项目</p>
<h2 id="设计界面"><a class="markdownIt-Anchor" href="#设计界面"></a> 设计界面</h2>
<p>先双击ui文件，进入设计界面</p>
<p>从左边拖一些基本的组件进来<br />
把功能和大概要展示出来的关键内容给摆好</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-9/QT%E5%81%9A%E4%B8%80%E4%B8%AA%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7/1560077940746.png" alt="" /></p>
<h2 id="创建连接信号槽"><a class="markdownIt-Anchor" href="#创建连接信号槽"></a> 创建连接信号槽</h2>
<p>emmm，大概设计好这个界面之后<br />
我们就可以将槽函数、按钮什么的，绑定好<br />
在我们的设计器里，点击信号设置</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560485004757.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560485099976.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560485159060.png" alt="" /></p>
<p>按回车没用的，要点那个 + 号</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560485184325.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560485319447.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560485328853.png" alt="" /></p>
<p>看到这个按钮绑定到这个函数，就可以了<br />
我们准备写功能去，记得先Ctrl + S 保存好哟</p>
<h2 id="准备功能函数开发"><a class="markdownIt-Anchor" href="#准备功能函数开发"></a> 准备功能函数开发</h2>
<p>参考了巨硬的这个官方说明样例：<a href="https://docs.microsoft.com/zh-cn/windows/desktop/WNet/assigning-a-drive-to-a-share">https://docs.microsoft.com/zh-cn/windows/desktop/WNet/assigning-a-drive-to-a-share</a></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560490720654.png" alt="" /></p>
<p>他们都提供好一个Demo了，这就十分快乐了，代码看起来简单易懂<br />
就施展CV大法了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560485859827.png" alt="" /></p>
<p>这个时候，他就报错了。<br />
说，无法从“const char [6]”转换为“TCHAR [32]”</p>
<p>所以，我们就看看TCHAR是什么类型<br />
在TCHAR那里，F12，跟进一下到它声明的地方</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560486672597.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560485944356.png" alt="" /><br />
看到TCHAR就是WCHAR<br />
再跟一下，看到WCHAR就是wchar_t<br />
是16-bit 的 Unicode的字符，16-bit就是两个字节嘛<br />
所以，在官方demo中，解决这个 const char 无法转到TCHAR的办法就是 加个 L</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560485888110.png" alt="" /></p>
<p>在字符串前加一个L作用: unicode字符集是两个字节组成的。L告示编译器使用两个字节的 unicode 字符集。</p>
<p>在这里，我随意，打印一个样例出来，加L和不加L的一个字符串所占空间给大家看看<br />
至于为啥MARXCBR七个字符占了8个空间，是因为字符串会自动加一个“/0”<br />
结合上面说的和图里面的数据，相信大家能从中一眼看出差异所在</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560486316765.png" alt="" /></p>
<h2 id="踩的坑一"><a class="markdownIt-Anchor" href="#踩的坑一"></a> 踩的坑：一</h2>
<p>OK，咱们解决了官方demo在本地不适用的情况之后<br />
我们直接运行一下</p>
<p>将我之前搞的那个NAS的账号密码还有本地盘符以及映射路径填好之后</p>
<p>在res那个地方，断个点，看一下，有没能映射回来</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560488989054.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560489016065.png" alt="" /></p>
<p>嗯，看起来是映射成功了</p>
<p>我们回到资源管理器里面看看</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560489158720.png" alt="" /></p>
<p>但是，没找到我映射回来的B盘<br />
不对呀，刚才都说连接成功，映射成功了</p>
<p>然后，这就是我踩坑的地方了，嘻嘻嘻。我那时候，找来找去都没到为啥，又跑去说明文档里面去看。<br />
但是都没说到，为啥资源管理器没有显示我的网络驱动器</p>
<p>直到，本人在VS中关掉项目，打算重新打开时，才发现<br />
映射的盘符显示在里面了。。。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560489383421.png" alt="" /></p>
<p>然后才醒悟，我的VS是用管理员权限去运行的</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560489416608.png" alt="" /></p>
<p>所以，写好跑出来的程序，也是用管理员去执行的。那么映射回来盘，就只能有管理员权限才能看到啦。</p>
<p>跑去CMD里面，确认一下，的确是管理员才能看到。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560489517411.png" alt="" /></p>
<p>所以，用普通用户权限去执行一下这个程序</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560489682336.png" alt="" /></p>
<p>资源管理器里面就出来了</p>
<p>那么，官方的demo坑就踩完了</p>
<h2 id="创建函数与前面设计的信号关联"><a class="markdownIt-Anchor" href="#创建函数与前面设计的信号关联"></a> 创建函数与前面设计的信号关联</h2>
<p>接着，我们要建立一个函数，名字与刚才在设计器里面绑定的函数一样<br />
在点击 “连接” 按钮后，就会自动连接好我们所填参数的网络驱动器</p>
<p>在头文件里面，加入 slots：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">connectDrive</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560491208390.png" alt="" /></p>
<p>在cpp里面，写逻辑代码<br />
在这里，我们需要获取用户填入的用户名、密码、他所期待的驱动器号，还有远程映射的路径</p>
<p>但是，这里有个需要提醒的：设计不规格，编码泪两行</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560491336147.png" alt="" /></p>
<p>如上图所示，如果在designer 里面，没将控件对应的对象名定义好的话<br />
在写代码的时候，你就会连自己也不知道这一堆不明意义的控件默认名称到底哪个是哪个<br />
所以，我们在设计的时候，就要将控件的对象名给确定好</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560491634436.png" alt="" /><br />
然后，输入对象的名字，回车！<br />
还要记得保存，Ctrl S 一下，否则是不会保存更改的。</p>
<p>我们回到VS里面，重新生成一下<br />
这个时候，再用ui.去找对象，就好找多了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560492031575.png" alt="" /></p>
<h2 id="编写网络驱动器映射函数"><a class="markdownIt-Anchor" href="#编写网络驱动器映射函数"></a> 编写网络驱动器映射函数</h2>
<p>然后，将刚才的demo，抽出来，搞成一个函数<br />
将需要的参数传过去就好了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560492383688.png" alt="" /></p>
<p>然后，在QString转TCHAR的时候，果不其然，还是要出幺蛾子</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560492521970.png" alt="" /></p>
<p>应使用{…} 来初始化聚合对象<br />
所以，我们给他加了一个{}</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560492575294.png" alt="" /></p>
<p>然后在网上参考了一下：QString到TCHAR<br />
尝试了几个方案，都不行，最后在某一篇博文中，找到了一段类型转换的宏定义</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> UNICODE</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> QStringToTCHAR(x)     (wchar_t*) x.utf16()</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PQStringToTCHAR(x)    (wchar_t*) x-&gt;utf16()</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TCHARToQString(x)     QString::fromUtf16((x))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TCHARToQStringN(x,y)  QString::fromUtf16((x),(y))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> QStringToTCHAR(x)     x.local8Bit().constData()</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PQStringToTCHAR(x)    x-&gt;local8Bit().constData()</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TCHARToQString(x)     QString::fromLocal8Bit((x))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TCHARToQStringN(x,y)  QString::fromLocal8Bit((x),(y))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//来源：https://blog.csdn.net/w_sx12553/article/details/8514839</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>QString不能直接转换到TCHAR<br />
好记得上面说的TCHAR是16-bit是字符嘛<br />
恰好QString能直接转成这个 .utf16() 一下</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560492734449.png" alt="" /></p>
<p>我们可以看到const ushort * 不能转TCHAR<br />
因为TCAHR 是wchar_t<br />
而wchar_t  是 unsigned short<br />
所以，在这里，将UserName[32] 改成 *UserName</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560493007520.png" alt="" /></p>
<p>提出，ushort * 不能转TCHAR *<br />
所以，直接使用 (wchar_t*)对userName.utf16()进行类型转换</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560493072521.png" alt="" /></p>
<p>到这里就可以完成参数类型转换并传递了</p>
<p>尝试运行一下下</p>
<p>嗯，刚才输进去的网络驱动器被成功映射回来了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-14/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8/1560493647098.png" alt="" /></p>
<p>在这里再顺手提一下WNetAddConnection2这个函数<br />
整个磁盘映射函数中核心用到的函数，其实就这个~~~<br />
上面的类型转换也是为了满足他对参数的要求</p>
<p>这是他的定义</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">DWORD <span class="title">WNetAddConnection2A</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  LPNETRESOURCEA lpNetResource,</span></span></span><br><span class="line"><span class="function"><span class="params">  LPCSTR         lpPassword,</span></span></span><br><span class="line"><span class="function"><span class="params">  LPCSTR         lpUserName,</span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD          dwFlags</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure>
<p>巨硬的说明文档连接在此：<a href="https://docs.microsoft.com/en-us/windows/desktop/api/winnetwk/nf-winnetwk-wnetaddconnection2a">https://docs.microsoft.com/en-us/windows/desktop/api/winnetwk/nf-winnetwk-wnetaddconnection2a</a><br />
详细的参数以及返回码对应的意义，可以在里面找到详细的参考说明</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>QT开发</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>QT</tag>
        <tag>信号与槽函数</tag>
      </tags>
  </entry>
  <entry>
    <title>Visual Studio 创建QT工程并添加到GitHub中</title>
    <url>/archives/687d52f8.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="怎么在vs中创建一个qt项目并且放到github中呢"><a class="markdownIt-Anchor" href="#怎么在vs中创建一个qt项目并且放到github中呢"></a> 怎么在VS中创建一个QT项目并且放到GitHub中呢</h2>
<p>怎么在VS中创建一个QT项目并且放到GitHub中呢<br />
因为GitHub或者码云Gitee都是一个很好的提供代码托管的地方对吧<br />
将自己的项目开源到上面，如果项目很好的话，肯定能收获到很多小星星对吧。不仅仅能与全世界的开源爱好者有交流的机会，也会是自己个人展示自己的好平台啊，对吧。</p>
<h2 id="闲话少说操作一波"><a class="markdownIt-Anchor" href="#闲话少说操作一波"></a> 闲话少说，操作一波</h2>
<p>打开VS，我这里是VS2017，使用其它版本的同学应该也差不多，参考参考借鉴借鉴就好</p>
<p>还记得之前文章里面有给大家说过给VS安装上 QT插件、GitHub插件、Gitee插件嘛</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062338566.png" alt="img" /></p>
<p>如果还没装的话，可以先进去装一下，装好再进行下面的步骤哟</p>
<p>给你两分钟，打开VS然后将插件装起来</p>
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062338506.webp" alt="img" style="zoom:50%;" />
<p>两分钟过去了~~</p>
<h2 id="使用团队资源管理器"><a class="markdownIt-Anchor" href="#使用团队资源管理器"></a> 使用团队资源管理器</h2>
<p>我们打开 右边的界面方案资源管理器<br />
然后点击隔壁的 团队资源管理器</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062338679.png" alt="img" /></p>
<p>这个时候，如果你是装好了这两个插件的话，是应该看到有GitHub和gitee的</p>
<h3 id="登录git平台账号"><a class="markdownIt-Anchor" href="#登录git平台账号"></a> 登录Git平台账号</h3>
<p>然后，点击 <strong>登录</strong> 就可以看到这样的界面了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062338493.png" alt="img" /></p>
<p>OK，输入好自己的账号密码之后，登录一下下<br />
你就会看到这个GitHub的选项卡下有几个选项了</p>
<h3 id="创建仓库"><a class="markdownIt-Anchor" href="#创建仓库"></a> 创建仓库</h3>
<p>咱们创建一个仓库先</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062338908.png" alt="img" /></p>
<p>我们在这里将 名称 写一下、描述写一下、路径选好选准确了！<br />
GitHub忽略的选项，他能识别到VS项目的<br />
而许可证的话，看自己情况选<br />
专用存储库是私有的，别人访问不了的。敏感项目的话，建议选上！</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062338432.png" alt="img" /></p>
<p>我在这里就不点专用了，这里选好代码仓库位置，待会创建项目的时候，你就会发现项目创建路径会自动默认到这个位置了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062339062.png" alt="img" /></p>
<p>在项目下方的解决方案那里，点击新建<sub>，不是在整个VS左上角点新建哦。看准了哈</sub></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062339055.png" alt="img" /></p>
<p>呐，是不是明显看到位置自动是我们刚创建项目仓库的位置啦~</p>
<p>接着就是QT创建项目的常规步骤</p>
<h2 id="创建qt项目"><a class="markdownIt-Anchor" href="#创建qt项目"></a> 创建QT项目</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062339183.png" alt="img" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062339025.png" alt="img" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062339919.png" alt="img" /></p>
<p>因为之前写完那篇环境搭建的文章出来后，有同学给我反映说不够详细，我在这里就完全又走了一次流程了哦。一个截图都不少的~</p>
<p>我们F5直接运行一波，看到能正常出来了。OK，咱们可以先把这个最最最基础的版本给提交到GitHub上去先。后面再提交新的更改进去</p>
<p>点击 <strong>更改</strong></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062339852.png" alt="img" /><br />
可以看到项目内的文件的更改情况，添加、删除、修改都可以看到<br />
我们再将这次上传的 更改说明写好，写清楚！</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062339744.webp" alt="img" /><br />
写完之后，点击 <strong>同步</strong></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062339872.png" alt="img" /></p>
<p>点击 <strong>推送</strong></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062339443.png" alt="img" /></p>
<p>看到这样的界面，说明你已经成功将代码更改推送到GitHub上了</p>
<p><a href="https://github.com/97CBR/WeChatDatToJpg/blob/main/README.md">WeChatDatToJpg/README.md at main · 97CBR/WeChatDatToJpg (github.com)</a></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062340124.png" alt="img" /></p>
<p>嗯，文章差不多到这里就完了。看到这里的你，几分钟过去了，文章也看完了。这里面将创建仓库和项目流程又走了一遍。</p>
<p>如果是先创建项目再创建仓库的话也是可以的。可以先建立一个仓库之后，再clone回来。差不多其实，但是像本人上面那样创建一下，本人感觉更加顺滑一些~~~大家看情况来搞就好了</p>
]]></content>
      <categories>
        <category>QT开发</category>
      </categories>
      <tags>
        <tag>QT</tag>
        <tag>Visual Studio</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>软件更新之Python热更新</title>
    <url>/archives/654b738c.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>本篇文章涉及技术知识如下：</p>
<blockquote>
<ul>
<li>Redis</li>
<li>threading</li>
<li>多线程</li>
<li>PyQt5</li>
<li>importlib</li>
<li>热更新</li>
</ul>
</blockquote>
<h2 id="热更新的场景"><a class="markdownIt-Anchor" href="#热更新的场景"></a> 热更新的场景</h2>
<p>咱们在平时运行一些长时间都会一直运行的软件（如：某些云同步软件）的时候，某些功能因为考虑的情况可能不充分，导致体验不够好的时候，很多人都会忽视这个问题，除非这个问题影响到他正常使用了。但是也有部分用户会在软件的反馈框里面将问题反馈给开发者，顺带将错误日志也一并提交给开发者。然后过了一天或者半天，你再运行那部分功能的时候，发现问题已经解决了。可是，我们都没有更新软件呀，甚至连软件都没有重启，难道前面遇到的那个情况真的是因为自己太幸运踩中bug了吗？<br />
其实，我们之前遇到的问题，可能的确就是一个bug，但是在反馈问题给开发者后，开发者快速定位问题所在后，通过热更新将问题解决了。相当于我们使用的软件自动fix了一些bug，更新了一次版本。<br />
那么，今天咱们聊一下热更新这个东西怎么样？我们也随意做个小demo看看这个有意思的功能是怎么做到的。</p>
<h2 id="什么是热更新"><a class="markdownIt-Anchor" href="#什么是热更新"></a> 什么是热更新</h2>
<p>热更新就是可以在进程不重启的情况下，让其重新加载修改后的程序代码，且能按照预期正确执行。在实际开发中，热更新的最主要用途有，</p>
<ul>
<li>可以提升开发效率，让改动后的代码效果立刻实现，避免频繁重启</li>
<li>对于bug修复来说，在CS模式下，如果不是大的bug而是小bug的修复就不用发布比较大的补丁和更新文件了，直接使用服务器修正问题后，通知客户端重新加载修正后代码即可。</li>
</ul>
<h2 id="python如何进行热更新"><a class="markdownIt-Anchor" href="#python如何进行热更新"></a> Python如何进行热更新</h2>
<p>Python的代码是通过module进行组织的，所以，对某些功能的热更新就是可以通过对module更新就可以了。<br />
在Python中，如果重新import 一个已经被import的模块时，并不会重新执行import新的模块。所以，在这个时候，我们希望可以重新加载模块的时候，就需要对模块进行删除后，再重新import进来。<br />
而在sys.modules保存了已经加载过的模块。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062319211.webp" alt="img" /></p>
<h2 id="利用之前的客户端进行展示效果"><a class="markdownIt-Anchor" href="#利用之前的客户端进行展示效果"></a> 利用之前的客户端进行展示效果</h2>
<p>为了方便看到展示，我就沿用上次客户端的界面，进行简单修改后，展示给大家看，热更新的效果。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062320674.png" alt="img" /></p>
<p>左边的按钮是运行模块加载进来的函数，右边的按钮是手动点一下热更新。便于本地手动调试热更新。在后面实现的“发布订阅”情况中，服务端发布更新消息后，不用手动点 热更新 就可以对软件进行自动更新了。</p>
<h2 id="测试思路及效果"><a class="markdownIt-Anchor" href="#测试思路及效果"></a> 测试思路及效果</h2>
<p>简单实现一个demo，引用myfunction这个模块，运行里面的某个函数一两次后，修改那个被运行的函数实现，然后对myfunction这个模块进行热更新，看看效果怎么样?</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062322108.png" alt="img" /></p>
<p>在热更新前，随机产生的数字在原函数里面，版本号为0.0.1，是可以比较明显看出 两个数 是运行 “相加” 操作的。<br />
点击了热更新Button后，软件并未重启，在更新后，可以 看到功能版本号发生了改变，变成了0.1.1，说明已经是热更新完成了的。再点击运行功能，可以看到结果已经变成了 两个数字 进行了 “相减‘ 操作。</p>
<h2 id="着手实现-cs模式下-的自动热更新"><a class="markdownIt-Anchor" href="#着手实现-cs模式下-的自动热更新"></a> 着手实现 CS模式下 的自动热更新</h2>
<p>完成了本地测试热更新成功后，就着手实现CS模式下的“发布订阅”消息通知功能，利用服务器对客户端推送一个更新指令，客户端就会自动更新模块。</p>
<h3 id="利用redis的发布订阅模型"><a class="markdownIt-Anchor" href="#利用redis的发布订阅模型"></a> 利用Redis的发布订阅模型</h3>
<p>用过Redis的同学应该都知道Redis本身就自带了“发布订阅”功能，借助它，可以很方便的实现出远程推送消息的需求，我们甚至可以用这个功能实现一个简单的聊天室软件哦。<br />
在Redis服务端中，创建一个 update频道：</p>
<blockquote>
<p>SUBSCRIBE update</p>
</blockquote>
<h3 id="客户端修改使用线程避免阻塞"><a class="markdownIt-Anchor" href="#客户端修改使用线程避免阻塞"></a> 客户端修改，使用线程避免阻塞</h3>
<p>然后在Python中导入Redis模块后，链接到远程Redis数据库后，订阅我们的update频道，再启动一个新的线程去监听update频道的消息。<br />
因为如果直接在代码里面用单线程去监听消息的话，会造成线程阻塞在监听消息哪里，导致界面刷新不出来。所以，我们只要导入threading库，再把监听消息做成一个函数，放到thread中去运行就可以了。由此避免线程阻塞问题。</p>
<h3 id="发送更新指令"><a class="markdownIt-Anchor" href="#发送更新指令"></a> 发送更新指令</h3>
<p>接着我在本地修改一下myfunction模块后，就到Redis服务的终端中，发布一个消息，reload。<br />
这个时候，软件就会收到reload消息，对刚才被我修改后的模块进行热更新，即删掉源模块，再重新导入一次。</p>
<p>在这里我就不写一次从服务器中下载新的模块文件的代码了，假设我刚才修改后的那个文件就从服务器下载下来的。同学们可以借助前面两篇写软件更新服务的文章来自己实现一个文件下载更新的代码。很简单的，只要你愿意写。</p>
<p>在Redis中发布重载的消息后，订阅了这个频道的客户端，将会接收到更新信息，比如我这个客户端，将会对模块重新加载进行热更新了。</p>
<p>在这里我给大家随意扯一下“灰度测试”吧，这个灰度测试就是软件即将要更新某个功能，但是可能这个功能还不够稳定，不能向全部用户推送新的功能。所以，这个时候，就需要对部分用户更新这个功能，通过这部分用户使用情况来决定灰度测试的范围，比如将5%的范围扩展到10%这样。<br />
至于怎么筛选出那些用户为测试用户呢？其中有个办法是可以用个哈希函数对用户某个值，如用户名，进行处理，符合的就推送。当然还有很多很多的策略，实现执行起来的时候，也不会像我说的那么简单，感兴趣的同学可以自行查阅资料。</p>
<h3 id="利用redis发送更新消息"><a class="markdownIt-Anchor" href="#利用redis发送更新消息"></a> 利用Redis发送更新消息</h3>
<p>接下来，我们来测试一下发布更新功能的消息后，有没正常热更新功能。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062323001.png" alt="img" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062323066.png" alt="img" /></p>
<p>在这里要提醒一下，如果你在热更新前导入的模块生成了一个对象x，这个时候，你热更新了，然后又生成一个对象y。这个时候，你会发现，x指向的仍旧是旧的那个类，而y则指向了新的类。这个时候，可以通过修改x的__class__属性来对 x 的类进行强制修改，可以这样写：</p>
<blockquote>
<p>x.<strong>class</strong> == y.你的类</p>
</blockquote>
<p>但是即使你是这样写，你x里面的数据仍旧不会发生改变的哦。我们只更改了代码的执行逻辑。</p>
<h2 id="代码呈上"><a class="markdownIt-Anchor" href="#代码呈上"></a> 代码呈上</h2>
<p>代码放这里了：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 4/12/2019 14:02</span></span><br><span class="line"><span class="comment"># @Author  : MARX·CBR</span></span><br><span class="line"><span class="comment"># @File    : __init__.py.py</span></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt5 <span class="keyword">import</span> QtWidgets</span><br><span class="line"><span class="keyword">from</span> updateServer.HotUpdate <span class="keyword">import</span> myfunction</span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> importlib</span><br><span class="line"><span class="keyword">from</span> updateServer.HotUpdate.HotFixSample <span class="keyword">import</span> Ui_MainWindow</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainWindow</span>(<span class="params">QtWidgets.QMainWindow, Ui_MainWindow</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, parent=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="built_in">super</span>(MainWindow, self).__init__(parent)</span><br><span class="line">        self.setupUi(self)</span><br><span class="line">        self.fun = importlib.import_module(<span class="string">&quot;myfunction&quot;</span>)</span><br><span class="line">        self.pushButton.clicked.connect(self.runFunction)</span><br><span class="line">        self.pushButton_2.clicked.connect(self.hotfix)</span><br><span class="line">        self.ip = <span class="string">&quot;47.xxx.xxx.xx&quot;</span></span><br><span class="line">        self.redisport = <span class="number">2017</span></span><br><span class="line">        self.redis_manager = redis.StrictRedis(self.ip, port=self.redisport)</span><br><span class="line">        <span class="comment"># self.textBrowser.append(str(sys.modules))</span></span><br><span class="line">        print(sys.modules)</span><br><span class="line">        self.tunnel = self.redis_manager.pubsub()</span><br><span class="line">        self.tunnel.subscribe([<span class="string">&quot;update&quot;</span>])</span><br><span class="line">        self.threads = []</span><br><span class="line">        self.t1 = threading.Thread(target=self.autoReload, )</span><br><span class="line">        self.threads.append(self.t1)</span><br><span class="line">        self.threads[<span class="number">0</span>].setDaemon(<span class="literal">True</span>)</span><br><span class="line">        self.threads[<span class="number">0</span>].start()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">autoReload</span>(<span class="params">self</span>):</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> self.tunnel.listen():</span><br><span class="line">            <span class="keyword">if</span> k.get(<span class="string">&#x27;data&#x27;</span>) == <span class="string">b&#x27;reload&#x27;</span>:</span><br><span class="line">                self.hotfix()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">runFunction</span>(<span class="params">self</span>):</span></span><br><span class="line">        version = self.fun.AllFunction().version</span><br><span class="line">        self.textBrowser.append(<span class="string">&quot;功能运行，当前版本为：&quot;</span> + version)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">            x = random.randint(-<span class="number">454</span>, <span class="number">994</span>)</span><br><span class="line">            y = random.randint(-<span class="number">245</span>, <span class="number">437</span>)</span><br><span class="line">            self.textBrowser.append(<span class="built_in">str</span>(x) + <span class="string">&quot;\tfunction version &#123;&#125;\t&quot;</span>.<span class="built_in">format</span>(version) + <span class="built_in">str</span>(y) + <span class="string">&quot; = &quot;</span> + <span class="built_in">str</span>(</span><br><span class="line">                self.fun.AllFunction().second(x, y)))</span><br><span class="line">        <span class="comment"># self.textBrowser.append(self.fun.AllFunction().first())</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hotfix</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">del</span> sys.modules[<span class="string">&quot;myfunction&quot;</span>]</span><br><span class="line">        self.fun = importlib.import_module(<span class="string">&#x27;myfunction&#x27;</span>)</span><br><span class="line">        self.textBrowser.append(<span class="string">&quot;热更新完毕&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = QtWidgets.QApplication(sys.argv)</span><br><span class="line">    mainWindow = MainWindow()</span><br><span class="line">    mainWindow.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2>
<p>在本篇文章中，介绍到了Python的热更新的一些简单用法。以及一些值得注意的坑。顺手应用了Redis的“发布订阅”功能来通知客户端更新功能。本篇文章代码已同步上传到我GitHub中，欢迎大家fork使用，顺手给个star就更好了，项目链接  <a href="https://github.com/97CBR/SoftwareUpdateServer">SoftwareUpdateServer</a></p>
<p>其实，有心思的小伙伴肯定会有更多的想法。比如：我们既然可以动态重新加载一个类来fix bug，也肯定可以动态添加我们要的功能啦。这意味着，我们可以编写出一个软件，具有插件功能的软件。在主体软件上面，运行插件来扩展更加多的功能，和Chrome这样的浏览器一样，安装插件什么的。</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>有趣的东西</tag>
        <tag>Python</tag>
        <tag>热更新</tag>
      </tags>
  </entry>
  <entry>
    <title>黑苹果装机记录</title>
    <url>/archives/3d60ac39.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="看了wwdc控制不住想玩苹果系统了"><a class="markdownIt-Anchor" href="#看了wwdc控制不住想玩苹果系统了"></a> 看了WWDC控制不住想玩苹果系统了</h2>
<p>前两天的WWDC有看了吗，各位。这价值四万多的主机和三万多的屏幕真的是让人忍不住说：打扰了。</p>
<p>其实本文在一周前就已经开始写了的，不是为了蹭热点哈，因为一周前本人就已经开始折腾这黑苹果的安装了。为啥到现在才发，相信大家也能猜到这个中的原因。。。吐槽一句：这机装的也太麻烦了叭~</p>
<h2 id="着手准备"><a class="markdownIt-Anchor" href="#着手准备"></a> 着手准备</h2>
<p>不多说了，下面进入黑苹果的装机时间，大家如果有兴趣想自己搞一部黑苹果回来耍耍的话，可以参考参考我的这个记录。</p>
<h3 id="我的配置如下"><a class="markdownIt-Anchor" href="#我的配置如下"></a> 我的配置如下</h3>
<p>先放上我的机子的配置：Intel I7-7700 CPU，HP的82B3 主板 和一个 AMD R5 340 独显<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559708851933.png" alt="" /></p>
<p>话说，按常识本人认为这已经差不多是将硬件信息获取完了，但是后面的步骤证明了本人还是太年轻、太天真了。提前跟大家说一声，咱们要将集显的型号信息也要拿到了哈。还有~声卡的型号也要搞到才准备后续的步骤。</p>
<h3 id="查询配置是否支持"><a class="markdownIt-Anchor" href="#查询配置是否支持"></a> 查询配置是否支持</h3>
<p>OK，配置咱们差不多写到这里。大家可以看完文章后，就查查自己的机器的配置，然后再去查查黑苹果是否支持对应的设备。</p>
<p>到这个网址里面去看自己的设备是否受到支持：<br />
<a href="https://github.com/CrazyPegasus/macOS-Mojave-Compatibility-hardware-list">https://github.com/CrazyPegasus/macOS-Mojave-Compatibility-hardware-list</a></p>
<p>然后，这个网址可以查到主板、独显之类的设备是否被支持，但是声卡和集显是不会有详细说明的。这个要我们自己对应的去找。<br />
这里给出一个 查询核显platform ID的注入查询地址，大家结合着查查：<br />
<a href="https://blog.daliansky.net/Intel-core-display-platformID-finishing.html">https://blog.daliansky.net/Intel-core-display-platformID-finishing.html</a><br />
这里也提供一个网址给大家查询声卡是否有被AppleALC支持：<br />
<a href="https://blog.daliansky.net/AppleALC-Supported-codecs.html">https://blog.daliansky.net/AppleALC-Supported-codecs.html</a></p>
<p>OK，我大概提供这几个资料查询网址。因为台式机、笔记本的设备配置差别实在太大了，不可能在这里列完。这步资料查询的步骤是最耗时的，要是你能找到有前人用你与相同的设备成功黑苹果过的话，你将会方便很多很多。</p>
<h3 id="准备下载和刻录镜像"><a class="markdownIt-Anchor" href="#准备下载和刻录镜像"></a> 准备下载和刻录镜像</h3>
<p>在查询完自己的设备的情况之后，接下来我们进入镜像下载和刻录的步骤了<br />
本人在连续5次使用某度云下载工具下载镜像失败后，决心放弃下载某度云。真是浪费时间啊~<br />
然后找到了一个大佬的网站，里面提供了很多资料以及镜像下载渠道，为本次安装黑苹果提供了许多帮助，此处感谢“黑果小兵”</p>
<p>进入他的网站之后，本人直接就下载了 macOS Mojave 10.14.5 带clover的镜像,毕竟能装新的就装新的嘛，哈哈哈。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559710598267.png" alt="" /></p>
<p>然后迅雷跑了十几二十分钟就下载好了，比某度云快多了~<br />
然后在这个过程中，下载安装etcher 来制作镜像<br />
可以到官网下载，在这里：<a href="https://www.balena.io/etcher/">https://www.balena.io/etcher/</a></p>
<p>下载好之后，打开之后，就可以看到界面了。然后选择刚下载好的镜像和准备写入的U盘，如图所示：</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-31/%E9%BB%91%E8%8B%B9%E6%9E%9C/1559287085298.png" alt="" /></p>
<p>点击Flash就会进行擦写制作镜像</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-31/%E9%BB%91%E8%8B%B9%E6%9E%9C/1559287100339.png" alt="" /></p>
<p>写完之后，会进行一次校验</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-31/%E9%BB%91%E8%8B%B9%E6%9E%9C/1559287226458.png" alt="" /></p>
<p>在这个过程中，大家会遇到这个提示：</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559711758223.png" alt="" /></p>
<p>emmm，千万别点 format disk啦，点了就白干啦</p>
<p>OK之后我就直接拔了，准备装机</p>
<h2 id="准备装机"><a class="markdownIt-Anchor" href="#准备装机"></a> 准备装机</h2>
<h3 id="设置bios"><a class="markdownIt-Anchor" href="#设置bios"></a> 设置BIOS</h3>
<p>此处就不说本人踩的坑了，直接写正确的步骤哈。<br />
之前查询资料可以获知我的独显是不受支持的。但是独显也一直插在上面，为了装黑苹果而拔掉它的话，我也不知道放哪里呀。。。所以，就选择了一个简单粗暴的办法，去BIOS里面设置关闭 PCIEx16 这个检测了，因为不关闭的话，后面装好之后会启动失败。在这里提醒一句，禁用独显之前，默认用的是独显的接口来接显示器对吧。当你禁用之后，独显接口便没信号输出了，这个时候，你将显示器线接到集显这边就可以看到显示啦。<br />
接着在BIOS里面将安全启动也关闭了，将显存提高到64MB以上，在这里本人选择128MB</p>
<p>附上几个截图参考参考</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559719579929.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559719558184.png" alt="" /></p>
<p>因为各个主板的BIOS都不一样，大家选择好适宜自己的设备的情况的设置就好了，不要生搬硬套哦</p>
<h3 id="启动引导"><a class="markdownIt-Anchor" href="#启动引导"></a> 启动引导</h3>
<p>然后在引导项里面选择U盘启动</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559719401191.png" alt="" /></p>
<p>选择之后，一阵滚屏，大家就能看到这样的界面了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559713315000.png" alt="" /></p>
<p>默认进去之后，箭头所指的地方会是USB，这里的截图是因为我拍照片的时候，没调好选项，大家选择USB进去就好了。</p>
<p>然后选择 “磁盘工具” 之后，进入这个界面</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559713735481.png" alt="" /></p>
<p>在这里，我直接将它装在一个硬盘上面，不做什么双系统什么的。就点击 显示-显示全部-选中硬盘-抹掉-格式选 Mac OS 扩展（日志式）-方案默认选 GUID<br />
选择抹掉的话，有个好处，是默认给这个磁盘分割出一个200MB的EFI分区,在后面操作的时候，方便一些。<br />
完成之后，就可以关掉这个页面了</p>
<h3 id="安装系统"><a class="markdownIt-Anchor" href="#安装系统"></a> 安装系统！！！</h3>
<p>然后选择 “安装 Mac OS”</p>
<p>然后看到这样的界面，一路点击同意，下一步</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559714552503.png" alt="" /></p>
<p>选择自己要安装的那个硬盘</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559714652770.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559714845870.png" alt="" /></p>
<p>大概十几二十分钟之后，就装好了。然后他会重启</p>
<blockquote>
<p>U盘不要拔，留着要继续用clover去引导，因为它还没装完呢。此时硬盘上面是没有这个clover去引导系统启动的。需要我们后面，进入系统之后，将Clover迁移过去。</p>
</blockquote>
<p>OK，此时我使用clover里面默认的 config.plist启动失败了。因为在这个镜像里面自带的那个clover使用的config.plist并不适用与本人的电脑的集显。</p>
<p>所以，将U盘拔出来之后，怼回原来的本子上，使用DG来编辑修改EFI里面的config.plist</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559716291367.png" alt="" /></p>
<p>当然也可以在 clover 启动引导的时候，直接在里面选用哪个plist，这两个办法都可以。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559719455104.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559719478822.png" alt="" /></p>
<p>在选对了合适的config配置文件之后，启动加载便会看到 Welcome</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559716518615.png" alt="" /></p>
<p>如果这步一直没能进到这个界面的同学，多半都是EFI配置文件不对。多去网上找找吧，或者可以自己写一个config.plist 哈哈哈</p>
<p>然后就是一路选填~<br />
提醒一下，咱们在安装的时候，可以不接网线，不连WiFi，在选择网络的时候，选择“本mac未接入到网络”来继续后面的步骤</p>
<p>如果不出意外，大家很快便可以进入到系统了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559716994490.png" alt="" /></p>
<p>可以点击上面那个苹果标志看看系统的情况，稍微检测一下是否能正常使用</p>
<h2 id="对系统进行配置"><a class="markdownIt-Anchor" href="#对系统进行配置"></a> 对系统进行配置</h2>
<p>在确定正常之后，你就以为可以美滋滋的耍上黑苹果了吗？<br />
其实还没完呢，因为这个时候，你的Mac在硬盘上面是引导不起来的。咱们需要将clover复制到硬盘ESP里面去，以后开机它自动便能引导进去了</p>
<p>在Mac里面装一个软件，叫 clover configurator<br />
装好之后，看到这样子：</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559717320607.png" alt="" /></p>
<p>在挂载EFI分区的地方，将两个EFI分区都挂载上</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559717890547.png" alt="" /></p>
<p>挂载之后，可以简单粗暴的将整个文件夹给复制过去<br />
当然，你要将config.plist给选择对，否则迁过去也要你每次都选配置文件才能启动对吧。<br />
比如我要将config.plist 改成 config_default.plist，然后将config_HD_630_640_sproof.plist 改成config.plist<br />
默认clover里面自带很多配置文件的，选择合适自己的就好了。这些plist目录在 /EFI/CLOVER/里面</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-6-5/%E9%BB%91%E8%8B%B9%E6%9E%9C%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/1559718190249.png" alt="" /></p>
<p>OK，至此，差不多可以说是给你的机子装上黑苹果了，拔掉U盘重启看看，能不能直接引导进去哈。<br />
终于，两千多个字本篇内容差不多也写完了，这里面浓缩了本人这段时间几十个钟的成果。单装系统就已经有十余次，因为不懂，所以装的多。一开始还以为和Windows那样装就可以了，后来不停的启动失败教会了我什么叫，即使亮了也不一定能正常运行。<br />
其实上面的内容在4天前就已经可以发出来了~但是，本人目前的黑苹果是没有声音的，原因就是声卡不在支持列表里面。在无数次踩坑、查资料、踩坑中，终于放弃了填声卡这个坑。利用模拟声卡来解决屏幕警告闪烁问题<br />
所以大家在装黑苹果之前，最好最好先把自己的设备情况查过清楚之后再搞哈。还有在这个过程中，耐心很重要，你可能会一路失败、一路扑街，无数次启动失败的确挺打击人的。但是，既然镜像都下了，有什么理由不装好它呢？<br />
当然，如果你是条件允许的话，请出门左拐，购买最新的MacBook Pro ，讲真，真的帅啊~</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>有趣的东西</category>
      </categories>
      <tags>
        <tag>黑苹果</tag>
        <tag>装机</tag>
        <tag>有趣的玩意</tag>
      </tags>
  </entry>
  <entry>
    <title>Visual Studio 2017搭建QT5开发环境</title>
    <url>/archives/58696240.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="工欲善其事必先利其器"><a class="markdownIt-Anchor" href="#工欲善其事必先利其器"></a> 工欲善其事，必先利其器</h2>
<p>之前有说过要写QT开发的内容的，这不就写一个在C++下开发QT的文章啦<br />
还是原来的调调，工欲善其事，必先利其器<br />
咱们还是从最基础的环境的搭建上面说起</p>
<p>在这里，本人使用的是visual studio 2017 作为开发软件</p>
<p>所以，大家可以去将VS装起来再进行后面的步骤<br />
现在VS2019都出来了，界面更帅了、语法提示似乎也更智能了，我都心动了，看什么时候就装一个VS2019耍耍</p>
<p>好的，如果之前还没装VS的同学看到这里差不多也还是没装的，装了的同学请忽略这句~</p>
<h2 id="安装qt扩展"><a class="markdownIt-Anchor" href="#安装qt扩展"></a> 安装QT扩展</h2>
<p>装好VS的同学可以在<br />
“<strong>工具”-“扩展和更新”-“联机”-“搜索”-“qt”</strong><br />
里面找到 vs关于qt开发的插件<br />
下载之后，关掉VS你就会看到安装的提示了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559220338898.png" alt="" /></p>
<p>全文完~</p>
<p>那岂不是很水？我自己都无法接受，哈哈哈</p>
<p>不不不，咱们还要将QT装好到电脑上才可以的~，这一个插件就能搞定QT的开发环境搭建，想的美哈</p>
<h2 id="安装一下qt"><a class="markdownIt-Anchor" href="#安装一下qt"></a> 安装一下QT</h2>
<p>这里有个网站，可以直接到他们网站<a href="http://www.qtcn.org/bbs/read-htm-tid-1075.html">下载</a><br />
现在已经提供5.12.2的版本下载了，3.9个G，说大不大，说小也不小了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559220562231.png" alt="" /></p>
<p>好的，如果你现在用的电脑看的本文，可以先转去下载QT了，3.9G，要下一段时间呢</p>
<p>emmm，如果之前还没装QT的同学看到这里差不多也还是没装的，装了的同学请忽略这句~<br />
那，咱们先继续看文章好吗？看完看懂再搞，一步搞定不踩坑。</p>
<p>我这里用的是5.11.2，打开它，可以看到这样的界面</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559222098705.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559222167601.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559222249182.png" alt="" /><br />
如果想开发的程序支持32位，上面的那个32-bit 必选好吧<br />
其他的那些，对应的意思，相信大家也能看懂，我就不做更多的解释了</p>
<p>然后选择好几个选项之后，会叫你选择许可协议~<br />
这个看大家的需求，LGPL 和 GPL 是有区别的，请自行百度谷歌看这两个协议的区别哈<br />
我就不做扩展了<br />
接着就下一步，可以看到安装的情况</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559222588652.png" alt="" /></p>
<p>好的，等大概半个钟左右，QT便安装完了</p>
<h2 id="回到vs中配置扩展插件"><a class="markdownIt-Anchor" href="#回到vs中配置扩展插件"></a> 回到VS中配置扩展插件</h2>
<p>这个时候，咱们回到VS 里面<br />
刚才已经安装好 QT 的插件了，可以看到一个选项</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559225032512.png" alt="" /></p>
<p>然后，选择 option-add 添加</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559225057540.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559225077852.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559225251851.png" alt="" /></p>
<p>添加的时候，选到自己的安装目录，对应的几个类型里面就好了<br />
添加完之后，可以选择默认的qt版本</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559225310531.png" alt="" /></p>
<p>OK，差不多已经走到最后一步了</p>
<h2 id="创建一个项目测试一下是否正常"><a class="markdownIt-Anchor" href="#创建一个项目测试一下是否正常"></a> 创建一个项目测试一下是否正常</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559225398564.png" alt="" /></p>
<p>在这里勾上自己待会可能要用上的库，即使在这里不勾上，后面如果要用到的话，其实可以可以后面再添加的。不过就相对麻烦一点点，所以大家在这里尽量还是选好自己要用上的库吧</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559225418029.png" alt="" /></p>
<p>然后再这里的话，大家就可以选择自动创建的类的名字，相对随意。不过我看到很多大佬都是将class的名字改成MainWindows，大家可以参考一下下。可以选上预编译头和默认图标和小写的文件名的可选项。我一般都会默认选上这个图标、原生的图标其实还真挺好看的，起码比默认的那个灰灰的没图标要帅~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559225514353.png" alt="" /></p>
<p>Finish之后，就可以看到项目的概况了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559225749500.png" alt="" /></p>
<blockquote>
<p>ui是画界面，做界面设计用的<br />
qttest.h是自动生成的头<br />
.qrc是用来编辑添加删除资源的<br />
main.cpp，这个写过C语言的，大家都懂哈<br />
qttest.cpp则是用来setup这个界面的，我们可以在这里面写一些逻辑代码、功能函数啥的</p>
</blockquote>
<p>双击ui文件，就又可以看到之前那篇PYQT环境搭建的那个熟悉的designer界面了<br />
又是随意添加一些控件进去</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559226137300.png" alt="" /></p>
<p>Ctrl + S保存之后，就不用管它了<br />
回到VS里面，直接F5,启动！</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-30/QT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1559226288039.png" alt="" /></p>
<p>没错，就这么简单，他就跑起来了~<br />
比之前的那篇PYQT的开发环境搭建还要简单有没有，有没有！<br />
只要装东西就完了~</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>QT开发</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>QT</tag>
        <tag>环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>公网服务器加内网穿透玩的骚操作</title>
    <url>/archives/b6c334ff.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="太忙了"><a class="markdownIt-Anchor" href="#太忙了"></a> 太忙了</h2>
<p>因为这两周实在是太忙了，木得时间给写文章给大家胡乱分享我搞过的那些操作。<br />
那，差不多咱们就开始操作啦，这次续着上次的说的那篇写啦<br />
上次咱们成功地做好了内网穿透，但是只是在PC端做的</p>
<h2 id="用手机连接我们的内网nas"><a class="markdownIt-Anchor" href="#用手机连接我们的内网nas"></a> 用手机连接我们的内网NAS</h2>
<h3 id="安装zerotier"><a class="markdownIt-Anchor" href="#安装zerotier"></a> 安装zerotier</h3>
<p>那这次咱们怎么搞手机端和NAS的连接呢</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558868419796.png" alt="" /></p>
<p>还是上次的那个zerotier，他是有移动端的软件的<br />
Android、iOS 都有</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558868520239.png" alt="" /></p>
<p>各位大佬劳烦自己去下载一下下哈，我这里就不提供百度云盘的链接啦~~</p>
<p>安装好软件之后，可以看到界面长这样</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558868806089.png" alt="" /></p>
<h3 id="加入到网络"><a class="markdownIt-Anchor" href="#加入到网络"></a> 加入到网络</h3>
<p>右上角点了添加的+之后，会有这样的界面</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558868849376.png" alt="" /></p>
<p>然后就是常规的操作了，前文有说，到管理页面去允许设备访问什么的，不清楚的同学可以回前文看看怎么操作哦</p>
<h3 id="连接到网络"><a class="markdownIt-Anchor" href="#连接到网络"></a> 连接到网络</h3>
<p>搞完之后，点击开关那个按钮</p>
<p>在这个过程中，会有个VPN创建提示，忘记是上一步提醒的，还是这步提醒的<br />
不说这么多~同意就好了</p>
<h2 id="自动备份照片"><a class="markdownIt-Anchor" href="#自动备份照片"></a> 自动备份照片</h2>
<p>接着，就是连接过去了呀<br />
之前说过，可以在拍完照之后，连上WiFi就自动备份我的照片是吧<br />
这可以有多种方案，在这里，我就使用 DS photo这个软件和在NAS中安装的 Photo Station 来做了</p>
<p>OK，回到NAS中，咱们装好Photo Station先</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558869214185.png" alt="" /></p>
<p>在这里，我这里已经安装好，而且里面内容也挺多的，就不卸载演示安装了<br />
很简单的，相信大家肯定不会在这个安装上面出什么幺蛾子</p>
<p>装好之后，打开它，可以创建相册。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558869332870.png" alt="" /></p>
<p>在这里，请谨慎设置好自己相册的权限~千万别一时偷懒，不检查访问权限<br />
到时被全世界都看到自己拍的美照，迷倒一众小迷弟、小迷妹就不太好了</p>
<p>搞完之后，就没他什么事了</p>
<p>咱们再回到手机这边</p>
<p>手机这边这个时候要装好 DS photo，应用商店有下~<br />
下载之后，打开，可以看到</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558869571393.png" alt="" /></p>
<p>输入好自己的穿透的局域网IP</p>
<p>咳~刚才我蓝屏了…………</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558870264636.png" alt="" /></p>
<p>但是不影响我继续写，幸好编辑器有自动保存，哈哈哈</p>
<p>登录进去就可以看到相册了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558870409177.png" alt="" /></p>
<p>点击照片备份<br />
进去之后，右上角还有一个设置<br />
继续点它，又可以看到这样的界面</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558870484619.png" alt="" /></p>
<p>根据提示，我们选择好备份文件夹和目的文件夹<br />
设置好只在WiFi下备份、否则你的流量会像泄洪那样疯狂</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558870614919.png" alt="" /></p>
<p>设置好之后，照片、视频就自动上传啦<br />
因为刚才蓝屏了，没截到速度最高的图<br />
但是，随手一截就是2.7MB/s，也很美滋滋啦</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558870771391.png" alt="" /></p>
<p>你以为这样就完了？</p>
<h2 id="把公网服务器用起来"><a class="markdownIt-Anchor" href="#把公网服务器用起来"></a> 把公网服务器用起来</h2>
<p>肯定不会呀~标题的公网服务器都还没现身呢<br />
那~它有什么用呢？<br />
这就又得从我们现在的情况说起了</p>
<p>目前，我们已经搞定了PC端-NAS、移动端-NAS了，剩下的服务器-NAS也肯定不是问题，对吧<br />
而且咱们已经在NAS里面安装好photo station 了是吧<br />
OK，仅仅这些功能还不能满足本人的需求<br />
前文说到的远程推送链接到NAS中下载也还没实现呢<br />
所以，咱们先把远程推送链接下载给说了吧</p>
<p>咱们还是先把套件装好吧</p>
<h3 id="安装download-station"><a class="markdownIt-Anchor" href="#安装download-station"></a> 安装Download Station</h3>
<p>download station 安排上~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558879113602.png" alt="" /></p>
<p>搞定之后，咱们再到浏览器里面，把下载推送插件也安排上</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558879209147.png" alt="" /></p>
<p>安排好这两个东西之后，在这个download station的插件这里右键一下，进入选项<br />
把IP、账号、密码什么的，填好填好<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558879325570.png" alt="" /></p>
<p>接着，随意推一个链接去下载看看？</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558879722681.png" alt="" /></p>
<p>然后就会自动在后台下载了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558880247256.png" alt="" /></p>
<p>那说了这么多，跟公网服务器有啥关系呢，小朋友你是否有很多问好.jpg</p>
<p>嗯，看起来似乎的确没啥联系的。。。</p>
<p>但是，试想一下，如果咱们某一天忘记开那个内网穿透的软件了，或者因为某些原因导致了本机内网穿透那个软件没能连接过去。而且在移动端里面使用的话，很容易就会让后台把这个软件给杀了，导致VPN被迫关闭~也会连接不上，搞得又得重开一次，多麻烦哟，是吧。<br />
这个时候，要是你有公网服务器，外加一个域名~简简单单的一个域名。<br />
只要几块钱一年，少吃一个鸡腿能玩一年耶<br />
有了这两个东西，我们就不用背繁杂的IP地址了，是吧<br />
而且192.168…这样打起来还麻烦…</p>
<p>很多时候，我们只是想推一个链接到NAS里面下载，又不想装这么多的软件来做穿透连接，搞这搞那。想到哪里都可以搞定对吧。</p>
<p>就拿本人的情况，现在完全可以做到移动端不打开zerotier这个软件就可以推送下载链接了<br />
想查看NAS的情况、推送下载链接、相册什么的，直接输域名就好了</p>
<p>那就，看看怎么做吧</p>
<h3 id="购买域名与服务器"><a class="markdownIt-Anchor" href="#购买域名与服务器"></a> 购买域名与服务器</h3>
<p>服务器和域名这个不多说，自己到云服务器的提供商里面购买，阿里云、腾讯云、亚马逊什么的，喜欢那个挑那个哈<br />
在这里，本人使用阿里云以及一个域名来完成操作</p>
<p>服务器创建搭建好，是一个Ubuntu 16.04、1000G流量、2G内存的服务器<br />
在防护策略里面，把端口开了，以便后续访问</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558880763855.png" alt="" /></p>
<p>搞定之后~使用XShell 连过去之后，把服务器上面的zerotier给装上吧<br />
根据之前的经验，相信你很快就能自己把它给装上了<br />
然后，ping一下测试一下能不能搞通哈</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558881584404.png" alt="" /></p>
<p>还没完，咱们要到服务器里面把 <strong>端口转发</strong> 给打开</p>
<blockquote>
<p>echo 1 &gt; /proc/sys/net/ipv4/ip_forward</p>
</blockquote>
<p>然后再使用 rinetd 这个工具搞定咱们的需求<br />
apt-get install rinetd<br />
然后 vim  改一下配置 文件 /etc/rinetd.conf</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558881404635.png" alt="" /></p>
<p>命令格式是</p>
<blockquote>
<p>bindaddress bindport connectaddress connectport<br />
绑定的地址  绑定的端口  连接的地址  连接的端口</p>
</blockquote>
<p>还没完呢。。。域名还没绑定哦,登录阿里云的服务器进行一个DNS处理</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558881809838.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558881856736.png" alt="" /></p>
<p>设置好之后。可以说今天的内容算是差不多完成了<br />
这个时候，用手机连接过去看看</p>
<p>用上我们的 DS get 这个软件图推送下载任务</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558882029776.png" alt="" /></p>
<p>可以看到，是<strong>用域名连接</strong>的，多方便~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558882061647.png" alt="" /></p>
<p>刚才测试给大家看的下载插件使用，还可以看到完成的记录</p>
<p>使用群晖管家则可以看到目前NAS里面的情况和各项指标啦</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558882227554.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-26/%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8A%A0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%8E%A9%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/1558882273662.png" alt="" /></p>
<p>所以有个域名和公网服务器是不是方便的很呀~</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>有趣的东西</tag>
        <tag>NAS</tag>
        <tag>内网穿透</tag>
      </tags>
  </entry>
  <entry>
    <title>黑群晖NAS建立空间并映射到电脑中</title>
    <url>/archives/95274ff5.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前文再续书接上一回"><a class="markdownIt-Anchor" href="#前文再续书接上一回"></a> 前文再续，书接上一回</h2>
<p>上文写到NAS已经装上硬盘和点亮了<br />
有小伙伴问到这个NAS有什么用<br />
那么，NAS有什么用呢？</p>
<h2 id="简单介绍一下nas"><a class="markdownIt-Anchor" href="#简单介绍一下nas"></a> 简单介绍一下NAS</h2>
<blockquote>
<p>NAS（Network Attached Storage：网络附属存储）按字面简单说就是连接在网络上，具备资料存储功能的装置，因此也称为“网络存储器”。它是一种专用数据存储服务器。它以数据为中心，将存储设备与服务器彻底分离，集中管理数据，从而释放带宽、提高性能、降低总拥有成本、保护投资。<br />
来源：百度百科</p>
</blockquote>
<p>在NAS里面，通常会将硬盘组成RAID来提供服务<br />
那么问题来了？RAID是啥？</p>
<h2 id="简单介绍一下raid"><a class="markdownIt-Anchor" href="#简单介绍一下raid"></a> 简单介绍一下RAID</h2>
<blockquote>
<p>独立硬盘冗余阵列（RAID, Redundant Array of Independent Disks），旧称廉价磁盘冗余阵列（Redundant Array of Inexpensive Disks），简称磁盘阵列。其基本思想就是把多个相对便宜的硬盘组合起来，成为一个硬盘阵列组，使性能达到甚至超过一个价格昂贵、容量巨大的硬盘。根据选择的版本不同，RAID比单颗硬盘有以下一个或多个方面的好处：增强数据集成度，增强容错功能，增加处理量或容量。另外，磁盘阵列对于计算机来说，看起来就像一个单独的硬盘或逻辑存储单元。分为RAID-0，RAID-1，RAID-5，RAID-6，RAID-7，RAID-01，RAID-10，RAID-50，RAID-60。<br />
简单来说，RAID把多个硬盘组合成为一个逻辑扇区，因此，操作系统只会把它当作一个硬盘。RAID常被用在服务器计算机上，并且常使用完全相同的硬盘作为组合。由于硬盘价格的不断下降与RAID功能更加有效地与主板集成，它也成为普通用户的一个选择，特别是需要大容量存储空间的工作，如：视频与音频制作。<br />
最初的RAID分成不同的等级，每种等级都有其理论上的优缺点，不同的等级在两个目标间获取平衡，分别是增加数据可靠性以及增加存储器（群）读写性能<br />
资料来源：维基百科</p>
</blockquote>
<h2 id="去群晖官网计算raid计算器"><a class="markdownIt-Anchor" href="#去群晖官网计算raid计算器"></a> 去群晖官网计算RAID计算器</h2>
<p>在群晖官网我们也可以找到RAID空间计算器</p>
<p>假设我们怼两个1T的和两个500G的盘进去</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-11/%E9%BB%91%E7%BE%A4%E6%99%96NAS%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%AE%BF%E9%97%AE/1557539446182.png" alt="" /></p>
<p>那么，RAID0和RAID1 的可利用空间如下</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-11/%E9%BB%91%E7%BE%A4%E6%99%96NAS%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%AE%BF%E9%97%AE/1557539434328.png" alt="" /></p>
<p>RAID 5 和 SHR 的可利用空间如下</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-11/%E9%BB%91%E7%BE%A4%E6%99%96NAS%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%AE%BF%E9%97%AE/1557539504075.png" alt="" /></p>
<p>这些个 RAID 的分类区别，后面有机会再细写</p>
<h2 id="根据需求建立存储池"><a class="markdownIt-Anchor" href="#根据需求建立存储池"></a> 根据需求建立存储池</h2>
<p>OK，在此处，我们在建立存储池的时候<br />
根据我们的需求来进行建立<br />
比如，我在这个NAS上面并不打算存一些很关键、很重要的数据<br />
比如一些图片、视频之类的内容<br />
我就不用选那些需要大量空间进行冗余的类型了<br />
所以，此处，选用RADI 0<br />
但是，本人还有一些重要的数据要保存的<br />
比如项目代码、其他的关键的文件<br />
然后，用另外两个硬盘，建立SHR来保存一些重要的数据</p>
<p>建立的时候，长这样：<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-11/%E9%BB%91%E7%BE%A4%E6%99%96NAS%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%AE%BF%E9%97%AE/1557540231628.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-11/%E9%BB%91%E7%BE%A4%E6%99%96NAS%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%AE%BF%E9%97%AE/1557540482720.png" alt="" /></p>
<p>OK，咱们现在终于是把空间也建立好喽</p>
<h2 id="创建文件夹进行映射使用"><a class="markdownIt-Anchor" href="#创建文件夹进行映射使用"></a> 创建文件夹进行映射使用</h2>
<p>那就创建一个文件夹供自己的主机映射出来使用吧</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-11/%E9%BB%91%E7%BE%A4%E6%99%96NAS%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%AE%BF%E9%97%AE/1557540552367.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-11/%E9%BB%91%E7%BE%A4%E6%99%96NAS%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%AE%BF%E9%97%AE/1557540639713.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-11/%E9%BB%91%E7%BE%A4%E6%99%96NAS%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%AE%BF%E9%97%AE/1557540596564.png" alt="" /></p>
<p>创建好之后，可以在文件服务这个选项里面找到访问方式</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-11/%E9%BB%91%E7%BE%A4%E6%99%96NAS%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%AE%BF%E9%97%AE/1557540684850.png" alt="" /></p>
<h2 id="win10进行网络磁盘映射"><a class="markdownIt-Anchor" href="#win10进行网络磁盘映射"></a> WIN10进行网络磁盘映射</h2>
<p>那么我们回到PC机里面<br />
进入我的电脑</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-11/%E9%BB%91%E7%BE%A4%E6%99%96NAS%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%AE%BF%E9%97%AE/1557540774004.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-11/%E9%BB%91%E7%BE%A4%E6%99%96NAS%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%AE%BF%E9%97%AE/1557540983596.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-11/%E9%BB%91%E7%BE%A4%E6%99%96NAS%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%AE%BF%E9%97%AE/1557541089093.png" alt="" /></p>
<p>然后便可以在自己电脑上面看到多了一个盘啦</p>
<h2 id="测试一下速度"><a class="markdownIt-Anchor" href="#测试一下速度"></a> 测试一下速度</h2>
<p>咱们测一下传输速度</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-11/%E9%BB%91%E7%BE%A4%E6%99%96NAS%E5%BB%BA%E7%AB%8B%E7%A9%BA%E9%97%B4%E5%B9%B6%E6%98%A0%E5%B0%84%E5%88%B0%E7%94%B5%E8%84%91%E4%B8%AD/1557541423163.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-11/%E9%BB%91%E7%BE%A4%E6%99%96NAS%E5%BB%BA%E7%AB%8B%E7%A9%BA%E9%97%B4%E5%B9%B6%E6%98%A0%E5%B0%84%E5%88%B0%E7%94%B5%E8%84%91%E4%B8%AD/1557541432545.png" alt="" /></p>
<p>在局域网内，把我设备支持的最大速度拉满……<br />
要是设备能支持千兆的话，速度肯定还可以再拉高</p>
<p>至此差不多就是完成咱们NAS的基本设置了<br />
能局域网访问、速度拉满<br />
但是它能干的远不止这些<br />
比如，我们可以远程推送下载任务给它，它便可以在后台帮我们把内容下载好<br />
回来便可以使用了<br />
或者创建一个在线相册，去玩、去约会的时候，对吧<br />
拍了照片之后，只要一连上WIFI<br />
就自动上传这些照片、视频到自己的NAS服务器<br />
有了基本拉满的速度，10MB/s甚至某些同学可以有100MB/s<br />
有了这个，请问还用什么某度云，几十K 每秒的速度真是令人很不满意~<br />
当然我们也可以搭建一个在线的音乐平台、视频播放平台什么的<br />
哈哈哈</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>有趣的东西</tag>
        <tag>NAS</tag>
      </tags>
  </entry>
  <entry>
    <title>蜗牛星际捡垃圾之自建NAS</title>
    <url>/archives/dc60065a.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="捡了个垃圾回来玩玩"><a class="markdownIt-Anchor" href="#捡了个垃圾回来玩玩"></a> 捡了个垃圾回来玩玩</h2>
<p>如题所示，以下均是本人的捡垃圾经历</p>
<p>老早之前就想搞一部NAS来玩了<br />
毕竟闲着几块硬盘，笔记本的，台式机的都有<br />
拿笔记本硬盘当移动硬盘那样用，显得有点伤，我硬盘表示委屈<br />
所以，就寻思着搞NAS耍耍<br />
然后前一段时间，在B站、某乎、某值买上面看到有挺多关于蜗牛星际组NAS黑群晖的文章<br />
关键是，全套搞完，只要300块左右<br />
300！这什么概念哟</p>
<h2 id="动辄几千的nas不是我等垃圾佬用的起的"><a class="markdownIt-Anchor" href="#动辄几千的nas不是我等垃圾佬用的起的"></a> 动辄几千的NAS不是我等垃圾佬用的起的</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-10/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E8%87%AA%E5%BB%BANAS/1557477967951.png" alt="" /></p>
<p>这是某东上面四盘位的正版NAS的价格<br />
感受一下价格区别</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-10/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E8%87%AA%E5%BB%BANAS/1557478106245.png" alt="" /></p>
<h2 id="这是矿难的产物"><a class="markdownIt-Anchor" href="#这是矿难的产物"></a> 这是矿难的产物</h2>
<p>蜗牛星际是几个月之前玩崩的一个项目……他们都说是矿难，稍微查了一下资料<br />
emmm，有人说他们这个项目就是个大忽悠<br />
然后时间的话，发布在2018年10月末<br />
然后就在两三个月前翻车了<br />
具体细节咱们不管了，因为从侧面来看，这个些流出来的机器，都是相对比较新的嘛</p>
<h2 id="去某宝看看"><a class="markdownIt-Anchor" href="#去某宝看看"></a> 去某宝看看</h2>
<p>OK，咱们去某宝搞一套回来耍一下吧<br />
普遍价格都在300左右，所以就随意找了一家看起来不错的店家问了一下情况<br />
就选了一部B款单网口的机子，270包邮<br />
A、B、C、D四款推出是时间是先后顺序的<br />
而且，网口都有单口和双口的分别<br />
双口可以做软路由等功能，相对来说，可以耍的骚操作会更加多点</p>
<p>所以，有钱的话，肯定买双口呀<br />
贫穷的我，懂吧。没办法给大家表演双网口软路由这些操作了</p>
<p>接下来就是多图慎点阶段了</p>
<h2 id="多图杀猫小猫慎入-警告~"><a class="markdownIt-Anchor" href="#多图杀猫小猫慎入-警告~"></a> 多图杀猫，小猫慎入 警告~</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-10/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E8%87%AA%E5%BB%BANAS/1557479107728.png" alt="" /></p>
<p>拆掉快递盒子的时候，这一排保护气袋给了我一个surprise</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-10/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E8%87%AA%E5%BB%BANAS/1557479202359.png" alt="" /></p>
<p>保护气袋拆掉后，还有膜护着。似乎不亏？赚了赚了~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-10/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E8%87%AA%E5%BB%BANAS/1557479324223.png" alt="" /></p>
<p>保护膜也撕了，好吧<br />
这大大的蜗牛星际标志，你能想象出当时搞这个项目的人脸上有多骄傲吗</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-10/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E8%87%AA%E5%BB%BANAS/1557479389046.png" alt="" /></p>
<p>看完前面了，咱们看看他的屁股哈</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-10/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E8%87%AA%E5%BB%BANAS/1557479507613.png" alt="" /></p>
<p>这一尘不染的屁股，机器真的这么新吗？<br />
肯定是被店家给擦过了</p>
<p>既然看起来这么好看，那就开个机看看效果</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-10/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E8%87%AA%E5%BB%BANAS/1557479631952.png" alt="" /></p>
<p>这蜗牛便亮起这骚骚的绿灯啦</p>
<p>把四个键盘位都给抠出来看一下</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-10/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E8%87%AA%E5%BB%BANAS/1557479741189.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-10/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E8%87%AA%E5%BB%BANAS/1557479926194.png" alt="" /></p>
<p>既然刚才都怀疑被擦过屁股了<br />
然后店家也说了网口已经改成千兆了<br />
所以，咱们就拆一手外壳吧<br />
看看庐山真面目</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-10/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E8%87%AA%E5%BB%BANAS/1557480069973.png" alt="" /></p>
<p>是的，JS吧所有的标都换成了他们自家的<br />
然后时间就是出售时间</p>
<p>装上硬盘、四神兽准备<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-10/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E8%87%AA%E5%BB%BANAS/1557480233724.png" alt="" /></p>
<p>这些都是老硬盘喽~~<br />
怼上去，开机！</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-10/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E8%87%AA%E5%BB%BANAS/1557480474060.png" alt="" /><br />
ps：这张图是我后面拍的，刚怼上新盘的时候，硬盘拖下面不会有绿色的。应该是和第四个盘位一样，左边的暗蓝色。</p>
<p>OK，至此，以及成功的开机了。<br />
咱们到网页管理页面去看看先。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-10/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E8%87%AA%E5%BB%BANAS/1557484672085.png" alt="" /><br />
这个界面也是我后面才截的，名字已经被我改成自定义的名字了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-7/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE/1557232895355.png" alt="" /></p>
<p>进去之后，果断打开控制面板，看一下配置情况</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-10/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E8%87%AA%E5%BB%BANAS/1557484781123.png" alt="" /></p>
<p>然后看一下内存条的信息</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-10/%E8%9C%97%E7%89%9B%E6%98%9F%E9%99%85%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E8%87%AA%E5%BB%BANAS/1557485834500.png" alt="" /><br />
1333MHz…这……<br />
总体来说，有点菜，是吧</p>
<p>但是，转念一想<br />
一个小机箱 + INTEL J1900 1.99GHz + 4G 1333MHz + 一块小主板+ 150W的电源 + 一个黑群晖<br />
似乎也不亏吧，甚至还觉得有点小赚~</p>
<p>直到现在，我也不敢在这个机子上面跑一些很猛的测试软件<br />
我怕它会……哔哔我，哈哈哈</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>有趣的东西</tag>
        <tag>NAS</tag>
        <tag>捡垃圾</tag>
      </tags>
  </entry>
  <entry>
    <title>PYQT界面之按钮绑定使用</title>
    <url>/archives/6b9be86d.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>今天就继续写一下QT界面开发的东西<br />
之前好不容易才将PYQT的开发环境搭建出来<br />
总不能搭好就不了用吧</p>
<p>所以，我们今天就写一下<strong>按钮怎么绑定到函数</strong><br />
平时，我们使用软件的时候，会有很多的按钮<br />
点击后，就会有不同的功能是吧<br />
然后，写代码的同学都知道，功能都得写在函数里面<br />
但是，我们在designer里面设计界面的时候<br />
没办法直接在里面吧功能给写好并绑定的<br />
所以，我们就得自己动手解决这个问题</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-7/PYQT%E7%95%8C%E9%9D%A2%E4%B9%8B%E6%8C%89%E9%92%AE%E7%BB%91%E5%AE%9A%E4%BD%BF%E7%94%A8/1557209047622.png" alt="" /></p>
<h2 id="准备动手开始"><a class="markdownIt-Anchor" href="#准备动手开始"></a> 准备动手开始</h2>
<p>OK，假设我们已经设计好一个界面了<br />
长这样：</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-7/PYQT%E7%95%8C%E9%9D%A2%E4%B9%8B%E6%8C%89%E9%92%AE%E7%BB%91%E5%AE%9A%E4%BD%BF%E7%94%A8/1557209167445.png" alt="" /></p>
<p>眼尖的同学肯定知道我又偷懒了<br />
没错，这个界面是之前写过的那个软件更新系列里面用到的<br />
没看过的同学，可以回我之前发的文章里面找来看看哈</p>
<p>然后，可以看到有两个按钮<br />
一个是“检测更新”<br />
一个是“下载”</p>
<p>然后，pyuic之后，再继承生成的界面类<br />
就可以在里面写自己的函数了</p>
<p>在那篇文章里面我写了两个函数<br />
showUpdate、updateNow</p>
<p>我们该怎么绑定到按钮</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self.pushButton.clicked.connect(self.showUpdate)</span><br><span class="line">self.pushButton_2.clicked.connect(self.updateNow)</span><br></pre></td></tr></table></figure>
<p>就在这样就搞定了<br />
是不是不敢相信，其实就是这么简单</p>
<p>可能会有些同学需要到函数传参<br />
这个时候，我们可以有两种办法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self.pushButton.clicked.connect(partial(self.showUpdate, <span class="number">1111</span>))</span><br><span class="line">self.pushButton.clicked.connect(<span class="keyword">lambda</span>: self.showUpdate(<span class="number">2222</span>))</span><br><span class="line"><span class="comment">#函数：</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">showUpdate</span>(<span class="params">self,num</span>)</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure>
<p>这两种办法都可以实现我们的传参需求哦</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>QT开发</category>
      </categories>
      <tags>
        <tag>QT</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>截屏软件推荐</title>
    <url>/archives/7c550085.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>今天凌晨收到一位小伙伴发来邮件，提到希望我这边可以安利一下、推荐一下截图工具。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-4/%E6%88%AA%E5%B1%8F%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/1556956339132.png" alt="" /></p>
<h2 id="我们常用的截屏方式"><a class="markdownIt-Anchor" href="#我们常用的截屏方式"></a> 我们常用的截屏方式</h2>
<p>相信很多小伙伴，除了很熟悉Crtl + C、Ctrl + V 之外，就是最熟悉 Ctrl + Alt + A<br />
为何 Ctrl + Alt + A 会如此深入人心呢<br />
因为这个是快捷键是大QQ的截屏快捷方式<br />
所以至今，很多人如果想截屏的话，还得打开一下QQ或者Tim</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-4/%E6%88%AA%E5%B1%8F%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/1556956682322.png" alt="" /></p>
<p>但是，殊不知，我们Windows也是自带有截屏功能的<br />
没错，就是大家所熟悉的 Win + PrtSc<br />
PrtSc就是PrintScreen的缩写<br />
所以，按下这个快捷键之后，就会截下整个屏幕，保存到<br />
C:\Users\用户名\Pictures\Screenshots<br />
这个路径，大家可以找到</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-4/%E6%88%AA%E5%B1%8F%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/1556956956914.png" alt="" /></p>
<p>但是，这个快捷键一截就是整个屏幕，控制不来。<br />
那我们又不想截太多怎么办？<br />
不慌，Windows还有一个快捷键<br />
Win + Shift + S<br />
按下他就可以在任意区域截图了<br />
如本人的Win 10 就是这样的一个红框</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-4/%E6%88%AA%E5%B1%8F%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/1556957098531.png" alt="" /></p>
<p>这个图是我用Win + Shift + S截图时，再用另一个截图工具来截他的<br />
截中截，没想到吧</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-4/%E6%88%AA%E5%B1%8F%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/1556957193564.png" alt="" /></p>
<p>很明显，Windows自带的，截图工具，都无法满足我们在图片上涂鸦、写字、甚至在屏幕上贴出来的需求<br />
所以，我们得回来用腾讯老大哥的截图工具</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-4/%E6%88%AA%E5%B1%8F%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/1556957344542.png" alt="" /></p>
<p>可以看到它带有画框、画圈、箭头、涂鸦、马赛克、写文字之类的功能<br />
太强大了，难怪如此深入人心</p>
<p>但是，这就够了吗？<br />
不不不、我们希望将网上的资料贴在屏幕上面，置顶，方便查看的时候怎么搞<br />
刚才这几个工具都没这个功能啊</p>
<h2 id="推荐截屏工具-snipaste"><a class="markdownIt-Anchor" href="#推荐截屏工具-snipaste"></a> 推荐截屏工具 Snipaste</h2>
<p>这个时候，就到我觉得最强的第三方截图软件Snipaste，出场啦</p>
<p>给大家看一下效果先</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-4/%E6%88%AA%E5%B1%8F%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/1556957823586.png" alt="" /></p>
<p>很明显，这两个图片是置顶的，放在我写文章的软件前面<br />
即使我鼠标焦点回到编辑软件，仍然不会有阻挡<br />
然后他带的功能，只能说对比QQ的工具，一个不少，而且还多<br />
当年发现这个截图工具是时候，就是被他贴图功能俘获芳心的</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-4/%E6%88%AA%E5%B1%8F%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/1556958060603.png" alt="" /></p>
<p>自带超多功能，好吧，十分强大，慢慢摸索<br />
在这么多的自启软件里面，他肯定要占一份<br />
短小精悍就是他了</p>
<p>OK，扯这个软件这么多，那怎么装嘛？<br />
Windows 10 的同学，可以直接到应用商店装</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-5-4/%E6%88%AA%E5%B1%8F%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/1556958249011.png" alt="" /></p>
<p>也可以到他的官网下载，<a href="https://zh.snipaste.com/">链接在这</a></p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>实用技巧</category>
      </categories>
      <tags>
        <tag>有趣的东西</tag>
        <tag>效率</tag>
      </tags>
  </entry>
  <entry>
    <title>Python自动下载Wallhaven复联4壁纸</title>
    <url>/archives/153fb74d.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="看完电影想换壁纸了"><a class="markdownIt-Anchor" href="#看完电影想换壁纸了"></a> 看完电影想换壁纸了</h2>
<p>复联4大家都去看了木有呀？这都上映好几天了，该被人家剧透的也差不多了吧。<br />
所以，拒绝剧透，从我做起。都学学人家奇异博士吧，人家都看了1400万次结局都没剧透。</p>
<p>嗯，好看，很好看，票价很值<br />
但是昨日好友碎碎念叫我给他写个下载寡姐壁纸的爬虫<br />
还保证给我写这个爬虫不亏，这网站的壁纸质量太好了<br />
所以，我就顺手写了一个爬虫去下载壁纸吧。<br />
我的乔巴壁纸也好久木得换了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556333224540.png" alt="我的桌面壁纸" /></p>
<p>不扯这么多，咱们准备撸起袖子加油干哈</p>
<h2 id="写代码前的分析"><a class="markdownIt-Anchor" href="#写代码前的分析"></a> 写代码前的分析</h2>
<h3 id="分析一下网站"><a class="markdownIt-Anchor" href="#分析一下网站"></a> 分析一下网站</h3>
<p>首先搜索一下复联4的标题，看到壁纸的预览图，似乎挺不错的。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556333485160.png" alt="" /></p>
<p>OK ， 点进大图看看，看一下原图能有什么分辨率。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556333591608.png" alt="" /></p>
<p>嗯，可以的，这分辨率挺不错的。</p>
<h3 id="分析数据交互方式"><a class="markdownIt-Anchor" href="#分析数据交互方式"></a> 分析数据交互方式</h3>
<p>那我们就准备分析数据请求方式啦<br />
在这篇里面，我就不说太详细步骤了，我说个思路和过程哈<br />
注意里面的一些看起来常规又不常规的技巧哈</p>
<p>在滑动页面去加载新的图片的时候，发现链接处是在不停变换的。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556333778781.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556333854038.png" alt="" /></p>
<p>想必大家都发现了主要变换处就是page了</p>
<p>那么我们就可以猜测一下，数据的刷新是通过page改变来改变的</p>
<p>开启F12大法后，去观察网络加载项</p>
<p>滑动更新一页，可以看到，search这个请求比较突出</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556334016207.png" alt="" /></p>
<p>我们看一下返回的数据</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556334070947.png" alt="" /></p>
<p>看不出什么，我们就回页面，看一下第五页的图片链接</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556334116562.png" alt="" /></p>
<p>右键检查，找到链接，猜测后面那个数字就是标识图片的id<br />
回到请求返回页面，搜索 595400</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556334194872.png" alt="" /></p>
<p>说明，我们要的数据，其实已经是包含在这个search 请求里面了。</p>
<p>OK，我们就可以不用管这里了。来到第二个高清原图页面。</p>
<p>右键检查图片元素，找到图片的链接。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556334298959.png" alt="" /></p>
<p>OK，看的出他是在 img 标签， id为 wallpaper 的标签里面。</p>
<p>依旧刷新这个页面，看返回数据，搜索图片ID</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556334470996.png" alt="" /></p>
<p>没错了，这个就是我们要的东西了</p>
<p>这个时候，已经可以说是把流程以及需要请求的页面给弄清楚了</p>
<h2 id="开干写代码"><a class="markdownIt-Anchor" href="#开干写代码"></a> 开干写代码</h2>
<p>我们打开pycharm，导入我们要的包。</p>
<p>一路写下去，写到请求原图链接的哪里，通过img 标签 wallpaper 的 id 居然没拿到数据</p>
<p>我们就单独请求一个页面，看数据到底数据在哪里</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556334784839.png" alt="" /></p>
<p>看到数据在 meta 标签里面，property为&quot;og:image 的标签里面</p>
<meta property="og:image" content="//wallpapers.wallhaven.cc/wallpapers/full/wallhaven-532146.jpg" />
<p>为什么我说数据就在这个里面呢？而不在其它的匹配标签里面呢？</p>
<p>细心看的朋友肯定发现了上面我找到原图链接的时候，链接中间会有/full/，其它的就不是</p>
<p>OK，稍作修改，数据就已经可以正常回来了<br />
接着就是请求原图链接，并保存了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556335077853.png" alt="" /></p>
<p>代码放这里</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 我的代码呢？</span></span><br></pre></td></tr></table></figure>
<p>完结撒花，关掉看下一篇吧</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556335178412.png" alt="" /></p>
<hr />
<p>你以为就这样就完了吗？还没看复联4的同学，看完后，请听完它的歌。因为事后有人说，电影的最最最后面，你会听到<br />
叮~ 叮 ~ 叮~的打铁声<br />
这个彩蛋有多少人被多少媒体误导没有彩蛋而错失哟</p>
<h2 id="其实代码还可以优化"><a class="markdownIt-Anchor" href="#其实代码还可以优化"></a> 其实代码还可以优化</h2>
<p>我们代码其实还没写完。上面只是常规的写法，和思路。并不是最优解。<br />
我们回到分析过程，观察观察，你就会发现，其实我们并不用请求第二个原图页面也照样可以把原图给download下来的。</p>
<p>为何可以？</p>
<p>细心点看这几个链接</p>
<p><a href="https://alpha.wallhaven.cc/wallpaper/637560">https://alpha.wallhaven.cc/wallpaper/637560</a><br />
<a href="https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-637560.jpg">https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-637560.jpg</a></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556335499272.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556335571626.png" alt="" /></p>
<p>我们怎么通过第一个直接构造出第二个链接？<br />
将子域名alpha换成wallpapers，然后将637560换成full/wallhaven-637560.jpg就可以了啊</p>
<p>但是有些链接是6位数，也有些是5位数的。我们该怎么处理？直接用Python切片肯定不行的了。<br />
还是细心，有些朋友可能以及发现我已经在上的那张图片哪里用来个箭头指向了一个叫data-wallpaper-id的属性</p>
<p>所以，我们不费吹灰之力就拿到要的数据了。<br />
代码写起来</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-27/wallhaven%E4%B8%8B%E8%BD%BD%E5%A4%8D%E8%81%944%E5%A3%81%E7%BA%B8/1556336557313.png" alt="" /></p>
<p>代码的话，我就放那个短一点的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">haven</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name=<span class="string">&#x27;marx&#x27;</span></span>):</span></span><br><span class="line">        <span class="comment"># self.main_url=&#x27;https://alpha.wallhaven.cc/search?q=id%3A1957&amp;page=&#123;&#125;&#x27;</span></span><br><span class="line">        self.search = name</span><br><span class="line">        self.main_url = <span class="string">&#x27;https://alpha.wallhaven.cc/search?q=&#123;&#125;&amp;page=&#123;&#125;&#x27;</span></span><br><span class="line">        self.session = requests.session()</span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">&quot;user-agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cookie&quot;</span>: <span class="string">&quot;__cfduid=d1bc48e470ea703ef259393d775e2f5361542527467; _pk_ses.1.1f04=1; _pk_id.1.1f04=bfd774c029e9a2e1.1542527473.11.1556277865.1556277657.; wallhaven_session=eyJpdiI6IlhHTzhnNmRFelhMdzBZWDdDdzZuUnVwdEh0M2pyMmN3dWo5dHpKS1orSGM9IiwidmFsdWUiOiJoeFFBb0FkWDN2OWpnTTYzaTRwcjgzekp1andjZmpCZDYrTkZYckVXeFFpK2hMSjh3RU5EMzJaM1RYRzR6RG8wVTNocXlDQ29UMDIrUlM1MUVXSjZlQT09IiwibWFjIjoiNTY1YjMyNzNlNTg3NjA0ZDIxZDAzYTI1MTY2NzQzOTRmNTdkMDg1MjZkMDkwZTVlZmE4Y2U3MTI1MjNjMjFkMSJ9&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        self.jpg = <span class="string">&#x27;https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-&#123;&#125;.jpg&#x27;</span></span><br><span class="line">        self.png = <span class="string">&#x27;https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-&#123;&#125;.png&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download_image</span>(<span class="params">self, image_id</span>):</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./image/&#123;&#125;.png&quot;</span>.<span class="built_in">format</span>(image_id), <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            statu = self.session.get(self.jpg.<span class="built_in">format</span>(image_id))</span><br><span class="line">            <span class="keyword">if</span> statu.status_code == <span class="number">200</span>:</span><br><span class="line">                f.write(statu.content)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                f.write(self.session.get(self.png.<span class="built_in">format</span>(image_id)).content)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">21</span>):</span><br><span class="line">            get_url = self.main_url.<span class="built_in">format</span>(self.search, page)</span><br><span class="line">            page_data = self.session.get(get_url, headers=self.headers)</span><br><span class="line">            page_data.encoding = page_data.apparent_encoding</span><br><span class="line">            soup = BeautifulSoup(page_data.text, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">            temp = soup.find(<span class="string">&#x27;section&#x27;</span>, class_=<span class="string">&#x27;thumb-listing-page&#x27;</span>)</span><br><span class="line">            all_li = temp.find_all(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line">            <span class="keyword">for</span> temp <span class="keyword">in</span> all_li:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    image_id = temp.find(<span class="string">&#x27;figure&#x27;</span>).get(<span class="string">&#x27;data-wallpaper-id&#x27;</span>)</span><br><span class="line">                    self.download_image(image_id)</span><br><span class="line">                    time.sleep(random.randint(<span class="number">1</span>, <span class="number">4</span>))</span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    ...</span><br><span class="line"></span><br><span class="line">haven(<span class="string">&quot;Avengers: Endgame&quot;</span>).run()</span><br></pre></td></tr></table></figure>
<h2 id="完结撒花"><a class="markdownIt-Anchor" href="#完结撒花"></a> 完结撒花</h2>
<p>诶，这不就可以完结撒花了嘛</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>Python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>PYQT5开发环境搭建</title>
    <url>/archives/82219c25.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>今天看看如何搭建基于Python的PyQt5开发环境的搭建。</p>
<p>俗话有说：砌墙先打基，吃蛋先养鸡。我们要用Python做界面开发的话，就得把开发环境给搭建好才可以进行。下面，请跟着我的步伐，将你的开发环境搞起来，可好？（搞的像真的一样。。。）</p>
<h2 id="步骤一览"><a class="markdownIt-Anchor" href="#步骤一览"></a> 步骤一览</h2>
<ul>
<li>第一步，把Python安装上</li>
<li>第二步，把IDE安装上</li>
<li>第三步，把依赖包安装上</li>
<li>第四步，添加外部设计工具</li>
<li>第五步，设置ui转py文件工具</li>
<li>第六步，设置资源转py文件工具</li>
<li>第七步，引用自动生成的界面代码，运行</li>
</ul>
<p>呐，不多不少，就简简单单的7步，就可以将PYQT的开发环境给搭建好了。</p>
<h2 id="安装好python"><a class="markdownIt-Anchor" href="#安装好python"></a> 安装好Python</h2>
<p>第一步：装python ，到Python的官网去下载即可。本人推荐Python36。<br />
链接在此：<a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556266494994.png" alt="" /></p>
<h2 id="pycharm是真滴香"><a class="markdownIt-Anchor" href="#pycharm是真滴香"></a> Pycharm是真滴香</h2>
<p>第二步：IDE在这里我推荐用 Pycharm  这个IDE简直就是Python开发的大宝剑好吧，用它可以将你的开发速度蹭蹭蹭地往上提，而且调试以及性能查看的功能会让你欲罢不能，逐渐上瘾的哦。<br />
链接在此：<a href="https://www.jetbrains.com/pycharm/download/">https://www.jetbrains.com/pycharm/download/</a></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556266660366.png" alt="" /></p>
<p>专业版需要激活码、或者激活服务器。不过大家可以自行百度找到，很多很多。社区版则不用激活码，但是功能会稍有不同，注意是稍有，就是基本不会影响到你的体验。</p>
<blockquote>
<p>有条件的同学，请支持正版，可以用学校邮箱去申请专业版，也可以去开源的GitHub项目申请，方法多多的。。。</p>
</blockquote>
<h2 id="安装python依赖"><a class="markdownIt-Anchor" href="#安装python依赖"></a> 安装Python依赖</h2>
<p>第三步：就是安装依赖包了<br />
这个时候，我默认大家已经将 Pycharm 装好了，而且也可以运行Hello World 了。<br />
在pycharm中安装库的步骤如下：<br />
File -&gt; Settings -&gt; project interpreter -&gt; + 号</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556267003527.png" alt="" /></p>
<p>我们做PYQT5的环境搭建，需要安装这几个包：</p>
<ul>
<li>PyQt5-sip</li>
<li>PyQt5</li>
<li>PyInstaller<br />
这几个包稍微有点大，请按照的时候保持耐心，或者使用国内镜像加速。</li>
</ul>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556267249219.png" alt="" /></p>
<h2 id="设置qt工具"><a class="markdownIt-Anchor" href="#设置qt工具"></a> 设置QT工具</h2>
<p>第四步：添加外部设计工具<br />
重点来了，敲黑板，哈哈哈<br />
到这步的时候，我也默认你已经将上面那几个包给正确安装好了哈。<br />
这个时候，我们在pycharm中添加外部设置工具。<br />
步骤如下：<br />
File -&gt; Settings -&gt; Tools -&gt; External Tools -&gt; + 号</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556267503467.png" alt="" /></p>
<p>在这里我们点击 + 后，会弹出一个配置页面。设置好对应的工具名字，可以起的狂拽酷炫一点点。接着点击program那个选项的文件夹，去找到我们的designer.exe工具。这个工具一般在Python安装目录里面的那个Script目录里。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556267907261.png" alt="" /></p>
<p>然后在working directory 里面填 $FileDir$，也可以点insert macros 去找到</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556268075145.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556267778683.png" alt="" /></p>
<h2 id="设置ui文件转py的工具"><a class="markdownIt-Anchor" href="#设置ui文件转py的工具"></a> 设置ui文件转py的工具</h2>
<p>第五步：设置ui转py文件工具<br />
到这步就要设置转换工具了，步骤如上，不过在 program 和 arguments 里面要改一下。<br />
分别填入一下内容：<br />
program ：自己Python的位置，如E:\Python36\python36.exe<br />
arguments：-m PyQt5.uic.pyuic  $FileName$ -o $<a href="http://FileNameWithoutExtension$.py">FileNameWithoutExtension$.py</a></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556268320573.png" alt="" /></p>
<h2 id="设置资源qrc文件转py的工具"><a class="markdownIt-Anchor" href="#设置资源qrc文件转py的工具"></a> 设置资源qrc文件转py的工具</h2>
<p>第六步，设置资源转py文件工具<br />
这个和前面一样，要改一点东西而已，也是改改 program 和 arguments的参数就可以了。<br />
program ：自己pyrcc5.exe的位置，如E:\Python36\Scripts\pyrcc5.exe<br />
arguments：$FileName$ -o $FileNameWithoutExtension$_rc.py</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556268397588.png" alt="" /></p>
<p>这个时候，其实算是搭建好开发环境了。那为啥我还要给加上这第七步呢？在网上，有很多人的配置中，其实都没有第六步，我这里是加进去，更加完善内容的。为后面开发做好铺垫。</p>
<p>OK，现在我们打开设计工具，tools 》外部工具》刚才自己设置的名字</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556268586131.png" alt="" /></p>
<p>打开后，界面就是这样子啦，点击Create，即可生成一个新的ui文件。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556268665318.png" alt="" /><br />
拖动控件，修改控件的内容，然后 Ctrl + S 保存</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556268805564.png" alt="" /></p>
<p>记得改名，方便自己使用。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556268969100.png" alt="" /></p>
<p>回到pycharm里面，点击生成的ui文件，右键一下，如下</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556269086713.png" alt="" /></p>
<p>他就会自动生成你ui文件对应的py文件了<br />
但是，这个时候他是使用不了了，运行的时候，什么都没显示</p>
<p>当你有qrc文件使用到了资源文件时，使用刚才的配置rcc的那个来编译即可，我这里是叫PyQSS，这名字有点蠢<sub>，没事见惯不怪</sub></p>
<h2 id="引用自动生成的界面代码运行代码"><a class="markdownIt-Anchor" href="#引用自动生成的界面代码运行代码"></a> 引用自动生成的界面代码，运行代码</h2>
<p>到第七步了，我们需要再新建一个文件，去引用我们生成的py界面文件</p>
<p>新建一个类，MainWindow 继承自Ui_MainWindow<br />
然后在 _<em>init</em>_ 中去调用父类的MainWindow<br />
接着就 self.setupUi(self)</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556269749447.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-26/%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E4%B9%8BPYQT5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1556269582079.png" alt="" /></p>
<p>这样子，你的第一个 Hello World 界面程序便跑出来啦，美滋滋</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>QT开发</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>QT</tag>
        <tag>Python</tag>
        <tag>界面开发</tag>
      </tags>
  </entry>
  <entry>
    <title>电脑调用手机摄像头实现1080P分辨率拍摄</title>
    <url>/archives/706b138e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>最近有某些需求需要用到电脑的摄像头。但是……我本本的自带摄像头的像素。1280x720,这……就有点尴尬<br />
emmm，拍出来的照片，还真有点复古的感觉耶</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-5-19/%E5%A6%82%E4%BD%95%E8%AE%A9%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E6%89%8B%E6%9C%BA%E7%9A%84%E6%91%84%E5%83%8F%E5%A4%B4/1589858772597.png" alt="enter description here" /></p>
<p>作为21世纪垃圾佬的我，怎么能屈服在这720P的分辨率下面呢?<br />
怎么只能去某宝某东买，或者去某鱼“捡垃圾”吗？</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-5-19/%E5%A6%82%E4%BD%95%E8%AE%A9%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E6%89%8B%E6%9C%BA%E7%9A%84%E6%91%84%E5%83%8F%E5%A4%B4/1589858781574.png" alt="enter description here" /></p>
<p>这价格……打扰了，打扰了~~~</p>
<h2 id="怎么简单又低成本的搞定这个问题"><a class="markdownIt-Anchor" href="#怎么简单又低成本的搞定这个问题"></a> 怎么简单又低成本的搞定这个问题</h2>
<p>但是我们不能屈服呀，目标还在那里，任务还没完成呢。<br />
所以，我们应该怎么搞？</p>
<p>这个时候伟大的手机就可以站出来了。不管是现在的手机还是三四年前的手机，随意都能将分辨率提高到1080以上啦。更不说现在的P30了，银河都给你拍出来。但是……拍黑洞的同学可以省省了。。。</p>
<p>所以，这个是时候我们有三个方案：</p>
<ul>
<li>
<p>第一个：<br />
是自己做个轮子，然后把手机开到照相机，接着不停的用adb给屏幕截图，截好后就传回来。这样子的话，速度就会很慢。因为你需要不停的发指令，又要截图，截完还得传回电脑上面显示。所以，这个方案，能把帧率提高到10帧都难了咯。所以，我们就先放到一边，好吧。</p>
</li>
<li>
<p>第二个：<br />
写一个软件做后台服务，按照一定分辨率去截图，然后启动一个web服务，把内容发送到电脑这边。但是这样子的话，时间成本比较高，对于我们为了这个临时或者偶尔需要用一下的情况来说，不是很现实。所以，也放到一边啦</p>
</li>
<li>
<p>第三个：<br />
去网上找轮子，看一下有没有好点的现成的轮子或者软件。果不其然，I got it！发现一个似乎挺流批的软件，叫DroidCam ,这软件可以实现不同分辨率的图像传输，还可以实现放大缩小，相机聚焦的功能。号称可以兼容Chrome浏览器和QQ等通讯软件。太完美了，我们的需求他都实现了。</p>
</li>
</ul>
<p>OK，鉴于时间成本和现实情况。我们暂且采用第三个方案吧，嘻嘻嘻。懒就是懒，无限借口~</p>
<h2 id="试试白嫖droidcam"><a class="markdownIt-Anchor" href="#试试白嫖droidcam"></a> 试试白嫖DroidCam</h2>
<h3 id="安装pc端软件"><a class="markdownIt-Anchor" href="#安装pc端软件"></a> 安装PC端软件</h3>
<p>我们先去这个软件的官网下载好这个软件的PC端，网址在这里：<a href="https://www.dev47apps.com/">https://www.dev47apps.com/</a><br />
然后下载好软件后，安装之。<br />
随后安装完便打开，可以看到这样的界面：</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-5-19/%E5%A6%82%E4%BD%95%E8%AE%A9%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E6%89%8B%E6%9C%BA%E7%9A%84%E6%91%84%E5%83%8F%E5%A4%B4/1589858798951.png" alt="enter description here" /></p>
<p>手机接入和电脑同一个局域网，然后，也安装上他们的这个软件，安卓版的，有两个版本，一个是正常版、另外一个是高级版的。亲测后，发现只有高级版的才有上面说的1080P的功能。然后，需要付费购买，但是不想付费怎么办？去某些神奇的地方下载破解版的DroidCamX。</p>
<span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #FF7242;color: #fff">点击有惊喜
  </button><span class="hide-content">链接：https://pan.baidu.com/s/1nMlOcHMjDnlprW4OnRLb0Q 提取码：mxo4</span></span>
<h3 id="安装android客户端"><a class="markdownIt-Anchor" href="#安装android客户端"></a> 安装Android客户端</h3>
<p>OK，我已经在手机上面装好DroidCamX，然后用手机打开软件。可以看到这样的界面。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-5-19/%E5%A6%82%E4%BD%95%E8%AE%A9%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E6%89%8B%E6%9C%BA%E7%9A%84%E6%91%84%E5%83%8F%E5%A4%B4/1589858808391.png" alt="enter description here" /></p>
<h2 id="试试效果"><a class="markdownIt-Anchor" href="#试试效果"></a> 试试效果</h2>
<p>这个时候，在电脑上面打开刚才装好的软件，接着再填好ip地址和端口，点击连接，接着你就可以看到东西了。<br />
也可以在网页中打开，输入ip加端口。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-5-19/%E5%A6%82%E4%BD%95%E8%AE%A9%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E6%89%8B%E6%9C%BA%E7%9A%84%E6%91%84%E5%83%8F%E5%A4%B4/1589858816699.png" alt="enter description here" /></p>
<p>就这个分辨率，没得说了吧。吊锤自带的摄像头，放张比较图，意思意思一下</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-5-19/%E5%A6%82%E4%BD%95%E8%AE%A9%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E6%89%8B%E6%9C%BA%E7%9A%84%E6%91%84%E5%83%8F%E5%A4%B4/1589858843709.png" alt="enter description here" /></p>
<p>左边1080手机摄像头，右边笔记本摄像头，点击可看大图</p>
<p>在网页上面的摄像头测试网站中也可以看到摄像头的正常使用。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-5-19/%E5%A6%82%E4%BD%95%E8%AE%A9%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E6%89%8B%E6%9C%BA%E7%9A%84%E6%91%84%E5%83%8F%E5%A4%B4/1589858851913.png" alt="enter description here" /></p>
<p>接着，我们差不多就已经可以确定使用这个软件的可行性了。</p>
<h2 id="在代码中调用这个摄像头"><a class="markdownIt-Anchor" href="#在代码中调用这个摄像头"></a> 在代码中调用这个摄像头</h2>
<p>可能会有同学问，怎么在代码中用到这个网络摄像头呢？</p>
<p>所以在这里我随意的、简单的用Python读取这个摄像头的数据。<br />
效果大概长这样。</p>
<p>我们使用 python 导入 cv2库 ，然后，将我们刚才的摄像头的网页链接丢进去。比如：<br />
<a href="http://192.168.1.104:4747/mjpegfeed?1920x1080">http://192.168.1.104:4747/mjpegfeed?1920x1080</a> ，这个例子，后面 1920x1080 说明传回来的数据是要1920x1080分辨率的。然后用 cv2.VideoCapture 去读取这个链接。接着就可以在一个循环里面读取内容然后再imshow出来了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-5-19/%E5%A6%82%E4%BD%95%E8%AE%A9%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E6%89%8B%E6%9C%BA%E7%9A%84%E6%91%84%E5%83%8F%E5%A4%B4/1589858858762.png" alt="enter description here" /></p>
<p>代码我放这里</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">url_1080=<span class="string">&quot;http://192.168.1.104:4747/mjpegfeed?1920x1080&quot;</span></span><br><span class="line">url_720=<span class="string">&quot;http://192.168.1.104:4747/mjpegfeed?1280x720&quot;</span></span><br><span class="line"></span><br><span class="line">capture = cv2.VideoCapture(url_1080)</span><br><span class="line">size = (<span class="built_in">int</span>(capture.get(cv2.CAP_PROP_FRAME_WIDTH)),</span><br><span class="line">        <span class="built_in">int</span>(capture.get(cv2.CAP_PROP_FRAME_HEIGHT)))</span><br><span class="line">print(capture.isOpened())</span><br><span class="line">num = <span class="number">0</span></span><br><span class="line">cam=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br><span class="line">    ret, img = capture.read()</span><br><span class="line">    <span class="keyword">if</span> cam:</span><br><span class="line">        <span class="comment">#右旋90度，3次</span></span><br><span class="line">        img=np.rot90(img,<span class="number">3</span>)</span><br><span class="line">    imgArr = model.detect(img,num)</span><br><span class="line">    print(imgArr)</span><br><span class="line">    <span class="keyword">for</span> img <span class="keyword">in</span> imgArr:</span><br><span class="line">        cv2.imshow(<span class="string">&#x27;Video&#x27;</span>, img)</span><br><span class="line">        key = cv2.waitKey(<span class="number">1</span>)</span><br><span class="line">        print(<span class="string">&quot;showing/&#123;&#125;.jpg&quot;</span>.<span class="built_in">format</span>(num))</span><br><span class="line">        num = num + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> key == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    imgArr.clear()</span><br><span class="line">capture.release()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>
<p>从此可以用上手机摄像头给电脑来拍出更高清的视频或者相片了，使用场景就大家根据自己的情况来处理啦，总之，仁者见仁智者见智</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>有趣的东西</category>
      </categories>
      <tags>
        <tag>有趣的东西</tag>
      </tags>
  </entry>
  <entry>
    <title>今天的歌单属于 A神</title>
    <url>/archives/c65f8efb.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id=""><a class="markdownIt-Anchor" href="#"></a> ◢◤</h2>
<p>A神，大名Tim Bergling，别称AVICII。大家平时都尊称他为 A神 。<br />
在2018-4-20那天，他告别了我们，留下无尽唏嘘。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-20/%E4%BB%8A%E5%A4%A9%E7%9A%84%E6%AD%8C%E5%8D%95%E6%98%AF%E5%B1%9E%E4%BA%8E%E2%80%9CA%E7%A5%9E%E2%80%9D%E7%9A%84/1555761528698.png" alt="" /></p>
<p>初次认识AVICII的时候，是他的 Hey brother ，富有张力的歌声以及歌词里面的深情让我瞬间对这位大神的音乐产生了兴趣。<br />
后续便不时关注一下这位电音大佬发的新专辑。</p>
<p>从2010年至2018连续入围百大DJ的他，肯定能让你对他的音乐产生兴趣。相信很多伙伴其实都是听过这位巨匠的歌曲的。<br />
即使他并未能在歌声中给你带来多大的改变，但如果他用他的音乐给过你一份感动不也很值得纪念他吗？</p>
<p>致敬A神 AVICII ◢◤</p>
<p>我的网易云，年度歌单中，10首有4首是属于他的</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-28/BogImages/1585380041932.png" alt="avicii" /></p>
]]></content>
      <categories>
        <category>小日志</category>
      </categories>
      <tags>
        <tag>小日志</tag>
        <tag>碎碎念</tag>
      </tags>
  </entry>
  <entry>
    <title>ADB操作手机的那些骚操作</title>
    <url>/archives/c051e6bd.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前文再续书接上一回"><a class="markdownIt-Anchor" href="#前文再续书接上一回"></a> 前文再续，书接上一回</h2>
<p>承接上一篇 ADB连接手机的那些姿势 ，我们已经成功地将用ADB与手机连接上，无论是有线亦或是无线连接。</p>
<p>这个时候，我们就可以使用ADB操作手机了。</p>
<h2 id="确认设备状态"><a class="markdownIt-Anchor" href="#确认设备状态"></a> 确认设备状态</h2>
<p>我们先确认一下设备有没在线先。</p>
<ul>
<li>adb devices<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555637982324.png" alt="default" /></li>
</ul>
<p>那么我们再测试一下手机有没root权限吧。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">adb root</span><br><span class="line">adb shell</span><br></pre></td></tr></table></figure>
<p>输入adb root后，会重启一下adb，然后输入adb shell后，观察前面的命令提示符。如果变成了#就说明提升为root权限成功了，否则就是未root的手机。<br />
对于那部分成功进入root 模式的同学，可以用 <strong>adb unroot</strong> 回到正常状态</p>
<h2 id="我们还可以用adb来安装-卸载-启动-某个应用"><a class="markdownIt-Anchor" href="#我们还可以用adb来安装-卸载-启动-某个应用"></a> 我们还可以用adb来安装、卸载、启动、某个应用</h2>
<h3 id="adb启动应用"><a class="markdownIt-Anchor" href="#adb启动应用"></a> adb启动应用</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">adb shell</span><br><span class="line">pm list packages</span><br></pre></td></tr></table></figure>
<ul>
<li>adb shell 进入shell中</li>
<li>pm list packages 列出所有应用App</li>
</ul>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555638499340.png" alt="default" /></p>
<p>有些同学就会发现App太多找来找去都找不到自己要找的那个App<br />
这个时候，我们就可以用 | grep 来过滤我们的关键字了，比如</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pm list packages | grep camera</span><br></pre></td></tr></table></figure>
<p>前面那句就是列出所有package，然后用grep 过滤 含camera 的包</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555638756745.png" alt="default" /></p>
<p>那我们就启动OPPO自带的相机吧。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">am start -n com.oppo.camera/.Camera 启动相机</span><br><span class="line">am start -n  com.tencent.mobileqq/.activity.SplashActivity 启动QQ</span><br></pre></td></tr></table></figure>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555639272947.png" alt="default" /></p>
<p>效果如下：<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/%E5%90%AF%E5%8A%A8%E7%9B%B8%E6%9C%BA3.gif" alt="default" /></p>
<p>类似的，我们还可以用 am -start 启动其他的软件，例如	QQ、微信什么的。</p>
<p>我们还可以找到软件的安装路径</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">adb shell pm path com.tencent.qqmusic</span><br></pre></td></tr></table></figure>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555640677754.png" alt="default" /></p>
<h3 id="adb卸载-安装-应用"><a class="markdownIt-Anchor" href="#adb卸载-安装-应用"></a> adb卸载、安装 应用</h3>
<p>adb卸载以及安装的命令对应为</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">adb uninstall 包名</span><br><span class="line">adb install apk路径</span><br></pre></td></tr></table></figure>
<p>卸载腾讯视频<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555640880140.png" alt="default" /></p>
<p>安装QQ音乐<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555641252739.png" alt="default" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555641273242.png" alt="default" /></p>
<h2 id="adb-传输文件"><a class="markdownIt-Anchor" href="#adb-传输文件"></a> adb 传输文件</h2>
<ul>
<li>adb push pc文件路径 设备路径<br />
如 adb push C:\Users\Marx\Desktop\date.jpg /sdcard/<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555641574521.png" alt="default" /></li>
<li>adb pull 设备路径  pc文件路径</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">adb pull /data/app/com.tencent.qqmusic-P2749Smc9nccljwLiexzJA==/base.apk C:\Users\Marx\Desktop</span><br></pre></td></tr></table></figure>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555641121514.png" alt="default" /></p>
<h2 id="adb-模拟操作"><a class="markdownIt-Anchor" href="#adb-模拟操作"></a> adb 模拟操作</h2>
<p>我们先进入到 adb shell 中</p>
<ul>
<li>adb shell</li>
<li>input  ，你会看到很多提示</li>
<li><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555641761038.png" alt="default" /></li>
<li>input tap 700 700 ，将会在 700,700 的位置点击一下<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555641999513.png" alt="default" /></li>
</ul>
<h2 id="adb-实现拍照"><a class="markdownIt-Anchor" href="#adb-实现拍照"></a> adb 实现拍照</h2>
<p>在我现在打开的相机的场景中，那我们怎么点击拍照呢？我们并不知道拍照按钮的位置哦。又只能靠猜吗？<br />
显然不是，我们有两个办法。</p>
<p>比如我们的场景是在相机里面点击拍摄，我们可以用到keyevent来操作</p>
<ul>
<li>input keyevent 27 是拍照的指令，但是这个时候要你打开相机</li>
</ul>
<p>更多的keyevent可以进入到这个网址 查看 <a href="https://developer.android.com/reference/android/view/KeyEvent.html">https://developer.android.com/reference/android/view/KeyEvent.html</a><br />
如果进入不了的同学，可以后台回复 keyevent ，获取keyevent的文档。<br />
我在这里挑几个好玩的出来给大家随意参考一下。</p>
<ul>
<li>3	HOME 键</li>
<li>4	返回键</li>
<li>26	电源键</li>
<li>82	菜单键</li>
</ul>
<h2 id="adb-实现截屏"><a class="markdownIt-Anchor" href="#adb-实现截屏"></a> adb 实现截屏</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">- adb shell /system/bin/screencap -p /sdcard/screenshot.png</span><br><span class="line">- adb pull /sdcard/screenshot.png d:/screenshot.png</span><br></pre></td></tr></table></figure>
<ul>
<li>adb shell /system/bin/screencap -p /sdcard/screenshot.png ， 截屏到 sdcard</li>
<li>adb pull /sdcard/screenshot.png d:/screenshot.png ，传到电脑中</li>
</ul>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555645470814.png" alt="default" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555645411272.png" alt="default" /></p>
<h2 id="adb-查看系统信息"><a class="markdownIt-Anchor" href="#adb-查看系统信息"></a> adb 查看系统信息</h2>
<ul>
<li>
<p>查看电池信息 dumpsys battery<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555643526178.png" alt="default" /></p>
</li>
<li>
<p>屏幕分辨率 wm size</p>
</li>
</ul>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555643663082.png" alt="default" /></p>
<ul>
<li>
<p>查看网络信息 ifconfig<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555643926200.png" alt="default" /></p>
</li>
<li>
<p>查看Android的版本 getprop ro.build.version.release<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555643804691.png" alt="default" /></p>
</li>
<li>
<p>查看内容以及资源使用情况 top，为了显示明显一点，打开了“王者”，大家可以看到最上面那个应用所占的资源。</p>
</li>
</ul>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555644338587.png" alt="default" /></p>
<h2 id="adb查看应用日志"><a class="markdownIt-Anchor" href="#adb查看应用日志"></a> adb查看应用日志</h2>
<ul>
<li>adb logcat 这个简直学过Android的同学必备技能了。</li>
<li>adb logcat *:E ，输出所以 错误日志</li>
</ul>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-19/ADB%E6%93%8D%E4%BD%9C%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555644813865.png" alt="default" /></p>
<p>还有很多很多的过滤以及对应进程查看的操作，大家自行查阅资料，这里便不展开了。</p>
<p>因为Android是一个基于Linux内核的开放源代码移动操作系统。所以很多Linux命令在adb shell 中也是适用的。我在这里就不一一说明了。例如 cat、cd、chmod、df、grep、kill、mv、之类的命令，大家可以自行去查资料。</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>ADB</tag>
        <tag>Android</tag>
        <tag>有趣的东西</tag>
      </tags>
  </entry>
  <entry>
    <title>ADB连接手机的那些姿势</title>
    <url>/archives/4d609689.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>场景一：你需要对你的手机某个软件进行一个截图，然后发给你同事。然后，你要打开手机，然后再打开那个软件，接着用手机的截图功能，给软件截了个图。截好之后，再打开QQ或者微信或者其他软件，再分享这个截图过去。</p>
<p>场景二：晚上，在天台中看星星，你们会不会由心底发出这句，星你太美~~<br />
然后当你兴奋地掏出手机，调到专业模式，设好参数，去打算拍个星星的时候，不争气的手抖起来了。然后你就看着群星在你的面前逐渐模糊。。。<br />
的确让手保持几秒甚至十几秒的纹丝不动也是有点为难了。</p>
<p>场景三：你想在电脑上面玩微信上面那些小程序游戏，例如“跳一跳”这个。。。</p>
<p>那么问题来了，当手机在拍摄的时候，如何可以保持到我不碰他然后他又可以拍照呢？怎么可以快速地给同事发送那个软件截图呢？有怎么样可以保证到跳一跳百分百命中呢?</p>
<h2 id="adb是什么"><a class="markdownIt-Anchor" href="#adb是什么"></a> ADB是什么</h2>
<p>没错，如你所见，我们可以用adb来处理上面那些工作，利用adb命令来快速完成。</p>
<blockquote>
<p>ADB全称Android Debug Bridge,翻译过来就是“Android 调试桥”。我们一般可以在android_sdk/platform-tools/中可以找到adb。<br />
如果你没有这个android_sdk的话，可以后台回复 “ADB工具” 获取ADB工具。<br />
ADB是一个通用命令行工具，其允许您与模拟器实例或连接的 Android 设备进行通信。它可为各种设备操作提供便利，如安装和调试应用，并提供对 Unix shell（可用来在模拟器或连接的设备上运行各种命令）的访问。<br />
该工具作为一个客户端-服务器程序，包括三个组件：</p>
<ul>
<li>客户端，该组件发送命令。客户端在开发计算机上运行。您可以通过发出 adb 命令从命令行终端调用客户端。</li>
<li>后台程序，该组件在设备上运行命令。后台程序在每个模拟器或设备实例上作为后台进程运行。</li>
<li>服务器，该组件管理客户端和后台程序之间的通信。服务器在开发计算机上作为后台进程运行</li>
</ul>
</blockquote>
<h2 id="usb连接adb"><a class="markdownIt-Anchor" href="#usb连接adb"></a> USB连接ADB</h2>
<p>要在通过 USB 连接的设备上使用 adb，您必须在设备系统设置中启用 USB 调试。</p>
<h3 id="打开开发者选项"><a class="markdownIt-Anchor" href="#打开开发者选项"></a> 打开开发者选项</h3>
<p>在运行 Android 4.2 及更高版本的设备上，开发者选项 在默认情况下处于隐藏状态。如需将其显示出来，请转到 <strong>设置</strong> &gt; <strong>关于手机</strong> &gt; 并连续点击 <strong>版本号</strong> <strong>七次</strong>。返回上一屏幕，在底部可以找到 <strong>开发者选项</strong>。<br />
在某些设备上，开发者选项 屏幕所在的位置或命名方式可能有所不同，大家参考上面步骤对照自己手机操作。<br />
现在，您可以将设备与 USB 连接。可以在adb.exe目录里面运行 adb devices 来验证设备是否连接。如果已连接，您将看到设备名称以“device”形式列示。</p>
<div class="note info flat"><p>当连接运行 Android 4.2.2 或更高版本的设备时，系统将显示一个对话框，询问您是否接受允许在这台计算机上调试的 RSA 密钥。这种安全机制可以保护用户设备，因为它可以确保只有在您能够解锁设备并确认对话框的情况下才能执行 USB 调试和其他 ADB 命令。</p>
</div>
<h2 id="操作步骤如下"><a class="markdownIt-Anchor" href="#操作步骤如下"></a> 操作步骤如下</h2>
<p>图像步骤如下：</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-18/ADB%E8%BF%9E%E6%8E%A5%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555598598978.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-18/ADB%E8%BF%9E%E6%8E%A5%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555598660200.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-18/ADB%E8%BF%9E%E6%8E%A5%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555598739424.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-18/ADB%E8%BF%9E%E6%8E%A5%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555598551628.png" alt="" /></p>
<p>这个时候，你就算用USB连接上ADB了，接下来给大家介绍一下怎么摆脱数据线的束缚，用无线连接ADB。</p>
<h2 id="无线连接wifi连接需要用一下-usb-线"><a class="markdownIt-Anchor" href="#无线连接wifi连接需要用一下-usb-线"></a> 无线连接（WIFI连接，需要用一下 USB 线）</h2>
<p>先按照上面说的，要先用 USB 连接好ADB 。接着用手机接入你家WIFI，也可以是别人家WIFI啦。只要是Android手机和你的PC能正常ping通的网络就好。<br />
然后 adb devices 确认设备在线后，输入 adb tcpip 1213 这个1213是你自己定义的，最好大于1000，最大又不能超过65535，知道为啥不能超过65535的大神可以在留言给大家解答。我相信大部分同学都是知道的</p>
<p>我们输入adb tcpip 1213后，可以看到 restarting in TCP mode port: 1213</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-18/ADB%E8%BF%9E%E6%8E%A5%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555599182714.png" alt="" /></p>
<p>这个时候，就可以拔掉你的USB数据线了。输入命令  adb connect 192.168.1.103:1213</p>
<p>这个192.168.1.103是你的手机的IP地址，1213则是刚才设置的1213端口。</p>
<h3 id="找到自己手机的ip地址"><a class="markdownIt-Anchor" href="#找到自己手机的ip地址"></a> 找到自己手机的IP地址</h3>
<p>好了，这个IP地址该怎么拿到呢？总不能靠猜吧。<br />
我们可以到 设置、关于手机、状态信息、IP地址这个地方找到我们要的IP地址啦。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-18/ADB%E8%BF%9E%E6%8E%A5%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555599521682.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-18/ADB%E8%BF%9E%E6%8E%A5%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555599531063.png" alt="" /></p>
<p>这个时候，输入 adb connect 192.168.1.103:1213 ，可以看到如下提示</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-18/ADB%E8%BF%9E%E6%8E%A5%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555599656217.png" alt="" /></p>
<p>看到这样的提示就证明你<strong>连接成功</strong>了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-18/ADB%E8%BF%9E%E6%8E%A5%E6%89%8B%E6%9C%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/1555599714217.png" alt="" /></p>
<p>如果看到后面那个device 显示的是 offline 的话，就说明没有连接成功，你要重新连接一次。</p>
<p>OK，就这样子吧</p>
<p>其实，不知道大家去玩的时候，看到美丽的景色，打算想用手机拍个全景图的时候，发现怎么拍都拍不好。拍着拍着手就会抖起来了，导致到一些线条会弯曲。<br />
还有就是不支持拍摄星轨的手机，应该怎么拍星轨呢<br />
后面我再写写我是怎么解决的~嘿嘿</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>ADB</tag>
        <tag>Android</tag>
        <tag>有趣的东西</tag>
      </tags>
  </entry>
  <entry>
    <title>科普贴：USB3.0 会对 2.4Gz WIFI 产生干扰</title>
    <url>/archives/8b852ea3.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="我的网速居然被影响到了"><a class="markdownIt-Anchor" href="#我的网速居然被影响到了"></a> 我的网速居然被影响到了</h2>
<p>昨晚在更新某款软件的时候，发现了一个有意思的现象，就是我从USB3.0里面拉文件到电脑里面的时候，才一会儿，我的下载速度就猛地掉了下来。3点多M每秒的速度跌回几百k每秒。<br />
一开始，我还不以为然，以为这个WiFi又出了一些毛病。<br />
但是随着copy完U盘里面的东西后，网速就又慢慢回到3点多M每秒的速度了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-16/%E7%A7%91%E6%99%AE%E8%B4%B4%EF%BC%9AUSB3.0_%E4%BC%9A%E5%AF%B9_2.4Gz_WIFI_%E4%BA%A7%E7%94%9F%E5%B9%B2%E6%89%B0/1555424154483.png" alt="没拉文件前" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-16/%E7%A7%91%E6%99%AE%E8%B4%B4%EF%BC%9AUSB3.0_%E4%BC%9A%E5%AF%B9_2.4Gz_WIFI_%E4%BA%A7%E7%94%9F%E5%B9%B2%E6%89%B0/1555424193807.png" alt="拉文件时" /></p>
<p>这就引起我的好奇了，为啥用USB3.0的时候，网速会有这么明显的变化呢？</p>
<p>为了排除USB2.0也会产生干扰，我接着用云盘管理工具上传一个大文件，再用USB2.0的接口去拖了个文件，去观察网速变化。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-17/%E7%A7%91%E6%99%AE%E8%B4%B4%EF%BC%9AUSB3.0_%E4%BC%9A%E5%AF%B9_2.4Gz_WIFI_%E4%BA%A7%E7%94%9F%E5%B9%B2%E6%89%B0/1555472910622.png" alt="" /></p>
<p>发现并未有明显的变化。<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-17/%E7%A7%91%E6%99%AE%E8%B4%B4%EF%BC%9AUSB3.0_%E4%BC%9A%E5%AF%B9_2.4Gz_WIFI_%E4%BA%A7%E7%94%9F%E5%B9%B2%E6%89%B0/1555475103866.png" alt="" /><br />
这就触及我的知识盲区了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-17/%E7%A7%91%E6%99%AE%E8%B4%B4%EF%BC%9AUSB3.0_%E4%BC%9A%E5%AF%B9_2.4Gz_WIFI_%E4%BA%A7%E7%94%9F%E5%B9%B2%E6%89%B0/1555473171482.png" alt="" /></p>
<p>所以，赶紧去查一下资料。试图把原因以及原理给搞懂了。</p>
<h2 id="寻找答案"><a class="markdownIt-Anchor" href="#寻找答案"></a> 寻找答案</h2>
<p>在反复查资料后，发现知乎上面有个比较好的解答。回答的比较详细。<br />
我摘抄一下他的回答过来，大家可以看一下。</p>
<blockquote>
<p>首先，需要明确一点事实，任何有线信号都会向外辐射电磁波，除非它是直流电（没有频率变化）、或者完全屏蔽。干扰的强度与线缆上传输的信号（如电压、电流、频率）有关。举一个特别现实的例子：一般在高压线的下方，如果要传输以太网信号，最可靠的方法是用光纤，如果用双绞线铜缆传输信号，很有可能会被干扰。大多数电子器件在设计的时候都要考虑电磁屏蔽和抗干扰的问题。所以，尽管USB3.0是有线信号，但仍然可能向外辐射电磁波，对其它信号产生干扰。那么有人会问了，USB3.0不是5GHz吗？Wifi是2.4GHz怎么会有干扰呢？问题出在USB传输线上。USB3.0的传输频率确实是5GHz串行，但USB3.0使用4条数据线组成2组，每组负责一个传输方向，实现全双工双向5GHz，而每条数据线的基准频率是2.5GHz。所以，总带宽是5GHz没错，但每条线上是2.5GHz，这个频率距离2.4G Wifi的频率太近了，又因为高频设备大多数都使用了SSC技术（扩频时钟？）使得信号不完全分布在一个固定频率上，所以就波及了2.5GHz附近的其它频率，所以对Wifi和蓝牙产生了较大的干扰。<br />
作者：北极<br />
链接：<a href="https://www.zhihu.com/question/28422159/answer/40755965">https://www.zhihu.com/question/28422159/answer/40755965</a><br />
来源：知乎<br />
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
</blockquote>
<h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2>
<p>简单来说就是，5GHz的USB3.0在设计的时候，导致了其使用的时候，如果没有其他东西屏蔽他的干扰就会导致到2.4GHz频率的设备灵敏度降低。</p>
<p>看完了大神的分析后，看到inter有份白皮书专门描述这个问题，并提供了解决方案。然后就到inter官网倒腾了一下，找到了这份白皮书。<br />
看了一下这份文档后，大概也猜测到知乎上面回答的那个大神也是参考过这份白皮书给出了防干扰建议的。有些段落应该是他直接从里面摘抄出来的。</p>
<p>看来，看来是时候给我的移动硬盘和3.0的U盘来点东西了。</p>
<p>感兴趣的同学，可以找一下这份官方说明</p>
<p>现在大家知道 为啥2.4G的WIFI会被USB3.0给干扰到了吗 。</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>小日志</category>
      </categories>
      <tags>
        <tag>小日志</tag>
        <tag>科普</tag>
      </tags>
  </entry>
  <entry>
    <title>C++命名空间的常见用法</title>
    <url>/archives/d1d36565.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>相信很多同学都用过using namespace std; 这句话吧。在刚学习C++的时候，教科书上告诉我们，这个叫命名空间，用上这句话后，就不用像下面这样输出</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Hello MARX&quot;</span> &lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure>
<p>可以直接用cout&lt;&lt;就可以输出</p>
<p>想必大家都知道using namespace std;这句话的含义吧。</p>
<p>用上这句话后，这样命名空间std内定义的所有标识符都有效，而std又是C++的一个标准库。所以，声明好之后，就可以快速使用到里面的东西了，如 函数、类、变量 等等。</p>
<p>其实命名空间是98年之后才引入的，是对作用域的一种特殊的抽象，它包含了处于该作用域内的标识符，且本身也用一个标识符来表示。<br />
就好比如，MARX是A公司的一个攻城狮，身份标识符为2333，而CBR也是B公司的攻城狮，身份标识符竟然也是2333。这个时候，MARX在A公司里面工作的好好地，CBR也在B公司里面认真地工作。他们在不同的公司里面有着相同的干着不同的活，却互不影响。</p>
<h2 id="干说不练假把戏"><a class="markdownIt-Anchor" href="#干说不练假把戏"></a> 干说不练假把戏</h2>
<p>命名空间的声明如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> marx &#123;</span><br><span class="line">  <span class="keyword">int</span> cbr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们可以声明多个命名空间，然后还可以嵌套使用。就是类似这样子：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> marx &#123;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">first</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; \__FUNCTION__ &lt;&lt; <span class="string">&quot; function first&quot;</span>  &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">namespace</span> cbr &#123;</span><br><span class="line">		<span class="function"><span class="keyword">void</span> <span class="title">info</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; \__FUNCTION__ &lt;&lt; <span class="string">&quot;嵌套的命名空间&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>嵌套的命名空间该怎么用呢？<br />
比如我上面那个，marx，在使用到嵌套的 cbr 时。<br />
可以这样声明： using namespace marx::cbr;<br />
然后就可以直接使用到里面的info函数了。<br />
也可以只声明marx，using namespace marx;，这样子，使用到info函数的时候，就要用cbr::info()来使用了。</p>
<p>那，有很多同学看到这些特征的时候，可能就会感觉，这不就是类吗？</p>
<p>不，这其实还是有区别的，命名空间是可以包含类的。<br />
还有，命名空间可以重新打开然后直接在里面添加内容的，但是类就不行。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//第二个命名空间</span></span><br><span class="line"><span class="keyword">namespace</span> marx_two &#123;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">first_cbr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; \__FUNCTION__ &lt;&lt; <span class="string">&quot; function first&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">second</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt;\__FUNCTION__ &lt;&lt; <span class="string">&quot; 第二个函数，将数字相加后结果如下：&quot;</span> &lt;&lt; num + num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> marx_two &#123;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">third</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt;\__FUNCTION__ &lt;&lt; <span class="string">&quot; function third,直接添加进来的，类class做不到&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对于命名空间，进行上面那样的操作是合法的，但是对于类来说，就是非法的了</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">f1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt;\__FUNCTION__ &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">f2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt;\__FUNCTION__ &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>会有如下报错~~</p>
<p><img src="http://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-16/C%2B%2B_%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/1555409668538.png" alt="" /></p>
<p>在命名空里面使用到 inline 内联命名空间的时候，内联名字空间的名称在名称查找时被特别对待，引用其中的名称时，被内联的名字空间名称可以省略。也即，内联名字空间内的标识符被提升到包含着内联的名字空间的那个父级的名字空间中。内联名字空间可以在修改名字空间名称的同时避免在二进制文件中生成的符号改变，因此不同内联名字空间的名称可以用于标识接口兼容的不同版本，有助于保持二进制兼容性。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//第二个命名空间</span></span><br><span class="line"><span class="keyword">namespace</span> marx_two &#123;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">first_cbr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">&quot; function first&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">second</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">&quot; 第二个函数，将数字相加后结果如下：&quot;</span> &lt;&lt; num + num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">inline</span> <span class="keyword">namespace</span> myin</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="function"><span class="keyword">void</span> <span class="title">special</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;使用inline内联命名空间时，命名空间可以被省略&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>声明了 using namespace marx_two;之后，再special();就可以直接使用了。<br />
那差不多就这样了</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>命名空间</tag>
      </tags>
  </entry>
  <entry>
    <title>效率猛兽：Windows快捷键</title>
    <url>/archives/7dab88.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="还记得xp的时代吗"><a class="markdownIt-Anchor" href="#还记得xp的时代吗"></a> 还记得XP的时代吗</h2>
<p>很多朋友平时都在用Windows，Windows系统XP可以说是一代或者几代人的回忆了。在2014年4月8日后，微软将正式停止对Windows XP系统安全更新，不再修补XP系统的安全漏洞。然后Windows系统一直都有各自对应的版本和迭代。<br />
现在，微软也在主推Windows 10 操作系统。因为在这个Win10上面，有着更好的操作体验以及安全性。连Win7，微软也宣告了其最后支持时间，2020年1月14日停止对Windows 7 的支持。</p>
<h2 id="windows-10-的快捷键是真滴香"><a class="markdownIt-Anchor" href="#windows-10-的快捷键是真滴香"></a> Windows 10 的快捷键是真滴香</h2>
<p>OK，普及完一些新闻后，我们进入正题，Windows 快捷方式有哪些，其对我们提高效率有怎么样的帮助呢。</p>
<p><strong>来点名</strong>~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-15/%E6%95%88%E7%8E%87%E7%8C%9B%E5%85%BD%EF%BC%9AWindows%E5%BF%AB%E6%8D%B7%E9%94%AE/1555309060120.png" alt="" /></p>
<h2 id="alt-打头"><a class="markdownIt-Anchor" href="#alt-打头"></a> Alt 打头</h2>
<ul>
<li>Alt + Tab 快速切换应用，熟练的同学，在某些场合可以快速在两个窗口直接互相切换，十分流批。</li>
</ul>
<h2 id="ctrl-打头"><a class="markdownIt-Anchor" href="#ctrl-打头"></a> Ctrl 打头</h2>
<ul>
<li>
<p>Ctrl+C 复制</p>
</li>
<li>
<p>Ctrl+V 黏贴</p>
</li>
<li>
<p>Ctrl+A 全选</p>
</li>
<li>
<p>Ctrl+X 剪切</p>
</li>
<li>
<p>Ctrl+F 查找</p>
</li>
<li>
<p>Ctrl+Z 撤销操作</p>
</li>
<li>
<p>Ctrl+Shift 切换输入法</p>
</li>
</ul>
<h2 id="win-打头"><a class="markdownIt-Anchor" href="#win-打头"></a> Win 打头</h2>
<ul>
<li>Win+Tab 切换桌面以及查看 时间轴（win10才有）</li>
</ul>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-15/%E6%95%88%E7%8E%87%E7%8C%9B%E5%85%BD%EF%BC%9AWindows%E5%BF%AB%E6%8D%B7%E9%94%AE/1555310274136.png" alt="" /></p>
<ul>
<li>
<p>Win+空格 切换输入法</p>
</li>
<li>
<p>Win + 上 ，选中窗口可以让窗口最大化。</p>
</li>
<li>
<p>Win + 下 ，选中窗口可以让窗口最小化。</p>
</li>
<li>
<p>Win + 左 ，选中窗口可以让窗口靠左侧。</p>
</li>
<li>
<p>Win + 右 ，选中窗口可以让窗口靠右侧。</p>
</li>
</ul>
<p>上面那个四个可以组合使用，就是你可以将软件选中后，Win+左，然后Win+上或者下。你就可以成功捣鼓类似我这样的三分屏。或者，四分屏。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-15/%E6%95%88%E7%8E%87%E7%8C%9B%E5%85%BD%EF%BC%9AWindows%E5%BF%AB%E6%8D%B7%E9%94%AE/1555310656934.png" alt="" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-15/%E6%95%88%E7%8E%87%E7%8C%9B%E5%85%BD%EF%BC%9AWindows%E5%BF%AB%E6%8D%B7%E9%94%AE/1555310676218.png" alt="" /></p>
<p>一个平面分成两份、三份、四份。用在边写文档，边写资料的时候，简直不能太舒服啊。极大提高效率。</p>
<ul>
<li>
<p>Win+E 打开资源管理器，你可以理解成打开 ”我的电脑“</p>
</li>
<li>
<p>Win+R 打开运行，做技术的基本都得知道，也可以设置快捷方式，win + r，然后输入你的快捷方式，瞬息之间就给你打开了。</p>
</li>
<li>
<p>Win + D 切换到桌面，当你不想被那个从你背后正在走过来的人看到你屏幕的时候，按个Win + D去秀他，好吧。</p>
</li>
<li>
<p>Win + L 锁屏，假设你在一个公共点的地方使用到电脑，周围人多眼杂。你需要离开去上个厕所、或者去接水喝的时候，你就可以 WIN + L 一下，快速锁好你的屏幕。PS:还可以搭配蓝牙来实现离开即锁屏。</p>
</li>
<li>
<p>Win + X 显示系统选项，很多同学估计用到这个快捷键是因为想用管理员方式打开 powershell吧。</p>
</li>
<li>
<p>Win + T 显示窗口预留 按下这个快捷键后，焦点会出现在任务栏，然后显示窗口预览</p>
</li>
<li>
<p>Win + P 屏幕映射</p>
</li>
<li>
<p>Win + Shift + S 屏幕自由截屏。某些同学，再也不用为了截屏而打开QQ、微信、snapshot之类的软件了。十分实用</p>
</li>
</ul>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-15/%E6%95%88%E7%8E%87%E7%8C%9B%E5%85%BD%EF%BC%9AWindows%E5%BF%AB%E6%8D%B7%E9%94%AE/1555311358000.png" alt="" /></p>
<p>常用的Windows快捷键就这几个了，另外再顺便说一下浏览器的快捷键吧。</p>
<h2 id="浏览器快捷键系列"><a class="markdownIt-Anchor" href="#浏览器快捷键系列"></a> 浏览器快捷键系列</h2>
<p>以Chrome 为例</p>
<ul>
<li>
<p>Ctrl+N 打开新窗口</p>
</li>
<li>
<p>Ctrl+T 打开新标签页</p>
</li>
<li>
<p>Ctrl+W 关闭当前页面</p>
</li>
<li>
<p>Ctrl+H 打开历史记录，找回之前看过但是忘记网址的好地方</p>
</li>
<li>
<p>Ctrl+J 显示下载详情页</p>
</li>
<li>
<p>Ctrl+1 ~ 8 切换到标签栏中对应顺序的标签网页中</p>
</li>
<li>
<p>Ctrl+Tab 切换到下一个标签页</p>
</li>
<li>
<p>F5 刷新网页</p>
</li>
<li>
<p>F11 全屏</p>
</li>
<li>
<p>Ctrl + 鼠标滚轮 放大缩小页面</p>
</li>
<li>
<p>PgUp 上一页</p>
</li>
<li>
<p>PgDn 下一页</p>
</li>
</ul>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>实用技巧</category>
      </categories>
      <tags>
        <tag>效率</tag>
        <tag>Windows快捷键</tag>
      </tags>
  </entry>
  <entry>
    <title>批量下载 Pexels 的原分辨率大图</title>
    <url>/archives/a267f10a.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="担心侵权狗命要紧"><a class="markdownIt-Anchor" href="#担心侵权狗命要紧"></a> 担心侵权，狗命要紧</h2>
<p>前段时间的开源中国成功地告诉了我们要注意版权保护意识，诶~就，人家有很多图片upload到网上，咱们也是不能随便用的，万一，我说的是万一，一不小心就侵权了怎么办？</p>
<p>惹不起惹不起~</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-14/%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD_Pexel_%E7%9A%84%E5%8E%9F%E5%88%86%E8%BE%A8%E7%8E%87%E5%A4%A7%E5%9B%BE/1555239516357.png" alt="" /></p>
<p>所以，我文章用到的题图就不能随意找了，对吧。<br />
刚好前面那些文章基本把我珍藏已久的图片给用完了，又不想重复用怎么办嘛？</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-14/%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD_Pexel_%E7%9A%84%E5%8E%9F%E5%88%86%E8%BE%A8%E7%8E%87%E5%A4%A7%E5%9B%BE/1555239677093.png" alt="" /></p>
<h2 id="问问度娘"><a class="markdownIt-Anchor" href="#问问度娘"></a> 问问度娘</h2>
<p>赶紧问一波度娘：度娘度娘，我该怎么找那些无版权的图片呀。<br />
度娘：你可以到Pexel这个网站里面找找哈。</p>
<p>其实，度娘是这样告诉我的…………</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-14/%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD_Pexel_%E7%9A%84%E5%8E%9F%E5%88%86%E8%BE%A8%E7%8E%87%E5%A4%A7%E5%9B%BE/1555239901856.png" alt="" /></p>
<p>其实，我之前有一篇说过怎么去广告的，大家出门左拐看看那篇文章就知道怎么操作了。</p>
<h2 id="打开pexels瞅一眼"><a class="markdownIt-Anchor" href="#打开pexels瞅一眼"></a> 打开Pexels瞅一眼</h2>
<p>OK，那我们就去Pexels这个网站看看效果怎么样吧。</p>
<p>网站链接在这里 <a href="https://www.pexels.com/">Pexels</a></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-14/%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD_Pexels_%E7%9A%84%E5%8E%9F%E5%88%86%E8%BE%A8%E7%8E%87%E5%A4%A7%E5%9B%BE/1555240143588.png" alt="" /></p>
<p>挺舒服的，点击图片，会悬浮出一个窗口，可以选择分辨率下载。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-14/%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD_Pexels_%E7%9A%84%E5%8E%9F%E5%88%86%E8%BE%A8%E7%8E%87%E5%A4%A7%E5%9B%BE/1555240199008.png" alt="" /></p>
<p>点击原图下载，OK。扑街了。。。要验证码，下面有个提示，说：登录网站后，不用验证即可下载。（PS：当时忘记截验证的图了，大家知道有就好哈）<br />
那还在考虑什么哟，注册一个！<br />
一顿操作后，就注册好了。点击下载，果然就再也不提示要验证了。十分舒服呀。</p>
<p>然后……就沉迷在这个网页里面去疯狂找图片，然后下载。。。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-14/%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD_Pexels_%E7%9A%84%E5%8E%9F%E5%88%86%E8%BE%A8%E7%8E%87%E5%A4%A7%E5%9B%BE/1555240747058.png" alt="" /></p>
<p>作为一名21世纪的新青年，这样下去不是办法呀。照这个效率找，今天就没这篇博文了</p>
<h2 id="所以写个爬虫自动帮我下载"><a class="markdownIt-Anchor" href="#所以写个爬虫自动帮我下载"></a> 所以写个爬虫自动帮我下载</h2>
<p>OK，那就动手，写个爬虫，批量下载这个Pexels的原分辨率图像和1920分辨率的图片。</p>
<h3 id="准备思路"><a class="markdownIt-Anchor" href="#准备思路"></a> 准备思路</h3>
<p>我们写代码、写bug前要想好思路再写，要不就是浪费生命啊。</p>
<blockquote>
<p>1、F12大法启动<br />
2、分析网页数据加载方式<br />
3、分析请求规律<br />
4、厘清细节<br />
5、动手写代码</p>
</blockquote>
<ul>
<li>第一步：我们先把F12大法启动，切换到network选项。照常把数据清空了，把缓存禁用。</li>
<li>第二步：将鼠标往下滚动，看到network里面有变化就可以了</li>
<li>第三步：数据太多，但是可以看到很多都是JPEG的加载，我们看到页面并未发生跳转，很容易看出是异步请求加载数据回来的。切换选项卡到 XHR 选项。<br />
容易看到请求链接长这个样子</li>
</ul>
<blockquote>
<p><a href="https://www.pexels.com/?format=js&amp;seed=2019-04-14%2B10%3A59%3A08%2B%2B0000&amp;dark=true&amp;page=3&amp;type=">https://www.pexels.com/?format=js&amp;seed=2019-04-14%2B10%3A59%3A08%2B%2B0000&amp;dark=true&amp;page=3&amp;type=</a><br />
(解码后：)<a href="https://www.pexels.com/?format=js&amp;seed=2019-04-14+10:59:08++0000&amp;dark=true&amp;page=3&amp;type=">https://www.pexels.com/?format=js&amp;seed=2019-04-14+10:59:08++0000&amp;dark=true&amp;page=3&amp;type=</a></p>
</blockquote>
<h3 id="分析返回数据"><a class="markdownIt-Anchor" href="#分析返回数据"></a> 分析返回数据</h3>
<p>看一下返回的数据</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-14/%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD_Pexels_%E7%9A%84%E5%8E%9F%E5%88%86%E8%BE%A8%E7%8E%87%E5%A4%A7%E5%9B%BE/1555241631978.png" alt="" /></p>
<p>居然是js代码……很强，但是我不慌~嘿嘿嘿</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-14/%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD_Pexels_%E7%9A%84%E5%8E%9F%E5%88%86%E8%BE%A8%E7%8E%87%E5%A4%A7%E5%9B%BE/1555241688781.png" alt="" /></p>
<h3 id="美化分析一下下"><a class="markdownIt-Anchor" href="#美化分析一下下"></a> 美化分析一下下</h3>
<p>先将这一坨坨的代码美化一下下。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-14/%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD_Pexels_%E7%9A%84%E5%8E%9F%E5%88%86%E8%BE%A8%E7%8E%87%E5%A4%A7%E5%9B%BE/1555241903395.png" alt="" /></p>
<p>仔细观察一下数据。就发现了很多photo和https的字样。<br />
那，十有八九是将图片的数据返回后，js将内容插进去的。<br />
所以，我们先放一下，看一下图片的链接长什么样？下载图片的链接又长什么样。</p>
<p>点击下载两张图片，复制好下载链接到 Sublime 里面去，观察一下。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-14/%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD_Pexels_%E7%9A%84%E5%8E%9F%E5%88%86%E8%BE%A8%E7%8E%87%E5%A4%A7%E5%9B%BE/1555242219579.png" alt="" /></p>
<h3 id="找到规律"><a class="markdownIt-Anchor" href="#找到规律"></a> 找到规律</h3>
<p>发现关键的地方就那个<strong>数字</strong>，还有<strong>dl对应的参数</strong>，后面的w和h就是图像的<strong>宽高</strong>了。</p>
<p>我们观察好下载链接的区别后，就look一下刚才的js文件里面有没这种规律。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-14/%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD_Pexels_%E7%9A%84%E5%8E%9F%E5%88%86%E8%BE%A8%E7%8E%87%E5%A4%A7%E5%9B%BE/1555242828340.png" alt="" /></p>
<p>emmm，符合我们的预期。那几个关键参数都有了，除了那个图像分辨率的参数没有。</p>
<p>用Python请求刚才的链接回来，然后，再用正则匹配一下所有的链接。就匹配好这个http就好了。</p>
<p>通过数据请求回来，看到了很多无关的链接。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-14/%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD_Pexels_%E7%9A%84%E5%8E%9F%E5%88%86%E8%BE%A8%E7%8E%87%E5%A4%A7%E5%9B%BE/1555243146074.png" alt="" /></p>
<p>这个时候，我们再过滤掉我要的URL就好了。</p>
<p>这个时候，我们已经可以下载图像了。但是，很明显，这样下载下载的图片分辨率不是我们要的。<br />
说好的高清大图，原分辨率大图呢?<br />
所以，我就必须找到分辨率参数在哪里，要拿到它。因为每个图片的分辨率都是变化的，没有统一的分辨率，除了1920x1080这个是通用的。原图的都是随相机变化而变化的。</p>
<h3 id="再分析一下解决原图分辨率问题"><a class="markdownIt-Anchor" href="#再分析一下解决原图分辨率问题"></a> 再分析一下，解决原图分辨率问题</h3>
<p>我们回到相片详细页面，检查元素看看卡，原图分辨率在那个位置。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-14/%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD_Pexels_%E7%9A%84%E5%8E%9F%E5%88%86%E8%BE%A8%E7%8E%87%E5%A4%A7%E5%9B%BE/1555243262376.png" alt="" /></p>
<p>再去请求一下页面，看返回数据，有没包含这个分辨率。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-14/%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD_Pexels_%E7%9A%84%E5%8E%9F%E5%88%86%E8%BE%A8%E7%8E%87%E5%A4%A7%E5%9B%BE/1555243328703.png" alt="" /></p>
<p>分辨率是直接返回回来的，那就好办了。用BeautifulSoup解析一下就好了。</p>
<p>这个时候，我们还没有拿到 类似这样的链接 <a href="https://www.pexels.com/photo/blurred-background-bokeh-bubbles-close-up-2068411/">https://www.pexels.com/photo/blurred-background-bokeh-bubbles-close-up-2068411/</a><br />
怎么办？这个时候，经验直觉告诉我，我把链接改成https://www.pexels.com/photo/2068411/<br />
他也是会照样给我返回到这个图片的详细页面的。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-14/%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD_Pexels_%E7%9A%84%E5%8E%9F%E5%88%86%E8%BE%A8%E7%8E%87%E5%A4%A7%E5%9B%BE/1555243594874.png" alt="" /></p>
<p>测试了一下，的确是返回到这个页面的。美滋滋呀美猪猪。</p>
<h2 id="分析结束确定流程以及参数"><a class="markdownIt-Anchor" href="#分析结束确定流程以及参数"></a> 分析结束，确定流程以及参数</h2>
<p>这个时候，我已经拿到我们要爬的所有需要的参数信息以及流程了。</p>
<blockquote>
<p>1、从请求页面入手，拿到js里面包含的http链接<br />
2、过滤链接后，截取URL，去请求图片详细页面<br />
3、用BeautifulSoup解析拿到原图分辨率<br />
4、下载</p>
</blockquote>
<p>由于我们前面有提到注册后，不会让你点击验证码，所以，这次爬虫，我们要用到cookie来做。</p>
<h2 id="简单介绍cookie"><a class="markdownIt-Anchor" href="#简单介绍cookie"></a> 简单介绍Cookie</h2>
<p>Cookie是什么？</p>
<blockquote>
<p>Cookie总是保存在客户端中，按在客户端中的存储位置，可分为内存Cookie和硬盘Cookie。可分为非持久Cookie和持久Cookie。<br />
因为HTTP协议是无状态的，即服务器不知道用户上一次做了什么，这严重阻碍了交互式Web应用程序的实现。在典型的网上购物场景中，用户浏览了几个页面，买了一盒饼干和两瓶饮料。最后结帐时，由于HTTP的无状态性，不通过额外的手段，服务器并不知道用户到底买了什么，所以Cookie就是用来绕开HTTP的无状态性的“额外手段”之一。服务器可以设置或读取Cookies中包含信息，借此维护用户跟服务器会话中的状态。</p>
</blockquote>
<h2 id="先给大家看看效果"><a class="markdownIt-Anchor" href="#先给大家看看效果"></a> 先给大家看看效果</h2>
<p>下面给大家看一下效果：</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-14/%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD_Pexels_%E7%9A%84%E5%8E%9F%E5%88%86%E8%BE%A8%E7%8E%87%E5%A4%A7%E5%9B%BE/1555244009850.png" alt="" /></p>
<p>这个文件夹里面有下载的所有图片，每张图片有两个分辨率，1920x1080的，原分辨率的。通过名字_xxxx这个xxxx来快速标识分辨率为多少。</p>
<p>代码有两份，一份是单线程采集、下载的。<br />
另一份是多进程采集下载的，单个进程采集一个页面后的所有图片后，再多个进程去下载，可以有效提高下载效率。</p>
<h2 id="代码呈上"><a class="markdownIt-Anchor" href="#代码呈上"></a> 代码呈上</h2>
<p>在这里，我贴出单进程的那份代码吧。供有兴趣的同学现场观看。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 4/14/2019 12:43</span></span><br><span class="line"><span class="comment"># @Author  : MARX·CBR</span></span><br><span class="line"><span class="comment"># @File    : __init__.py.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> lxml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadPexelSpider</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;cookie&#x27;</span>: <span class="string">&#x27;换成自己的：__cfduid=d6abd7c099adcbbee835df61de3e6ef3c1555167983; locale=en-US; &#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        self.download_image_url = []</span><br><span class="line">        self.raw_url = []</span><br><span class="line">        self.session = requests.session()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">change_page</span>(<span class="params">self, page</span>):</span></span><br><span class="line">        ou = <span class="string">&#x27;https://www.pexels.com/?format=js&amp;seed=2019-04-14%2004%3A22%3A06%20%2B0000&amp;dark=true&amp;page=&#123;&#125;&amp;type=&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">            page)</span><br><span class="line">        r = self.session.get(</span><br><span class="line">            ou,</span><br><span class="line">            headers=self.headers)</span><br><span class="line">        print(ou)</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        data = r.text</span><br><span class="line">        pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&amp;+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+&#x27;</span>)  <span class="comment"># 匹配模式</span></span><br><span class="line">        url = re.findall(pattern, data)</span><br><span class="line">        <span class="comment"># print(url)</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> url:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;dl&#x27;</span> <span class="keyword">in</span> i:</span><br><span class="line">                <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> self.raw_url:</span><br><span class="line">                    <span class="comment"># print(i)</span></span><br><span class="line">                    self.raw_url.append(i)</span><br><span class="line">        print(self.raw_url)</span><br><span class="line">        <span class="keyword">for</span> g <span class="keyword">in</span> self.raw_url:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                self.get_download(g)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                print(<span class="string">&#x27;error&#x27;</span>, g)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_download</span>(<span class="params">self, url</span>):</span></span><br><span class="line">        <span class="comment"># tt=&#x27;https://images.pexels.com/photos/2116222/pexels-photo-2116222.jpeg?cs=srgb&amp;amp;dl=chair-furniture-indoors-2116222.jpg&amp;amp;fm=jpg&#x27;</span></span><br><span class="line">        tt = url</span><br><span class="line">        newtt = tt[:<span class="number">41</span>:].replace(<span class="string">&quot;images&quot;</span>, <span class="string">&#x27;www&#x27;</span>).replace(<span class="string">&#x27;photos&#x27;</span>, <span class="string">&#x27;photo&#x27;</span>)</span><br><span class="line">        print(newtt)</span><br><span class="line">        r = self.session.get(newtt, headers=self.headers)</span><br><span class="line">        <span class="comment"># print(r.text)</span></span><br><span class="line">        soup = BeautifulSoup(r.text, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> soup.findAll(<span class="string">&#x27;input&#x27;</span>):</span><br><span class="line">            <span class="keyword">if</span> k.get(<span class="string">&#x27;name&#x27;</span>) == <span class="string">&#x27;download-size&#x27;</span>:</span><br><span class="line">                size = k.get(<span class="string">&#x27;value&#x27;</span>)</span><br><span class="line">                size = size.split(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">int</span>(size[<span class="number">0</span>]) &gt; <span class="number">1920</span>:</span><br><span class="line">                    structure = <span class="string">&quot;?dl&amp;fit=crop&amp;crop=entropy&amp;w=&#123;&#125;&amp;h=&#123;&#125;&quot;</span>.<span class="built_in">format</span>(size[<span class="number">0</span>], size[<span class="number">1</span>])</span><br><span class="line">                    print(<span class="string">&#x27;查找成功&#x27;</span>)</span><br><span class="line">                    self.download_image_url.append(tt + structure)</span><br><span class="line">                    self.single_file_download(tt + structure)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">single_file_download</span>(<span class="params">self, url</span>):</span></span><br><span class="line">        i = url.replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        print(i)</span><br><span class="line">        name = i[<span class="number">33</span>:<span class="number">39</span>:]</span><br><span class="line">        w = i[-<span class="number">11</span>:-<span class="number">7</span>:]</span><br><span class="line">        print(<span class="string">&quot;准备下载&quot;</span>, i)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./images/&#123;&#125;_&#123;&#125;.png&#x27;</span>.<span class="built_in">format</span>(name, w), <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            raw = self.session.get(i, headers=self.headers)</span><br><span class="line">            content = raw.content</span><br><span class="line">            f.write(content)</span><br><span class="line">        i = i[:-<span class="number">11</span>:] + <span class="string">&quot;1920&amp;h=1080&quot;</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./images/&#123;&#125;_1920.png&#x27;</span>.<span class="built_in">format</span>(name, w), <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            raw = self.session.get(i, headers=self.headers)</span><br><span class="line">            content = raw.content</span><br><span class="line">            f.write(content)</span><br><span class="line"></span><br><span class="line">        print(<span class="string">&quot;&#123;&#125;下载完毕&quot;</span>.<span class="built_in">format</span>(name))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self, s, e</span>):</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(s, e + <span class="number">1</span>):</span><br><span class="line">            print(self.change_page(i))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    DownloadPexelSpider().run(<span class="number">10</span>, <span class="number">20</span>)</span><br></pre></td></tr></table></figure>
<p>代码该怎么写，上面已经将思路都给过一遍了。具体写起来就很快了，语法都是基本语法，也没有什么坑。有兴趣的同学可以试着自己去写一遍，然后再看一下我怎么写的。</p>
<hr />
<p>本篇文章大概就到这里了。一篇文章下来，我后台已经下载了500+张好看的图片了。大家可以到我GitHub里面fork代码下来看看，快速下载大量好看的图片，你不心动吗？<br />
代码已经同步上传到GitHub，包括一个单进程的、一个多进程的代码。<br />
项目地址在这里：<a href="https://github.com/97CBR/PexelsSpider">PexelsSpider</a></p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>看到首张黑洞照片的我们，见证历史的我们</title>
    <url>/archives/8aee285e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>黑洞这次词第一次出现在我是世界里是初中的事情了。那时的我只能靠着书上描述的特征去想象这个神奇的宇宙之洞。但是那时的我一直都没想到黑洞是球体的。</p>
<p>高中时候虽然通过看一些其它的课外书，知道了“事件视界”、“史瓦西半径”、“吸积盘”、“引力场可弯曲光线”，但是还是以为黑洞是个类似洗手盆那样的锥形盘体，但是诺兰导演的星际穿越的黑洞又刷新了我对黑洞的想象，黑洞是个球体！</p>
<p>昨晚看到通过毫米波拍出来的黑洞真容时，还是感到很震撼的。这就是那个真见不到底的黑洞啊。百年前爱因斯坦预测的结果在后人的努力下真正揭示出来时，你会不由自主地去<strong>感叹科学的伟大</strong>。</p>
<blockquote>
<p>引用自维基百科：黑洞词条<br />
黑洞（英语：black hole）是根据广义相对论所推论、在宇宙空间中存在的一种质量相当大的天体和星体（并非是一般认知的“洞”概念）。黑洞是由质量足够大的恒星在核聚变反应的燃料耗尽后，发生引力坍缩而形成。黑洞的质量是如此之大，它产生的引力场是如此之强，以致于大量可测物质和辐射都无法逃逸，就连传播速度极快的光子也逃逸不出来。由于类似热力学上完全不反射光线的黑体，故名黑洞。[1]在黑洞的周围，是一个无法侦测的事件视界，标志着无法返回的临界点[2]，而在黑洞中心有一个密度趋近于无限的奇点。</p>
</blockquote>
]]></content>
      <categories>
        <category>思考&amp;感悟</category>
      </categories>
      <tags>
        <tag>小日志</tag>
        <tag>思考&amp;感悟</tag>
      </tags>
  </entry>
  <entry>
    <title>软件更新服务之客户端更新</title>
    <url>/archives/3a447dec.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>在现在的软件开发和使用中，软件的更新是很关键的一环。通过不停的更新软件，迭代，给用户带来更好的体验和更多的功能以及修复用户反馈的bug。我们在更新的软件的时候，如果每次都要用户从新安装软件的话，想必体验也不会很好，也很麻烦，浪费不必要的资源。<br />
那么今天就继续给大家说要一下软件更新服务里面的客户度端更新 。有些后面关注的同学没看到前面写的那篇服务端搭建的文章的话，可以待会出门左拐看一下。</p>
<h2 id="搭建起界面"><a class="markdownIt-Anchor" href="#搭建起界面"></a> 搭建起界面</h2>
<p>在这次客户端编写过程当中，为了给大家可以看到更加直观的效果就简单做了个界面，使用到了以下技术：</p>
<blockquote>
<ul>
<li>PyQt5</li>
<li>Python3</li>
<li>python序列化</li>
<li>urllib下载文件</li>
</ul>
</blockquote>
<p>大家先在pycharm中，把pyqt5给装上，pip install PyQt5，也可以在设置的里面的project interpreter 里面下载安装。<br />
接着，就配置好外部工具，QtDesigner以及PyUIC这两个外部工具。<br />
由于这两个工具的配置比较简单，我就不作说明了，大家可以自行百度一下，随意参考一种都可以顺利配置好这两个外部工具的。</p>
<h3 id="打开designer绘制"><a class="markdownIt-Anchor" href="#打开designer绘制"></a> 打开designer绘制</h3>
<p>接着，打开designer来对界面进行绘制设计。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-10/%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E4%B9%8B%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%9B%B4%E6%96%B0/1554884974697.png" alt="" /></p>
<p>大概就这样就可以了，一个标题、一个文本框、两个按钮就足够显示了。<br />
虽然长得丑了一点，但是我们这次文章的关键不是界面的美化，所以就不作其他处理了。</p>
<h3 id="pyuic-生成代码"><a class="markdownIt-Anchor" href="#pyuic-生成代码"></a> pyuic 生成代码</h3>
<p>保存好，再到pycharm里面对ui文件运行一下PYUIC就OK</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-10/%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E4%B9%8B%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%9B%B4%E6%96%B0/1554885128890.png" alt="" /></p>
<p>这个时候，界面代码已经由设计图转成Python代码了，可以看到它生成了一个类，但是还跑不动，因为没有引用到它。所以，我们先放它到一边。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-10/%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E4%B9%8B%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%9B%B4%E6%96%B0/1554885378134.png" alt="" /></p>
<h2 id="创建新文件和类继承生成的界面"><a class="markdownIt-Anchor" href="#创建新文件和类继承生成的界面"></a> 创建新文件和类继承生成的界面</h2>
<p>接着，我们就重新创建好一个py文件，导入我们预期就要用到的库。</p>
<blockquote>
<ul>
<li>hashlib 计算MD5用</li>
<li>sys</li>
<li>pickle 计算序列化</li>
<li>urllib 下载文件</li>
<li>urllib3</li>
<li>os 处理文件 和目录</li>
</ul>
</blockquote>
<p>这几个库导进来后，就开始新建一个类，继承刚才生成的那个界面类。写法如下</p>
<h3 id="继承参考代码"><a class="markdownIt-Anchor" href="#继承参考代码"></a> 继承参考代码</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainWindow</span>(<span class="params">QtWidgets.QMainWindow, Ui_MainWindow</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, parent=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="built_in">super</span>(MainWindow, self).__init__(parent)</span><br><span class="line">        self.setupUi(self)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = QtWidgets.QApplication(sys.argv)</span><br><span class="line">    mainWindow = MainWindow()</span><br><span class="line">    mainWindow.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<div class="note info flat"><p>这个时候，运行文件就可以显示出界面了。而且这样将界面和实际操作的代码分隔开来可以避免重新UIC界面时，代码会丢失，而导致要重写的问题。</p>
</div>
<h2 id="着手准备实现-更新功能"><a class="markdownIt-Anchor" href="#着手准备实现-更新功能"></a> 着手准备实现 更新功能</h2>
<p>OK,界面出来后，就要实现功能了。更新，更新怎么做？<br />
上一篇更新服务文章已经提供了更新说明和下载服务了，所以，我们这次就利用好这些接口。<br />
我们又新建一个类，专门用来处理更新文件的，所以就简单的叫UpdateFiles吧。</p>
<p>在这里再过一次流程：</p>
<blockquote>
<ul>
<li>从服务器上面拿到清单文件</li>
<li>反序列清单文件</li>
<li>比较里面的数据，如果文件存在则计算MD5，相同就跳过，不相同就准备下载</li>
<li>如果文件不存在，则不用计算MD5了，直接准备下载</li>
</ul>
</blockquote>
<p>所以，就需要3个函数，下<strong>载文件函数、计算MD5值函数、检查更新函数</strong><br />
按照这三个需求以及之前文章服务端的接口，我们可以很快就完成代码的编写。<br />
在UpdateFiles这个类中完成这几个功能的开发后，便可以很方便的完成更新文件的服务功能。<br />
由于已经整理成一个类，所以，后面如果各位希望可以在自己代码中用到这样子的更新服务的话吗，就可以直接将这个类copy过去，改一些东西就可以用了。</p>
<h2 id="说说踩的坑"><a class="markdownIt-Anchor" href="#说说踩的坑"></a> 说说踩的坑</h2>
<p>这里说一下写代码踩的坑吧<br />
1、因为用的是urllib去下载的文件，多级目录下，文件不存在的时候，并不会在目标目录自动新建目录。所以，在下载的时候，需要对路径进行处理，筛选出目标目录，mkdir创建一下目录后，再下载目标文件。具体实现可以看downloadFiles函数，代码很简单，理解起来肯定没问题。</p>
<h2 id="实现效果"><a class="markdownIt-Anchor" href="#实现效果"></a> 实现效果</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-10/%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E4%B9%8B%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%9B%B4%E6%96%B0/1554899846798.png" alt="" /></p>
<p>点击检查更新会将需要更新的文件列在上面<br />
点击下载便会自动下载文件了。而且有个简单的进度条可以看到进度。</p>
<h2 id="代码呈上"><a class="markdownIt-Anchor" href="#代码呈上"></a> 代码呈上</h2>
<p>代码我就直接贴出来了。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 4/1/2019 19:36</span></span><br><span class="line"><span class="comment"># @Author  : MARX·CBR</span></span><br><span class="line"><span class="comment"># @File    : updateClient.py</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">from</span> PyQt5 <span class="keyword">import</span> QtWidgets</span><br><span class="line"><span class="keyword">from</span> urllib3 <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> updateServer.UClient.sample <span class="keyword">import</span> Ui_MainWindow</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainWindow</span>(<span class="params">QtWidgets.QMainWindow, Ui_MainWindow</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, parent=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="built_in">super</span>(MainWindow, self).__init__(parent)</span><br><span class="line">        self.setupUi(self)</span><br><span class="line">        self.pushButton.clicked.connect(self.showUpdate)</span><br><span class="line">        self.pushButton_2.clicked.connect(self.updateNow)</span><br><span class="line">        self.updateList = []</span><br><span class="line">        self.updateServer = UpdateFiles()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">showUpdate</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.textBrowser.clear()</span><br><span class="line">        self.updateList = self.updateServer.check_update()</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> self.updateList:</span><br><span class="line">            print(j)</span><br><span class="line">            self.textBrowser.append(j)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">updateNow</span>(<span class="params">self</span>):</span></span><br><span class="line">        all_file_number = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> self.updateList:</span><br><span class="line">            self.updateServer.downloadFiles(j)</span><br><span class="line">            all_file_number += <span class="number">1</span></span><br><span class="line">            vau = <span class="built_in">int</span>((all_file_number * <span class="number">100</span>) / <span class="built_in">len</span>(self.updateList))</span><br><span class="line">            self.progressBar.setValue(vau)</span><br><span class="line">            self.repaint()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UpdateFiles</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.server = <span class="string">&#x27;47.101.195.58&#x27;</span></span><br><span class="line">        self.port = <span class="string">&#x27;1213&#x27;</span></span><br><span class="line">        self.directory = os.getcwd()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">downloadFiles</span>(<span class="params">self, key</span>):</span></span><br><span class="line">        checkurl = <span class="string">&#x27;http://&#x27;</span> + self.server + <span class="string">&#x27;:&#x27;</span> + self.port</span><br><span class="line">        file_dir = self.directory + <span class="string">&#x27;\\&#x27;</span> + key</span><br><span class="line">        file_dir = file_dir.replace(<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> os.path.exists(file_dir):</span><br><span class="line">            os.remove(file_dir)</span><br><span class="line">            request.urlretrieve(checkurl + <span class="string">&#x27;/&#x27;</span> + key, file_dir)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            newpath = <span class="string">&#x27;\\&#x27;</span>.join(file_dir.split(<span class="string">&#x27;\\&#x27;</span>)[:-<span class="number">1</span>:])</span><br><span class="line">            print(newpath)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                os.mkdir(newpath)</span><br><span class="line">                request.urlretrieve(checkurl + <span class="string">&#x27;/&#x27;</span> + key, file_dir)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                request.urlretrieve(checkurl + <span class="string">&#x27;/&#x27;</span> + key, file_dir)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Getfile_md5</span>(<span class="params">self, filename</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(filename):</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        myHash = hashlib.md5()</span><br><span class="line">        f = <span class="built_in">open</span>(filename, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            b = f.read(<span class="number">8096</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> b:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            myHash.update(b)</span><br><span class="line">        f.close()</span><br><span class="line">        <span class="keyword">return</span> myHash.hexdigest()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check_update</span>(<span class="params">self</span>):</span></span><br><span class="line">        data = &#123;&#125;</span><br><span class="line">        updateList = []</span><br><span class="line">        checkurl = <span class="string">&#x27;http://&#x27;</span> + self.server + <span class="string">&#x27;:&#x27;</span> + self.port</span><br><span class="line">        request.urlretrieve(checkurl + <span class="string">&#x27;/.listFile&#x27;</span>, <span class="string">&quot;.listFile&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;.listFile&quot;</span>, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            data = pickle.load(f)</span><br><span class="line">        print(data)</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> data:</span><br><span class="line">            new_md5 = data[key]</span><br><span class="line">            file_dir = self.directory + <span class="string">&#x27;\\&#x27;</span> + key</span><br><span class="line">            <span class="keyword">if</span> os.path.exists(file_dir):</span><br><span class="line">                oldmd5 = self.Getfile_md5(file_dir)</span><br><span class="line">                <span class="keyword">if</span> oldmd5 != new_md5:</span><br><span class="line">                    print(new_md5, <span class="string">&quot;准备下载&quot;</span>)</span><br><span class="line">                    updateList.append(key)</span><br><span class="line">                <span class="comment"># print(new_md5)</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                updateList.append(key)</span><br><span class="line">                print(<span class="string">&#x27;准备下载&#x27;</span>, file_dir)</span><br><span class="line">        <span class="keyword">return</span> updateList</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = QtWidgets.QApplication(sys.argv)</span><br><span class="line">    mainWindow = MainWindow()</span><br><span class="line">    mainWindow.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="结语"><a class="markdownIt-Anchor" href="#结语"></a> 结语</h2>
<p>好了，就到这里吧，这篇是综合上一篇服务端搭建写的。<br />
打算将这个软件更新服务写几篇出来的，这里是第二篇，大概说了一下客户端该怎么处理。<br />
后面打算给大家讲一下热更新，如何实现无须重启便完成软件的更新这样子。</p>
<p>之前那篇服务端搭建的代码存在一些bug，我已经更新了。然后连同本次代码，将整个服务端以及客户端一起提交到GitHub中了。欢迎大家到GitHub中fork使用，如果能给个star就 最好啦。<br />
<a href="https://github.com/97CBR/SoftwareUpdateServer">点击这里访问GitHub项目 SoftwareUpdateServer</a></p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>有趣的东西</tag>
        <tag>Python</tag>
        <tag>增量更新</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓逆向的基本操作</title>
    <url>/archives/9ae4da43.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="安装-apk-killer"><a class="markdownIt-Anchor" href="#安装-apk-killer"></a> 安装 Apk killer</h2>
<p>安装apk killer ，如果没有安装jdk的话，会有以下提示</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-3/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/1554297434966.png" alt="MarxCBR的小屋" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-3/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/1554298724475.png" alt="MarxCBR的小屋" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-3/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/1554298945310.png" alt="MarxCBR的小屋" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-3/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/1554299744483.png" alt="MarxCBR的小屋" /></p>
<p>按照提示装好后，便基本没他什么事了。</p>
<h2 id="给软件查一下壳"><a class="markdownIt-Anchor" href="#给软件查一下壳"></a> 给软件查一下壳</h2>
<p>然后用手机发送一个软件到电脑上<br />
查一下壳<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-3/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/1554300936597.png" alt="MarxCBR的小屋" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-3/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/1554300589007.png" alt="MarxCBR的小屋" /></p>
<p>由于已经按照了那个APK-DB，所以能看到软件图标。分辨发送过来的文件是哪个软件比较快。</p>
<h2 id="进行自动逆向"><a class="markdownIt-Anchor" href="#进行自动逆向"></a> 进行自动逆向</h2>
<p>接着拖apk到apk killer里面，可以看到右下角的日志在疯狂的跑</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-3/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/1554300822300.png" alt="MarxCBR的小屋" /></p>
<p>在最后面的结果那个可以看到apk源码反编译失败</p>
<h3 id="修改默认的apktool"><a class="markdownIt-Anchor" href="#修改默认的apktool"></a> 修改默认的apktool</h3>
<p>在Android栏中的apktool 管理器中添加一下工具</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-3/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/1554301531915.png" alt="MarxCBR的小屋" /><br />
添加好后，在下面 默认apktool版本哪里，选择自己刚才添加的那个。<br />
然后删除掉刚才反编译源码失败的那个工程</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-3/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/1554301623455.png" alt="" /></p>
<h3 id="重新进行逆向"><a class="markdownIt-Anchor" href="#重新进行逆向"></a> 重新进行逆向</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-3/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/1554301672071.png" alt="MarxCBR的小屋" /></p>
<p>这个时候，界面大概长这个样子</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-3/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/1554301819795.png" alt="MarxCBR的小屋" /></p>
<h2 id="准备逆向分析"><a class="markdownIt-Anchor" href="#准备逆向分析"></a> 准备逆向分析</h2>
<p>上面的图片一共有七个点</p>
<blockquote>
<ol>
<li>应用名称</li>
<li>包名</li>
<li>入口点</li>
<li>活动</li>
<li>接收器</li>
<li>服务</li>
<li>应用权限</li>
</ol>
</blockquote>
<p>我们本篇文章不展开说明上面对应的每一个点，东西说太多的话，影响主线内容哈。</p>
<p>我们现在应该关注的是“3-入口点“。那个是应用启动后立即运行的位置。点击蓝色的字就会自动跳转到对应的文件以及方法里面了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-3/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/1554301998210.png" alt="MarxCBR的小屋" /></p>
<p>一头雾水吧，相信很多同学都没有接触过smali代码。<br />
没事，我们跳转到<strong>OnCreate</strong>方法去。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-3/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/1554302070149.png" alt="MarxCBR的小屋" /></p>
<p>这个就是OnCreate方法了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-3/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/1554302091171.png" alt="MarxCBR的小屋" /></p>
<p>还是看不懂怎么办？</p>
<h2 id="尝试获取逆向出来的java伪代码"><a class="markdownIt-Anchor" href="#尝试获取逆向出来的java伪代码"></a> 尝试获取逆向出来的Java伪代码</h2>
<p>没事，咱们可以看看他们java代码大概长啥样，好吧。要不我们刚才为了反编译源码折腾这么久是为了啥呢。<br />
点击上面的“咖啡“，你就会进入”软件的妙妙屋“了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-3/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/1554302265596.png" alt="MarxCBR的小屋" /></p>
<p>跳转到那个页面后，搜索OnCreate，就会找到那个函数了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-3/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/1554302438166.png" alt="MarxCBR的小屋" /></p>
<p>上面就是入口点的基本操作了。</p>
<h2 id="修改应用图标以及名称"><a class="markdownIt-Anchor" href="#修改应用图标以及名称"></a> 修改应用图标以及名称</h2>
<p>回到主页面。打开“工程管理器”选项。<br />
在下面双击 AndroidManifest.xml这个清单文件。<br />
何谓清单文件？以下是解释</p>
<blockquote>
<p>每个Android应用的根目录中都必须包含一个 AndroidManifest.xml 文件（且文件名精确无误）。 清单文件向 Android 系统提供应用的必要信息，系统必须具有这些信息方可运行应用的任何代码。<br />
此外，清单文件还可执行以下操作：<br />
为应用的 Java 软件包命名。软件包名称充当应用的唯一标识符。<br />
描述应用的各个组件，包括构成应用的 Activity、服务、广播接收器和内容提供程序。它还为实现每个组件的类命名并发布其功能，例如它们可以处理的 Intent 消息。这些声明向 Android 系统告知有关组件以及可以启动这些组件的条件的信息。<br />
确定托管应用组件的进程。<br />
声明应用必须具备哪些权限才能访问 API 中受保护的部分并与其他应用交互。还声明其他应用与该应用组件交互所需具备的权限<br />
列出 Instrumentation 类，这些类可在应用运行时提供分析和其他信息。这些声明只会在应用处于开发阶段时出现在清单中，在应用发布之前将移除。<br />
声明应用所需的最低 Android API 级别<br />
列出应用必须链接到的库</p>
</blockquote>
<p>可以清楚看到在application这个标签中。对图标和应用名称有明确定义指向</p>
<p>这个时候，我们直接去res这个目录里面去找对应的资源。</p>
<h3 id="咱们就先改个名字"><a class="markdownIt-Anchor" href="#咱们就先改个名字"></a> 咱们就先改个名字</h3>
<p>进入到/res/values/strings.xml中，找到这个app_name。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-28/BogImages/1585377591504.png" alt="MarxCBR的小屋" /></p>
<p>但是名字不是叫画板呀。<br />
因为画板是中文的软件叫法，painter是英文的叫法。所以，这个时候，我们可以去到中文对应的资源文件夹中。/res/values-zh-rCN/strings.xml中。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-28/BogImages/1585377636020.png" alt="MarxCBR的小屋" /></p>
<p>在这里，我将软件名字换成“手绘板”。<br />
然后在顶栏选中Android，然后点击编译。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-28/BogImages/1585377682477.png" alt="MarxCBR的小屋" /></p>
<p>接着用数据线连上手机。进入“开发者模式”。<br />
什么？开发者模式找不到？<br />
莫慌，让我来告诉你这个“开发者模式”在哪里吧。<br />
鉴于现在应该没谁还用Android 2.x的系统了。我就直接说大部分通用的打开开发者模式的办法。</p>
<blockquote>
<p>首先、你得进入手机的设置。<br />
然后、点击“关于手机”。<br />
再然后、找到版本号。<br />
再再然后、连续点击多次版本号，一般点个四五次就会提示你进入开发者模式了。<br />
还没完，你接着一般要到其他设置里面，找到开发者选项。<br />
随后点击进入后，打开“USB调试”<br />
然后再确认一下调试授权就可以跟你的主机搭上关系了。</p>
</blockquote>
<p>图示如下</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-28/BogImages/1585377721886.png" alt="MarxCBR的小屋" /></p>
<p>OK,一阵折腾后，开发者模式终于搞定了。<br />
然后回到顶栏，在apk安装管理器右边有个设备，点刷新再看一下下拉框。可以看到一串字母加数字的东西了。</p>
<p>这个时候，点击安装，这个时候就会在手机上面将刚才的那个更改编译好的软件安装到手机。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-28/BogImages/1585377744438.png" alt="MarxCBR的小屋" /></p>
<p>如果手机是还没安装过这个软件的话，直接这样安装是不会有问题的。但是如果已经安装过了的同学，再点安装的时候就会提示冲突。因为重新编译的版本使用是自己的签名文件。导致了软件签名冲突。</p>
<p>这个时候点击卸载，将软件卸载掉就好了。然后再安装就不会出问题了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-28/BogImages/1585377765916.png" alt="MarxCBR的小屋" /></p>
<p>这个时候已经可以看到名字已经被改过来了。</p>
<h3 id="咱们再改个图标"><a class="markdownIt-Anchor" href="#咱们再改个图标"></a> 咱们再改个图标</h3>
<p>前面已经找到了icon的所在地。我们就去drawable文件夹去找到对应的icon图片给替换过来。因为Android系统不同版本支持的图片情况不一样（这样解释好像不够准确）。所以会有很多drawable文件夹，咱们一个个去看。找到符合图片内容就换掉就好了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-28/BogImages/1585377814876.png" alt="MarxCBR的小屋" /></p>
<p>换一下图标，一般用png格式</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-28/BogImages/1585377828061.png" alt="MarxCBR的小屋" /></p>
<p>然后从新编译，打包就可以看到图标已经被替换过来了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-28/BogImages/1585377840377.png" alt="MarxCBR的小屋" /></p>
<p>安装后，打开可以看到软件依旧可以正常使用。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-28/BogImages/1585377856645.png" alt="MarxCBR的小屋" /></p>
<p>请忽视我的灵魂画作…………<br />
哈哈哈<br />
好了，就先这样吧</p>
<div class="note danger flat"><p>大家学习后，切勿使用到非法地方，本期内容仅供大家学习交流.</p>
</div>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>信息安全</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>逆向</tag>
        <tag>信息安全</tag>
      </tags>
  </entry>
  <entry>
    <title>是谁让我的线上测试服务器突然变成游戏私服</title>
    <url>/archives/ef38daca.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="测试服务器又挂了~"><a class="markdownIt-Anchor" href="#测试服务器又挂了~"></a> 测试服务器又挂了~</h2>
<p>前几天，老板微信找到我，上来就开门见山的告诉了我出了什么问题，大概意思就是：我们测试服务器又挂了，你怎么管理的服务器，测试服务器经常挂掉很影响公司形象的……</p>
<p>PS:求老板看到这段话别怼我 o(╥﹏╥)o</p>
<p>但是鉴于前几天时间不多，便简单的处理了一下服务器的网络服务便下线了。因为上次服务挂掉的时候是因为服务器的测试网站被删了，所以便知道了服务器已经沦陷，被人家随意蹂躏了。花了一些时间处理好测试网站后就下线了，没有花时间分析入侵者以及他在咱们服务器里面干了什么。<br />
时间来到昨天，腾出了一个晚上。想着公司的测试服务器是时候要好好地排查一下安全问题以及分析一下入侵者的行径和他在里面干了什么了。</p>
<h2 id="远程过去"><a class="markdownIt-Anchor" href="#远程过去"></a> 远程过去</h2>
<p>话不多说，马上登录过去看看。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062334523.png" alt="img" /></p>
<p>在登录页面，可以看到左下角那几个猖獗的账号，入侵了别人服务器，不好好隐藏一下自己，还公然show出自己的用户名，实在太流批了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062334256.webp" alt="img" /></p>
<h2 id="使用d盾扫描看看"><a class="markdownIt-Anchor" href="#使用d盾扫描看看"></a> 使用D盾扫描看看</h2>
<p>进入主机后，下了个D盾简单的扫了一下用户目录。果然有点东西的,在root$这个账号下有菜刀用的马。估计是传了一个小马进来然后再菜刀上大马搞的服务器。然后再另外一个用户下面呈现独占模式，所以，应该他这个账号还没注销。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062334387.png" alt="img" /></p>
<p>看看进程列表果然有很多这个用户下启动的软件，包括了他的游戏私服以及聊天机器人在内的软件进程。<br />
接着到终端下面看一下什么时候连进去的。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062334666.png" alt="img" /></p>
<p>居然昨天下午5点还连进去过。太叼了吧。然后我便到控制台创建一个快照，以备后续取证的时候需要证据的时候用到，然后我就把它账号给注销了。顺带把他的进程也给清掉了。</p>
<h2 id="找出他是谁"><a class="markdownIt-Anchor" href="#找出他是谁"></a> 找出他是谁</h2>
<p>在进程里面找到了他机器人是由“酷Q air”提供服务的，进入他的聊天机器人文件夹里面，打开一下他的机器人。看到了一个账号，数了一下，10位数，大概猜测是QQ号。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062334222.webp" alt="img" /></p>
<p>重复登录一下看看，果然验证了我的猜测。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062334029.png" alt="img" /></p>
<p>接着便尝试到QQ中找一下这个账号，了解一下情况。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062334960.png" alt="img" /></p>
<p>使用小号访问他的空间看看</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062333819.webp" alt="img" /></p>
<p>可以很直观的看出这个只是一个小号。能挖掘的信息不多。然后便放弃了这个信息，准备挖其他信息。<br />
回到服务器上面。看到他其中的一个用户名qq11xxxxx24</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062333937.png" alt="img" /></p>
<p>所以没猜错的话，这个应该也是他的QQ号。OK，还是用小号尝试找找看他的信息。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062333032.png" alt="img" /></p>
<p>“咸鱼王”的头像壁纸跟小号的都是“我的世界”的壁纸。所以基本可以大概率确定两个账号为同一个人所有。</p>
<h2 id="找到他的位置"><a class="markdownIt-Anchor" href="#找到他的位置"></a> 找到他的位置</h2>
<p>而且他的所在地是“河南 郑州”，是真的在河南吗？<br />
接着到QQ空间看看情况怎么样。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062333760.webp" alt="img" /></p>
<p>发现他昨天早上还发了一条说说，定位地点就是郑州市某学院。喜欢玩“我的世界””王者荣耀“，刚打上砖石，让他感觉好嗨哟，感觉人生已经到达了高潮~~~<br />
后续多条说说均定位于郑州市某学院，后面有一条定位点是郑州市亚太明珠，时间是，2月21，以及上一两条信息都是在那个地方，再联系上他是专科学生，2月21前大概率是寒假时间。基本可以大概率推断出，这个地方就是他的家所在地区了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062333038.webp" alt="img" /></p>
<p>在多条说说中的定位可以看到他的定位点是某汽车工厂，联合他的学历，可以猜测到那个地方是他的实习工作地点了。</p>
<h2 id="找到他叫啥"><a class="markdownIt-Anchor" href="#找到他叫啥"></a> 找到他叫啥</h2>
<p>但是直到现在，我们还是不知道他叫什么。。。<br />
所以，我又回到了服务器，看一下还能不能挖出点信息。<br />
回到服务器，找到他大号对应的账号的文件夹里面。到roaming这个缓存数据文件夹里面找了找东西，无意中发现了百度云盘？为啥有百度云盘？<br />
难道他文档里面那些私服文件都是百度云盘下载的？</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062333135.webp" alt="img" /></p>
<p>打开百度云盘看一下，他居然点了记住密码。。。<br />
顺利进入里面，看了一下传输列表，果然文件都是百度云盘下的。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062333364.png" alt="img" /></p>
<p>但是这些东西对我来说没用呀。等等，百度云盘的账号一般有两种，一种是邮箱型，另外一种是手机号码型。<br />
他会不会是手机号码型的呢？<br />
点击切换账号后，结果另人十分欣喜。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062333320.png" alt="img" /></p>
<p>拿到手机号了，就肯定要打开某付宝啦。看看这个兄弟的大宝名。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062333878.png" alt="img" /></p>
<p>xx钰，嗯，让我猜猜他姓啥。赵、钱、孙、陈、张…………都不对。。。<br />
这可咋办哟，正当我一筹莫展的时候，隔壁的朋友说：你不是有他空间了么，到空间里面看啊，肯定有他名字出现的，比如他生日什么的时候，就会有人留言说出他的名字的。<br />
诶，这可太机智了，我就知道QQ空间里面，能挖的信息不止那么一点点的。<br />
随即又来到他的空间，Ctrl+F，一搜“x钰”，再翻多几个页面。就出现了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062333900.png" alt="img" /></p>
<p>看得出他很在乎他妹妹吗，都出宣战书了。（谁还没个年少轻狂的时候呢）</p>
<h2 id="其实顺手还找到了他本人的照片"><a class="markdownIt-Anchor" href="#其实顺手还找到了他本人的照片"></a> 其实顺手还找到了他本人的照片</h2>
<p>这个时候已经基本可以拿到他的所有信息了。包括了，姓名、手机号、所在地区、所在学校、实习地点以及游戏爱好。顺便提一嘴，肖像其实在QQ空间里面也挖出来了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062333263.webp" alt="img" /><br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062333342.png" alt="img" /></p>
<h2 id="后续"><a class="markdownIt-Anchor" href="#后续"></a> 后续</h2>
<p>后续，今早添加他为好友后，进入到了他的私服群。因为昨晚服务器已经被我处理过了，所以，他今早就用不了。<br />
给大家看一段截图。大家乐呵乐呵就好。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062333980.png" alt="img" /></p>
<p>非法使用别人服务器被清理后还说服务器被盗了，<strong>我从未见过如此厚颜无耻之人</strong>！</p>
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062333824.webp" alt="img" style="zoom:50%;" />
<h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2>
<p>大家可以很明显的看到在QQ空间里面由于不注意保护隐私安全、任意一个人通过其QQ空间稍微总结观察一下便可以获取到大量信息。而且，上文中的那位老哥明显已经触犯《中华人民共和国网络安全法》了。各位观众老爷，研究信息安全的同学们，来跟我背一遍社会主义核心价值观！</p>
<p><strong>富强、民主、文明、和谐，自由、平等、公正、法治，爱国、敬业、诚信、友善</strong></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301062332412.webp" alt="img" /></p>
]]></content>
      <categories>
        <category>信息安全</category>
      </categories>
      <tags>
        <tag>有趣的东西</tag>
        <tag>信息安全</tag>
      </tags>
  </entry>
  <entry>
    <title>利用 Python + Flask 搭建软件更新服务</title>
    <url>/archives/296eec40.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="我也想给自己搞一个软件更新服务"><a class="markdownIt-Anchor" href="#我也想给自己搞一个软件更新服务"></a> 我也想给自己搞一个软件更新服务</h2>
<p>说到软件更新相信大家肯定都不止一次两次见过了吧。在手机上，经常可以看到某某助手或者应用中心提示应用更新，而且会很醒目地告诉你：可以节约多少多少流量。在大家各自的PC上面也不止一次看到这种提示吧。</p>
<blockquote>
<p>“检查到新版本x.x.x，当前版本是x.x.x，是否更新”</p>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-1/%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E4%B9%8B%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%90%AD%E5%BB%BA/1554123924193.png" alt="PC软件提示更新" /></p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-1/%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E4%B9%8B%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%90%AD%E5%BB%BA/1554124055043.png" alt="Android软件提示更新" /></p>
<h2 id="流程是怎么样的"><a class="markdownIt-Anchor" href="#流程是怎么样的"></a> 流程是怎么样的</h2>
<p>这种软件更新是怎么做到的呢？<br />
咱不知道大公司是怎么想的<br />
抛开Android的不说，咱们本次讨论一下PC的软件在我的思路中，是如何做到的，怎么样？<br />
其实，流程是十分简单的，大家也是一想就能明白。</p>
<h3 id="我想是这样的"><a class="markdownIt-Anchor" href="#我想是这样的"></a> 我想是这样的</h3>
<p>流程如下：</p>
<blockquote>
<p>首先，咱们得先有一部远程服务器吧。用来存放软件更新的文件以及<strong>清单文件</strong>，以及搭建一个服务用以软件检测是否存在有新版本和下载新文件用<br />
接着软件客户端，就是你的PC上面要有个服务去检测发现版本更新信息。可以在启动的时候，也可以在你点击软件检查更新的时候去检查版本信息。<br />
点击更新后，下载清单文件，然后再比较一下清单文件和本地文件的差异，可以检测一下文件的MD5什么的。如果不一样的就下载更新，当然如果是不存在的，就更加得下载下来啦。<br />
最后就是……你得有网，Internet，晓得吧，木得Internet谈自动更新（增量更新）都是“耍流氓”…</p>
</blockquote>
<h3 id="画个流程图看看"><a class="markdownIt-Anchor" href="#画个流程图看看"></a> 画个流程图看看</h3>
<p>流程图如下：</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-1/%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E4%B9%8B%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%90%AD%E5%BB%BA/1554124824427.png" alt="最最最简单的流程" /></p>
<p>OK ，那么这个这么简单的流程咱们搞清楚了吗？</p>
<h2 id="服务器得做什么好呢"><a class="markdownIt-Anchor" href="#服务器得做什么好呢"></a> 服务器得做什么好呢</h2>
<h3 id="服务器的任务"><a class="markdownIt-Anchor" href="#服务器的任务"></a> 服务器的任务</h3>
<p>清楚后，咱们分析一下我们服务器担任的角色。我们今天先不管客户端啦（虽然考虑的时候应该一起考虑，小声bb）<br />
服务器要起到几个作用：<br />
1、提供网络服务，就是得有简单文件下载服务和应答服务。<br />
2、得有个文件夹存放更新文件，里面放更新文件和清单文件。<br />
3、在网络中任意一个位置都可以访问到，而不仅限于自己的那个路由器……</p>
<p>所以，我们瞬间就可以想起了Python中自带的那个网络服务。。。但是，用过的人都知道它实在是太简单，难以胜任我们的这个需求啊。所以，这个时候，我们可以选用Flask这个小辣椒啦。什么？你不知道Flask是什么？</p>
<h3 id="flask是个服务框架"><a class="markdownIt-Anchor" href="#flask是个服务框架"></a> Flask是个服务框架</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-4-1/%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E4%B9%8B%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%90%AD%E5%BB%BA/1554125477987.png" alt="就是这个火药筒" /><br />
简单普及一波：其实Flask那个图片不是辣椒啦，人家是装火药的啦<br />
基于他，我们可以很容易地快速搭建好我们自己定义的服务。<br />
再扯一下，单纯用这个框架简单地写个服务还是可以能应付一般点的并发量的。。。太大的并发量的话，就得采用其他策略去对付了。所以，我们现在讨论的是不考虑高并发情况的。</p>
<h2 id="想想代码的函数名和它该干嘛"><a class="markdownIt-Anchor" href="#想想代码的函数名和它该干嘛"></a> 想想代码的函数名和它该干嘛</h2>
<p>下面我就简单解释一下各函数的写法思路吧。</p>
<p>download，接收filename的参数，表示下载的文件名。获取后，通过flak的内置方法返回所需下载文件即可<br />
Getfile_md5，接收文件路径作为参数，通过文件路径读取文件，然后通过hashlib计算MD5然后返回<br />
generate，没有参数，用于更新清单文件。（虽然感觉这个做法有点多余，因为可以多写一个独立的文件处理，管理员上传完文件后再执行一次就OK了D）<br />
findFile，接收目录路径作为参数，递归查找目标目录里面的文件，如果是文件则计算MD5是目录则递归进去寻找文件。<br />
check，没有参数，返回当前服务器版本号以及更新信息。</p>
<p>函数的目的就是这么简单。简简单单几十行就可以把这个服务给实现出来了。后面PC客户端在请求是否有新版本更新的时候，就可以用这个服务脚本来处理了。<br />
当然，这里面还是有挺多没考虑到的问题的。比如被人家恶意下载导致服务器流量快速被消耗，高并发的状态下，它是否能顶的住？</p>
<h2 id="dont-bb-show-me-the-code"><a class="markdownIt-Anchor" href="#dont-bb-show-me-the-code"></a> Don’t BB , show me the code !</h2>
<p>代码我直接就放上来吧。注释都有写作用的。</p>
<h2 id="-code0-"><a class="markdownIt-Anchor" href="#-code0-"></a> <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 4/1/2019 19:27</span></span><br><span class="line"><span class="comment"># @Author  : MARX·CBR</span></span><br><span class="line"><span class="comment"># @File    : __init__.py.py</span></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request, jsonify, send_from_directory, abort, Flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">allfile = []</span><br><span class="line">md5_list = []</span><br><span class="line">updateList = &#123;&#125;</span><br><span class="line">directory = os.getcwd()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载文件服务</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&lt;filename&gt;&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span>(<span class="params">filename</span>):</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(os.path.join(<span class="string">&#x27;updateFiles&#x27;</span>, filename)):</span><br><span class="line">            <span class="keyword">return</span> send_from_directory(<span class="string">&#x27;updateFiles&#x27;</span>, filename, as_attachment=<span class="literal">True</span>)</span><br><span class="line">        abort(<span class="number">404</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算文件MD5</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Getfile_md5</span>(<span class="params">filename</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(filename):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    myHash = hashlib.md5()</span><br><span class="line">    f = <span class="built_in">open</span>(filename, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        b = f.read(<span class="number">8096</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> b:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        myHash.update(b)</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="keyword">return</span> myHash.hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算生成新的清单文件</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/generateNewConfig&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate</span>():</span></span><br><span class="line">    findFile(directory + <span class="string">&#x27;/updateFiles/&#x27;</span>)</span><br><span class="line">    file_md5_list = json.dumps(updateList)</span><br><span class="line">    print(file_md5_list)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./updateFiles/listFile&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        pickle.dump(updateList, f)</span><br><span class="line">    return_data = &#123;</span><br><span class="line">        <span class="string">&#x27;Statu&#x27;</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> jsonify(return_data)</span><br><span class="line">    <span class="comment"># file_md5_list=json.load(updateList)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 找到更新文件目录里面的文件以及文件夹、递归寻找</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findFile</span>(<span class="params">path</span>):</span></span><br><span class="line">    fsinfo = os.listdir(path)</span><br><span class="line">    <span class="keyword">for</span> fn <span class="keyword">in</span> fsinfo:</span><br><span class="line">        temp_path = os.path.join(path, fn)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(temp_path):</span><br><span class="line">            print(<span class="string">&#x27;文件路径: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(temp_path))</span><br><span class="line">            fm = Getfile_md5(temp_path)</span><br><span class="line">            print(fn)</span><br><span class="line">            fn = temp_path.replace(directory + <span class="string">&quot;/updateFiles/&quot;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            updateList[fn] = fm</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            findFile(temp_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查更新版本，该部分尚未够，完善。可以考虑为管理员远程上传文件的时候</span></span><br><span class="line"><span class="comment"># 将更新说明以json格式一同上传到服务器中，更新时直接读取即可</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/checkUpdate&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        return_data = &#123;</span><br><span class="line">            <span class="string">&#x27;Version&#x27;</span>: <span class="string">&#x27;0.0.1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Msg&#x27;</span>: <span class="string">&#x27;更新文件，修复初始化卡顿bug\n增加文件预下载功能&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> jsonify(return_data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 首页Hello</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello MARXCBR&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8080</span>)  <span class="comment"># 运行，指定监听地址为 0.0.0.0:8080</span></span><br><span class="line">																		   <span class="comment"># 服务器端运行可以让所有地方访问到</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></h2>
<p>大概就这样吧，后续会给出软件更新服务之客户端怎么玩的文章。咱们试试从头到尾自己实现一个简单的软件更新服务，哈哈哈。</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>有趣的东西</tag>
        <tag>Python</tag>
        <tag>增量更新</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware Workstation 安装以及Linux虚拟机安装 指北（保姆级教程）</title>
    <url>/archives/e679d64e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="虚拟机是个啥"><a class="markdownIt-Anchor" href="#虚拟机是个啥"></a> 虚拟机是个啥</h2>
<p>最近有挺多小伙伴跟我说起虚拟机这个东西，所以，今天就给大家写一篇虚拟机安装使用指北吧。<br />
虚拟机（英语：virtual machine），在计算机科学中的体系结构里，是指一种特殊的软件，可以在计算机平台和终端用户之间创建一种环境，而终端用户则是基于这个软件所创建的环境来操作软件。（该段说明来自wiki）<br />
我们即将安装的软件 VMware 则是系统虚拟机。可以轻松在一个操作系统上面安装多一个或者多个操作系统，如kali、Ubuntu、centos等Linux，windows系统，甚至Mac系统都可以。</p>
<h2 id="安装vmware"><a class="markdownIt-Anchor" href="#安装vmware"></a> 安装VMware</h2>
<p>那OK，下面就进入VMware安装部分<br />
首先，你得有VMware的安装软件，可以选择到官网下载，也可以到百度、谷某 引擎上面搜索VMware即可。大家注意别下载到那些看起来就很捞的软件即可（很多下载站里面的软件都很假的，或者带毒的，最好还是去官网下）。然后，有资金充足点的可以选择支持正版，最好就支持正版，别人开发出这么流批的软件也是很厉害啦。手头没这么宽裕的就自己搜索对应下载版本软件的激活码就好了……<br />
附送 <a href="https://my.vmware.com/en/web/vmware/info/slug/desktop_end_user_computing/vmware_workstation_pro/15_0">下载链接</a></p>
<h3 id="打开vmware安装包"><a class="markdownIt-Anchor" href="#打开vmware安装包"></a> 打开VMware安装包</h3>
<p>OK ,软件已经下载好了，我就不下一次了，之前下载安装过了。漫长的下载后，接着就打开软件，VMware-workstation-14.exe<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070116107.png" alt="enter description here" /><br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070120306.png" alt="enter description here" /></p>
<p>一路Next下去，他会提示修改安装位置，在这里推荐修改一个位置比较好，可以安装在一个你自己喜欢的位置，默认安装在C盘，还是太伤我C盘的空间了。(C盘一个T空间的请忽略……)<br />
在这里我安装到E盘，因为我E盘里面安装的都是编程IDE和开发环境。所以，大家根据自己的需求来装就好。<br />
下面的那个选择框是说安装一个增强型键盘驱动程序，自己看情况选择。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070120981.png" alt="enter description here" /><br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070120365.png" alt="enter description here" /></p>
<p>一路Next，最后Install就可以完成安装了。再点击Finish就好了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070120204.png" alt="enter description here" /></p>
<p>启动后，界面长这个样子。然后点击Help，再选择输入授权秘钥就OK了。在这里再提醒一次，尽量支持正版哈。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070120021.png" alt="enter description here" /></p>
<p>到这里VMware的安装就完成了。接下来就是安装虚拟机了。</p>
<h2 id="安装kali虚拟机"><a class="markdownIt-Anchor" href="#安装kali虚拟机"></a> 安装kali虚拟机</h2>
<p>本教程以Kali Linux为例子，为大家安装一个 Kali Linux 操作系统。Ubuntu和centos和Windows系统的操作类似。Mac的稍有不同，需要改几个配置文件。有兴趣的可以自行查阅资料，我现在就不细说这个问题，后期可能会有一篇说明Mac虚拟机安装的文章吧~</p>
<p>OK，希望可以在VMware里面安装一个操作系统很简单，有两条，不，三条途径，或者更多……<br />
最常规的就是下载该操作系统的官方镜像，然后装载进去安装即可。<br />
也可以让别人安装后，将安装虚拟机的文件夹给拖过来，不是VMware的文件夹，是虚拟机的文件夹。<br />
基于第二种，第三种就是去网上下载别人打包好的虚拟机文件夹的压缩包。。。（怎么感觉第三种有点牵强）</p>
<p>OK，咱们就挑最难的那种讲讲</p>
<h3 id="第一种镜像安装"><a class="markdownIt-Anchor" href="#第一种镜像安装"></a> 第一种：镜像安装</h3>
<p>下载kali的镜像，到官网下载页面 &gt;<a href="https://www.kali.org/downloads/">https://www.kali.org/downloads/</a><br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070120253.png" alt="enter description here" /></p>
<p>我们选择第三个，Kali Linux 64位的下载，中规中矩。用种子下载听说可以快一点哦。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070120622.png" alt="enter description here" /></p>
<p>几分钟过后，镜像下载好了。我们便来到VMware，准备安装系统。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070120725.png" alt="enter description here" /></p>
<p>接着进入引导页面，选择自定义高级安装</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070120362.png" alt="enter description here" /></p>
<p>然后一路Next</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070120586.png" alt="enter description here" /></p>
<p>然后，选择Linux，下面的版本选择debian 7.x 64-bit</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070120256.png" alt="enter description here" /></p>
<p>选择安装位置，在起一个狂拽酷炫的名字就可以下一步了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070120419.png" alt="enter description here" /></p>
<p>接着选一下你希望你的虚拟机是几核几线程的选项</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070121358.png" alt="enter description here" /></p>
<p>下一步便来到了选择虚拟机内存页面，建议内存都很低……所以我还是建议按照自己的PC来选择多大内存吧。太小的话，你用起来开，太大的话可能会出一些不可预料的错误。。。我在这里选择4G的内存分给他。因为我有12G内存，给他1/3,不过分不过分。。。<br />
网络类型，有四个，桥接、NAT（ 网络地址转换）、主机模式、不联网。我这里默认用NAT就OK。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070121927.png" alt="enter description here" /></p>
<p>下面的硬盘和控制模式就默认就可以了。。。一路next下去。<br />
出现要你选择磁盘大小的时候，根据自己电脑情况自行判断选择。基于我1T的外置硬盘，我就分了50G空间给他。然后选择虚拟磁盘拆分就OK。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070121097.png" alt="enter description here" /></p>
<p>接着到虚拟磁盘存储位置选择的时候，就选择之前的那个文件夹就好了</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070121158.png" alt="enter description here" /></p>
<p>下一步点完成后，会来到首页，点击编辑虚拟机设置</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070121448.png" alt="enter description here" /></p>
<p>来到设置页面后，选择CD/DVD项。再浏览刚才下载回来的iso镜像（PS：你想装什么系统就在这个时候选什么镜像）</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070121364.png" alt="enter description here" /></p>
<p>OK保存后，便可以开机了。Power on 启动起来！！！<br />
用键盘的↑、↓选择岛图形化安装选项，回车。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070121739.png" alt="enter description here" /></p>
<p>然后选择安装语言，在这里建议大家选默认的English，多用英文可以有效提高英语水平哟，也可以避免踩一些中文的坑~~<br />
回车后，叫你选区域，那就选Hong Kong咯。。。<br />
然后就是选择键盘布局，有中国当然选中国呀。<br />
回车后……便是一顿自动操作…………<br />
终于停下来时i，叫你写hostname，用来在网络中分辨你的系统………以及下面那个域名，填自己喜欢的就好啦。<br />
关键的是<strong>设置密码</strong>啦，后面都是要用的，大家设置后<strong>千万要记住</strong>哟，怕写错的，可以勾下面的显示密码来确认一下下</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070121771.png" alt="enter description here" /></p>
<p>接着一路continue，在分区的时候，要将NO改成YES。如下即可</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070121197.png" alt="enter description here" /></p>
<p>然后就不用操作了，一个钟半个钟后便安装完毕了。。。（安装在SSD的同学请忽略……）<br />
后面的包管理选择、引导之类的（<strong>注意GRUB是要安装到/dev/sda这个设备上别顺手就点过去了哦……会扑街的</strong>），其他的相信大家都可以看懂然后默认继续就好了。<br />
这里还是再提醒多一下吧</p>
<div class="note info flat"><p>注意GRUB是要安装到/dev/sda这个设备上别顺手就点过去了哦</p>
</div>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070121762.png" alt="enter description here" /></p>
<p>当你看到这个页面的时候，你已经成功98%了。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070121653.png" alt="enter description here" /></p>
<p>重启虚拟机系统后你就可以看到这帅的爆的kali Linux啦</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070121482.png" alt="enter description here" /></p>
<h3 id="第二第三种文件安装"><a class="markdownIt-Anchor" href="#第二第三种文件安装"></a> 第二第三种：文件安装</h3>
<p>第二第三种很像，我就并在一起讲了。关键是拿到那个打包好的系统文件夹。<br />
OK ，这里我有一个从别人主机上面拖过来的系统，解压后就进入VMware的首页</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070122928.png" alt="enter description here" /></p>
<p>然后选择刚才解压出来的文件夹。这里我选择Ubuntu9的这个文件夹。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070122788.png" alt="enter description here" /></p>
<p>点击Open便会自动加载进左边的主机列表啦。<br />
然后开机，你就可以看到系统了。（很多同学都没见过Ubuntu9的样子吧，哈哈哈~~~）</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/Blog/202301070122842.png" alt="enter description here" /></p>
<h2 id="结语"><a class="markdownIt-Anchor" href="#结语"></a> 结语</h2>
<p>本篇不完全指北的关键不在于系统安装的步骤。因为每个系统安装的步骤都是一个样。用物理机来说，把光盘或者刻录好镜像的U盘怼进去后，开机按Esc或者F9之类的，选择启动的方式就可以进入安装系统的引导界面了。按照里面的安装提示选择自己的选项就好了。<br />
在这里吐槽一句，WIN10的安装，如果它安装在MBR磁盘上，你不格式化磁盘转成GPT格式的话，会给你甩一句“无法在驱动器0分区上安装windows”的问题，这个问题，改天写一篇短文简单说明一下该怎么解决吧</p>
]]></content>
      <categories>
        <category>虚拟机</category>
      </categories>
      <tags>
        <tag>虚拟机</tag>
        <tag>Linux</tag>
        <tag>VMware Workstation</tag>
      </tags>
  </entry>
  <entry>
    <title>QQ音乐MP3下载</title>
    <url>/archives/28d613bd.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-29/QQ%E9%9F%B3%E4%B9%90MP3%E4%B8%8B%E8%BD%BD/1553837004446.png" alt="" /></p>
<center>没错本次写的内容的对象是我们熟知的QQ Music。</center><br/>
<p>本篇文章涉及内容包括：Python，爬虫，json解析，request 库的使用<br/></p>
<h2 id="缘起"><a class="markdownIt-Anchor" href="#缘起"></a> 缘起</h2>
<p>前几天刷B站无意中又刷到了一首神曲，“I Want My Tears Back”，挺好听的。听了几遍后便寻思着能不能把这歌给下到手机上拿来当闹钟的，听过的同学应该知道这歌有多提神，哈哈哈~~~<br />
没听过的同学可以点击文章上方的音乐，感受一下下。</p>
<h2 id="动手分析"><a class="markdownIt-Anchor" href="#动手分析"></a> 动手分析</h2>
<p>接下来，当然要选择一下从哪个平台下搞这首歌回来啦。网易云音乐和QQ音乐，选择哪个？那就从网易云入手吧，毕竟用的多些，接着便去网易云一顿操作，此处省略1000字描述。发现，哎呦，这网易云……不好搞呀。所以先不管了，看一下QQ音乐的情况先。<br />
F12大法一开，QQ音乐就先给我来了个惊喜，大大符号图标倾情相送。对比云村的就没有啦。<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-29/QQ%E9%9F%B3%E4%B9%90MP3%E4%B8%8B%E8%BD%BD/1553838437967.png" alt="" /><br />
撇开这些不关键的东西不说了，接下来就是搜索一首歌。</p>
<p>这个时候，先把控制台切到network栏，这个时候，你会发现左下角有很多请求链接。请求各种各样的内容，这个时候，这些东西对我们都是没用的，是吧。我们要的是我们请求搜索那一瞬间他发出去的数据。所以，为了避免无关数据的干扰，建议点击左上角的清空把记录清空先。然后右上角勾上disable cache，避免缓存使我们看不到我们要的数据。<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-29/QQ%E9%9F%B3%E4%B9%90MP3%E4%B8%8B%E8%BD%BD/1553838797742.png" alt="" /><br />
ok，这个时候我们输入我们要查的歌，I Want My Tears Back。我们已经可以看到有东西已经发出去并返回回来了。就是这个链接<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-29/QQ%E9%9F%B3%E4%B9%90MP3%E4%B8%8B%E8%BD%BD/1553839050029.png" alt="" /></p>
<blockquote>
<p><a href="https://c.y.qq.com/splcloud/fcgi-bin/smartbox_new.fcg?is_xml=0&amp;key=I%20Want%20My%20Tears%20Back&amp;g_tk=1419336673&amp;loginUin=824368xxx&amp;hostUin=0&amp;format=json&amp;inCharset=utf8&amp;outCharset=utf-8&amp;notice=0&amp;platform=yqq.json&amp;needNewCode=0">https://c.y.qq.com/splcloud/fcgi-bin/smartbox_new.fcg?is_xml=0&amp;key=I Want My Tears Back&amp;g_tk=1419336673&amp;loginUin=824368xxx&amp;hostUin=0&amp;format=json&amp;inCharset=utf8&amp;outCharset=utf-8&amp;notice=0&amp;platform=yqq.json&amp;needNewCode=0</a></p>
</blockquote>
<p>我们观察一下，这里面的参数，key就有I Want My Tears Back这个歌名了，再看一下返回数据。是一个json数据，有很多内，我们可以很容易看出了数据包含了 专辑、mv、歌手、歌曲 这四大区域。我们关注歌曲这个栏，在count 中已经表明找到了两首符合度最高的歌曲。一首是Nightwish的一首是Hok-key的。因为我想要的就是 夜愿 这个版本的，所以我们就默认第一首出现的就是我们要下的歌曲哈。<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-29/QQ%E9%9F%B3%E4%B9%90MP3%E4%B8%8B%E8%BD%BD/1553839289035.png" alt="" /><br />
这个时候，拿到这些数据有什么用呢？歌曲链接还没不知道怎么构造呀。。。<br />
先别急，我们看看歌曲链接长啥样。然后…………<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-29/QQ%E9%9F%B3%E4%B9%90MP3%E4%B8%8B%E8%BD%BD/1553839647380.png" alt="" /><br />
好尴尬呀，有木有，这，这谁忍得住呀？所以，机智的我打开了另外一首歌……<br />
瞬间右边记录出来了一大堆，没错是一大堆东西……但是，控制台有分类呀，不怂。选择media分类，就给我们过滤出了那几个链接。<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-29/QQ%E9%9F%B3%E4%B9%90MP3%E4%B8%8B%E8%BD%BD/1553840243529.png" alt="" /><br />
<br/>没办法了，逐个点击。1分钟过后，I got it.最后那个链接就是歌曲链接。</p>
<blockquote>
<p><a href="https://isure.stream.qqmusic.qq.com/C400000JHuWh4fOBxD.m4a?guid=8665097290&amp;vkey=A78C373DCB421D9DA3B1C3A87979A32A6062159F032C2D44C83BDD8D9D1F717B429F6C92A6C2720A1DB18AC835D4E6FCD409D6F0D0CE6F21&amp;uin=7642&amp;fromtag=66">https://isure.stream.qqmusic.qq.com/C400000JHuWh4fOBxD.m4a?guid=8665097290&amp;vkey=A78C373DCB421D9DA3B1C3A87979A32A6062159F032C2D44C83BDD8D9D1F717B429F6C92A6C2720A1DB18AC835D4E6FCD409D6F0D0CE6F21&amp;uin=7642&amp;fromtag=66</a></p>
</blockquote>
<p>可以清楚看到有几个关键参数。guid、vkey、uin、fromtag，我们先暂且不管那个参数可以省略好吧。先看看可以从哪里找到这几个参数……又得看链接的返回值了（此处说明，可以在控制台点击response标签查看返回值，你只要按↓键就OK了）。在漫长的遍历过程中，我注意到了一个链接的内容十分不一样的，不相同的，很多很多。直觉告诉我，就是这个链接了。<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-29/QQ%E9%9F%B3%E4%B9%90MP3%E4%B8%8B%E8%BD%BD/1553840766388.png" alt="" /><br />
<br />拿去做一下URL解码后，咋一看一头雾水。不信你看一下下？<br /></p>
<p>接合歌曲链接，这个请求链接，搜索请求结果，这三个内容。其实不难发现，songmid 这个参数是关键。<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-29/QQ%E9%9F%B3%E4%B9%90MP3%E4%B8%8B%E8%BD%BD/1553841536865.png" alt="" /><br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-29/QQ%E9%9F%B3%E4%B9%90MP3%E4%B8%8B%E8%BD%BD/1553840915649.png" alt="" /></p>
<p><br/>所以，我们这个时候基本就以及厘清下载音乐的步骤以及思路了。首先，请求搜索某一首歌，然后或者到song mid 接着song mid 去请求服务器拿到这首歌的播放链接。接着用request请求数据回来再用二进制保存就OK啦。</p>
<h2 id="代码写起来"><a class="markdownIt-Anchor" href="#代码写起来"></a> 代码写起来</h2>
<p>导入需要用到的json库和requests库。</p>
<p>构造一个类，downloadMusic，初始化一个headers，做个最简单的反爬。<br />
写run方法，将上面的思路实现出来。请求回数据后就用json.loads方法加载json数据。逐步逐步请求服务器，填充需要填的数据。<br />
最后拿到链接的URL后，就easy了，用requests请求资源回来后。用.content,不要用.text。又人问过我这两个方法的区别。<br />
简单来说，content拿到的数据是字节，调试打印出来你会发现数据前面会有个b’，text的话，就是一个字符串了。<br />
因为我们要保存歌曲，就肯定要用字节保存好，用wb方式打开，然后写进去后便关闭即可。代码贴在下面。<br />
至此写完收工，可以美滋滋地下载我们要的歌了。有了它还怕什么铃声找不到自己喜欢的问题吗？<br/></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 10/10/2018 9:31 PM</span></span><br><span class="line"><span class="comment"># @Author  : MARX·CBR</span></span><br><span class="line"><span class="comment"># @File    : __init__.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">downloadMusic</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Accept-Encoding&#x27;</span>: <span class="string">&#x27;gzip, deflate&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Upgrade-Insecure-Requests&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:55.0) Gecko/20100101 Firefox/55.0&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        self.name=<span class="string">&#x27;I Want My Tears Back&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self,sn</span>):</span></span><br><span class="line">        self.name=sn</span><br><span class="line">        session=requests.session()</span><br><span class="line">        firstjsonurl=<span class="string">&#x27;https://c.y.qq.com/splcloud/fcgi-bin/smartbox_new.fcg?is_xml=0&amp;format=jsonp&amp;key=&#123;&#125;&amp;g_tk=5381&amp;jsonpCallback=SmartboxKeysCallbackmod_top_search1467&amp;loginUin=0&amp;hostUin=0&amp;format=jsonp&amp;inCharset=utf8&amp;outCharset=utf-8&amp;notice=0&amp;platform=yqq&amp;needNewCode=0&#x27;</span>.<span class="built_in">format</span>(self.name)</span><br><span class="line">        r=session.get(firstjsonurl).text</span><br><span class="line">        print(<span class="built_in">type</span>(r))</span><br><span class="line">        print(r[<span class="number">39</span>:-<span class="number">1</span>:])</span><br><span class="line">        myjson=json.loads(r[<span class="number">39</span>:-<span class="number">1</span>:])</span><br><span class="line">        mid=myjson[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;song&#x27;</span>][<span class="string">&#x27;itemlist&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;mid&#x27;</span>]</span><br><span class="line">        print(mid)</span><br><span class="line">        searchurl=<span class="string">&#x27;&#x27;&#x27;https://u.y.qq.com/cgi-bin/musicu.fcg?callback=getplaysongvkey2236996910208997&amp;g_tk=5381&amp;jsonpCallback=getplaysongvkey2236996910208997&amp;loginUin=0&amp;hostUin=0&amp;format=jsonp&amp;inCharset=utf8&amp;outCharset=utf-8&amp;notice=0&amp;platform=yqq&amp;needNewCode=0&amp;data=&#123;&quot;req&quot;:&#123;&quot;module&quot;:&quot;CDN.SrfCdnDispatchServer&quot;,&quot;method&quot;:&quot;GetCdnDispatch&quot;,&quot;param&quot;:&#123;&quot;guid&quot;:&quot;8665097290&quot;,&quot;calltype&quot;:0,&quot;userip&quot;:&quot;&quot;&#125;&#125;,&quot;req_0&quot;:&#123;&quot;module&quot;:&quot;vkey.GetVkeyServer&quot;,&quot;method&quot;:&quot;CgiGetVkey&quot;,&quot;param&quot;:&#123;&quot;guid&quot;:&quot;8665097290&quot;,&quot;songmid&quot;:[&quot;&#x27;&#x27;&#x27;</span>+mid+<span class="string">&#x27;&#x27;&#x27;&quot;],&quot;songtype&quot;:[0],&quot;uin&quot;:&quot;0&quot;,&quot;loginflag&quot;:1,&quot;platform&quot;:&quot;20&quot;&#125;&#125;,&quot;comm&quot;:&#123;&quot;uin&quot;:0,&quot;format&quot;:&quot;json&quot;,&quot;ct&quot;:20,&quot;cv&quot;:0&#125;&#125;&#x27;&#x27;&#x27;</span></span><br><span class="line">        r=session.get(searchurl).text</span><br><span class="line">        print(r)</span><br><span class="line">        songjson=json.loads(r[<span class="number">32</span>:-<span class="number">1</span>:])</span><br><span class="line">        print(songjson)</span><br><span class="line">        header=songjson[<span class="string">&#x27;req_0&#x27;</span>][<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;sip&#x27;</span>][<span class="number">0</span>]</span><br><span class="line">        two=songjson[<span class="string">&#x27;req_0&#x27;</span>][<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;midurlinfo&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;purl&#x27;</span>]</span><br><span class="line">        songurl=header+two</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;&#123;&#125;.mp3&quot;</span>.<span class="built_in">format</span>(self.name),<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> ms:</span><br><span class="line">            print(songurl)</span><br><span class="line">            raw = session.get(songurl, headers=self.headers)</span><br><span class="line">            content=raw.content</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(content) &gt;<span class="number">500</span>:</span><br><span class="line">                ms.write(content)</span><br><span class="line">                print(<span class="string">&quot;下载成功&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">&quot;下载失败&quot;</span>)</span><br><span class="line"></span><br><span class="line">App=downloadMusic()</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    songName=<span class="built_in">input</span>(<span class="string">&quot;请输入歌曲名字&quot;</span>)</span><br><span class="line">    App.run(songName)</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-29/QQ%E9%9F%B3%E4%B9%90MP3%E4%B8%8B%E8%BD%BD/1553846610023.png" alt="" /></p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>Python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>微信Dat文件解码</title>
    <url>/archives/36cb7ea6.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="有空总得收拾一下下自己的本本"><a class="markdownIt-Anchor" href="#有空总得收拾一下下自己的本本"></a> 有空总得收拾一下下自己的本本</h2>
<p>最近在整理磁盘文件，因为经过一段时间的蹂躏后，磁盘实在是太多东西了，不整理一下，简直对不住我的SSD好嘛。偶然发现磁盘中某公司的文件夹占用空间简直不能再大，那可是我的C盘啊，合计才119GB的SSD空间，你给我占了差不多10个G，说的就是你Tencent。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-28/%E5%BE%AE%E4%BF%A1Dat%E6%96%87%E4%BB%B6%E8%A7%A3%E7%A0%81/1553763845852.png" alt="" /></p>
<p>但是也不能怪人家，毕竟人家只是负责将数据保存下来方便给我们展示而已。所以，就冒着好奇的心，看看文件夹里面有什么。因为这次的主题说的是Dat文件的解密，我就不扯那么远。 大家假装知道我点完文件夹，看到很多历史图片缓存图片众多*.db就好了哈。（PS：不得不提的是腾讯家的QQ就将近给我缓存了7个G的表情包，未来可以收集这个内容做一个随机表情包网页出来乐呵乐呵呀。咳咳这些都是后话啦）</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2020-3-24/BogImages/1585032348049.png" alt="" /></p>
<p>然后我们便来到了微信PC版的文件夹，找到自己的账号所在文件夹。找到后，如下所示</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-28/%E5%BE%AE%E4%BF%A1Dat%E6%96%87%E4%BB%B6%E8%A7%A3%E7%A0%81/1553763834931.png" alt="" /></p>
<h2 id="让我来猜猜里面的东西"><a class="markdownIt-Anchor" href="#让我来猜猜里面的东西"></a> 让我来猜猜里面的东西</h2>
<p>这个时候，我便猜测，这些dat文件都是什么内容呢？聊天内容？不可能呀，聊天内容这么机密，肯定是放到db里面加密处理的。聊天文件？也不至于有1700+个文件吧。所以，综上，猜测这些个dat文件都是一些聊天时接收到的“表情包”或者“图片”。嗯，平时那些群聊斗图这么凶，估计没错了的。<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-28/%E5%BE%AE%E4%BF%A1Dat%E6%96%87%E4%BB%B6%E8%A7%A3%E7%A0%81/1553763812076.png" alt="" /></p>
<p>接下来，尝试直接改后缀试试。不出意外的得到了“图片错误”，我就知道不会这么简单。。。<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-28/%E5%BE%AE%E4%BF%A1Dat%E6%96%87%E4%BB%B6%E8%A7%A3%E7%A0%81/1553763909684.png" alt="" /></p>
<h3 id="不如试试异或加密"><a class="markdownIt-Anchor" href="#不如试试异或加密"></a> 不如试试异或加密</h3>
<p>那接下来怎么办嘛。思来想去，便想着拿16进制编辑器看一下下，里面数据长啥样。打开了多个文件看到里面文件头是8A AD ，但是一般jpg文件的文件头为FF D8 开头的。又记得之前看过说文通过异或对文件进行简单的加解密的很常规的做法。所以，打开计算器。一顿操作猛如虎，哈哈哈，结果一看没错辽，<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-28/%E5%BE%AE%E4%BF%A1Dat%E6%96%87%E4%BB%B6%E8%A7%A3%E7%A0%81/1553763921427.png" alt="" /></p>
<p>将计算器调整到程序员模式，然后使用FFD8与8AAD进行异或处理。结果为7575，显然可以知道，这个dat就是微信将收取到的文件对吗，每个字节进行异或0x75进行加密，保存为dat文件。<br />
这个时候，只要用Python写个脚本，不就可以轻松解码了嘛。</p>
<h2 id="那就写一手代码试试"><a class="markdownIt-Anchor" href="#那就写一手代码试试"></a> 那就写一手代码试试？</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 3/27/2019 21:54</span></span><br><span class="line"><span class="comment"># @Author  : MARX·CBR</span></span><br><span class="line"><span class="comment"># @File    : 微信Dat文件转图片.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">s_out_path = <span class="string">r&quot;D:\WeChat_Decode\\&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">image_decode</span>(<span class="params">f, fn, dest_floder</span>):</span></span><br><span class="line">    dat_read = <span class="built_in">open</span>(f, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line">    <span class="comment"># out=&#x27;P:\\&#x27;+fn+&quot;.png&quot;</span></span><br><span class="line">    out = dest_floder + fn + <span class="string">&quot;.jpg&quot;</span></span><br><span class="line">    print(out)</span><br><span class="line">    png_write = <span class="built_in">open</span>(out, <span class="string">&quot;wb&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> now <span class="keyword">in</span> dat_read:</span><br><span class="line">        <span class="keyword">for</span> nowByte <span class="keyword">in</span> now:</span><br><span class="line">            newByte = nowByte ^ <span class="number">0x75</span></span><br><span class="line">            png_write.write(<span class="built_in">bytes</span>([newByte]))</span><br><span class="line">    dat_read.close()</span><br><span class="line">    png_write.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findFile</span>(<span class="params">f, dest_floder</span>):</span></span><br><span class="line">    fsinfo = os.listdir(f)</span><br><span class="line">    <span class="keyword">for</span> fn <span class="keyword">in</span> fsinfo:</span><br><span class="line">        temp_path = os.path.join(f, fn)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(temp_path):</span><br><span class="line">            print(<span class="string">&#x27;文件路径: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(temp_path))</span><br><span class="line">            print(fn)</span><br><span class="line">            image_decode(temp_path, fn, dest_floder)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">running_path = <span class="string">r&quot;F:\XXX\WeChat Files\XXX\Data\\&quot;</span></span><br><span class="line">findFile(running_path, s_out_path)</span><br></pre></td></tr></table></figure>
<p>跑出来的结果如下图，没错吧，以往的表情包，发过收过的图片都出现在了里面。<br />
至此微信dat文件的复原解码到此就完成了。补充一下，每个账号或者客户端对那个异或值都是不一样的，所以，小伙伴们如果需要还原dat文件的话，还是要自己用计算器异或处理一波哦。看看这个值是多少哈。</p>
<h3 id="代码实现效果如下"><a class="markdownIt-Anchor" href="#代码实现效果如下"></a> 代码实现效果如下</h3>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-28/%E5%BE%AE%E4%BF%A1Dat%E6%96%87%E4%BB%B6%E8%A7%A3%E7%A0%81/1553763936147.png" alt="" /></p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>破解</tag>
        <tag>微信</tag>
      </tags>
  </entry>
  <entry>
    <title>搜索引擎的那些小技巧</title>
    <url>/archives/b3410ab6.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="会用搜索引擎看到的互联网是不一样的"><a class="markdownIt-Anchor" href="#会用搜索引擎看到的互联网是不一样的"></a> 会用搜索引擎看到的互联网是不一样的</h2>
<p>说到我们日常需要到网上搜索一些我们需要的信息的时候，就必须打开浏览器，比如Chrome、Firefox、IE。我们搜索的内容是浏览器帮我们搜索回来的吗？其实不然，我们需要的内容是靠搜索引擎搜索回来的！<br />
对于搜索引擎，你知道多少呢？Baidu、Google、Bing、Yahoo、360搜索……还有许许多多的搜索引擎。<br />
很多同学说：百度啊，我从小用到大，很简单的。其他搜索引擎也是很简单的啦。输东西进去就可以搜索了。<br />
OK，那为啥别人在找资料的时候老是比你快，质量也比你的好。。。<br />
实不相瞒，会灵活使用搜索引擎，你可能看到的互联网都是不一样的……</p>
<p><strong>我们要灵活使用搜索指令来搜索你想获取到的特定信息</strong></p>
<h2 id="以下是用的比较多的指令"><a class="markdownIt-Anchor" href="#以下是用的比较多的指令"></a> 以下是用的比较多的指令</h2>
<h2 id="site"><a class="markdownIt-Anchor" href="#site"></a> site</h2>
<p>用法&gt;&gt; site:xxx<br />
site指令主要用来查询一个域名下的网站在搜索引擎中被检索收录的情况。当然对于子域也是适用的。<br />
下面给出两个例子：</p>
<blockquote>
<p>site:freebuf.com</p>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-31/%E6%8C%87%E5%8C%97%E7%B3%BB%E5%88%97%EF%BC%9A/1554024596846.png" alt="MarxCBR的小屋" /><br />
可以明显看到搜索出来的内容都是这个网站的内容</p>
<h3 id="intitle"><a class="markdownIt-Anchor" href="#intitle"></a> intitle</h3>
<p>用法&gt;&gt; intitle:xxx<br />
intitle看起来也比较直白，这个指令告诉了搜索引擎，搜索出来的结果，标题一定要包含你输入的关键词。<br />
下面给出两个例子：</p>
<blockquote>
<p>intitle:入侵防护</p>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-31/%E6%8C%87%E5%8C%97%E7%B3%BB%E5%88%97%EF%BC%9A/1554025084648.png" alt="MarxCBR的小屋" /><br />
可以明显看到搜索出来的内容标题都是包含了我们输入的关键词的</p>
<h3 id="双引号"><a class="markdownIt-Anchor" href="#双引号"></a> “”（双引号)</h3>
<p>用法&gt;&gt; “xxx”<br />
如果你把关键词放在双引号里面，那么搜索引擎搜索出来的结果，就必须包含引号里面的所有词语。<br />
下面给出两个例子：</p>
<blockquote>
<p>“自由，平等，公正”</p>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-31/%E6%8C%87%E5%8C%97%E7%B3%BB%E5%88%97%EF%BC%9A/1554025323413.png" alt="MarxCBR的小屋" /></p>
<h3 id="-减号"><a class="markdownIt-Anchor" href="#-减号"></a> - （减号）</h3>
<p>用法&gt;&gt; xxx -xxx<br />
这个指令代表搜索含有前面那个关键词但是又不包含减号后面的词的页面。<br />
下面给出两个例子：</p>
<blockquote>
<p>内存条 -金士顿<br />
内存条 -广告<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-31/%E6%8C%87%E5%8C%97%E7%B3%BB%E5%88%97%EF%BC%9A/1554025818608.png" alt="MarxCBR的小屋" /><br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-31/%E6%8C%87%E5%8C%97%E7%B3%BB%E5%88%97%EF%BC%9A/1554025870168.png" alt="MarxCBR的小屋" /></p>
</blockquote>
<p>看到木有，减号可以去广告啊，使用百度的同学，你还不用吗？</p>
<h3 id="加号"><a class="markdownIt-Anchor" href="#加号"></a> +（加号)</h3>
<p>用法&gt;&gt; xxx +xxx<br />
这个指令代表搜索含有前面那个关键词但是必须包含加号后面的词的页面。<br />
下面给出两个例子：</p>
<blockquote>
<p>入侵检测 +snort</p>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-31/%E6%8C%87%E5%8C%97%E7%B3%BB%E5%88%97%EF%BC%9A/1554026150380.png" alt="MarxCBR的小屋" /></p>
<h3 id="filetype"><a class="markdownIt-Anchor" href="#filetype"></a> filetype</h3>
<p>用法&gt;&gt; filetype:xxx xxx<br />
这个指令是让搜索引擎返回的结果是只显示关键词为某类文件格式的链接<br />
下面给出两个例子：</p>
<blockquote>
<p>filetype:pdf 没事别随便思考人生</p>
</blockquote>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-31/%E6%8C%87%E5%8C%97%E7%B3%BB%E5%88%97%EF%BC%9A/1554027012539.png" alt="MarxCBR的小屋" /></p>
<h3 id="inurl"><a class="markdownIt-Anchor" href="#inurl"></a> inurl</h3>
<p>用法&gt;&gt; inurl:xxx<br />
这个指令是让搜索引擎搜索域名链接中，包含有关键词的链接页面<br />
下面给出两个例子：</p>
<blockquote>
<p>inurl:admin<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/MARXCBR/2019-3-31/%E6%8C%87%E5%8C%97%E7%B3%BB%E5%88%97%EF%BC%9A/1554033597727.png" alt="MarxCBR的小屋" /></p>
</blockquote>
<h3 id="用空格隔开关键字"><a class="markdownIt-Anchor" href="#用空格隔开关键字"></a> 用空格隔开关键字</h3>
<p>这个也是一个技巧，但是展示出来对比度不高就不展示区别了。</p>
<h3 id="结语"><a class="markdownIt-Anchor" href="#结语"></a> 结语</h3>
<p>常用的那几条搜索指令就是这么多了，但是足以应付我们日常快速搜索资料的需求了。还可以去去广告、推荐什么的。靠着强大的搜索引擎，简单的输入一些关键字，我们可以快速的获取海量的信息，但是对于我们搜索资料的人来说，哪些是有用的，哪些是没用的，哪些是优质的，实在是难以快速定度。但是利用好这些搜索命令，不就可以更加快速准确找到我们想要的资料了嘛。</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>实用技巧</category>
      </categories>
      <tags>
        <tag>效率</tag>
        <tag>搜索引擎</tag>
      </tags>
  </entry>
  <entry>
    <title>破解某设计网站充钱下载图片</title>
    <url>/archives/1fbe553c.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="因为不懂设计想去某设计网站白嫖个公众号图标"><a class="markdownIt-Anchor" href="#因为不懂设计想去某设计网站白嫖个公众号图标"></a> 因为不懂设计，想去某设计网站白嫖个公众号图标</h2>
<p>之前想给公众号换图标的时候，找来找去都没找到一个合适的。<br />
然后自己画图标的话，emmm，对不起，打扰了~~<br />
然后便到网上找，看看有什么好看点，没版权的图标啥的。<br />
但是现在网上的图标设计质量实在是良莠不齐，很多都不敢恭维呀。<br />
然后，还是选择到一家似乎挺好看的图标设计网站</p>
<h2 id="尝试白嫖"><a class="markdownIt-Anchor" href="#尝试白嫖"></a> 尝试白嫖</h2>
<p>然后随意搞搞，就把公众号头像给选出来了。<br />
乍一看，还算满意，然后就准备下载到本地</p>
<p><img src="http://marxcbr.oss-cn-shenzhen.aliyuncs.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1541783292885.png" alt="" /></p>
<p><img src="http://marxcbr.oss-cn-shenzhen.aliyuncs.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1541783292717.png" alt="" /></p>
<h2 id="什么你要我充钱"><a class="markdownIt-Anchor" href="#什么你要我充钱"></a> 什么？你要我充钱？</h2>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1541782958259.png" alt="" /></p>
<p>没有会员，不想找别人点30个赞怎么办。</p>
<p><img src="http://marxcbr.oss-cn-shenzhen.aliyuncs.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1541783292722.png" alt="" /></p>
<h2 id="分析一下页面"><a class="markdownIt-Anchor" href="#分析一下页面"></a> 分析一下页面</h2>
<p>慌？老司机必定不慌的啦。所以，我选择开个F12了解一下这个页面先。<br />
用选择模式，找到这个图片的节点。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1541783292960.png" alt="" /></p>
<p>OK，说好的一目了然呢？<br />
图片不是一个资源下载回来的？<br />
说好的src=链接呢？<br />
说好的按套图出牌呢？</p>
<p><img src="http://marxcbr.oss-cn-shenzhen.aliyuncs.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1541783292722.png" alt="" /></p>
<p>emmm……容我分析片刻<br />
战术目镜启动！<br />
<img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1541782958088.png" alt="" /></p>
<p>分析分析，突然，发现了一些了不得的东西。。。<br />
原来如此，这个图片是SVG矢量图，难怪找不到，难怪没有src</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1541782958188.png?" alt="" /></p>
<p>既然如此，这就好办了。</p>
<h2 id="找到解决方法"><a class="markdownIt-Anchor" href="#找到解决方法"></a> 找到解决方法</h2>
<p>将整个svg标签的东西都弄下来搞成一个svg文件就OK啦</p>
<p>打开我的 sublime text 3神器。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1541783292761.png" alt="" /></p>
<p>然后将内容贴进去。如下所示</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1541782958352.png" alt="" /></p>
<p>接着保存就OK啦。<br />
用Chrome打开看看效果。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1541782958153.png" alt="" /><br />
哈哈哈，完美还原。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1541783292868.png" alt="" /></p>
<h2 id="转换一下格式"><a class="markdownIt-Anchor" href="#转换一下格式"></a> 转换一下格式</h2>
<p>接着只要转成PNG图片就可以随意使用了。美滋滋<br />
百度了一下，发现只有<br />
<a href="https://cloudconvert.com/svg-to-png">https://cloudconvert.com/svg-to-png</a><br />
好用点。<br />
上传上去，然后再转换下载回来就OK。</p>
<p><img src="https://marxcbr.oss-cn-shenzhen.aliyuncs.com/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1541783292759.png" alt="" /></p>
<p>至此，完美解决充钱下载的问题。</p>
<center>要是感觉不错的话，就留个言评论一下下呀，欢迎各位大哥指正</center>]]></content>
      <categories>
        <category>实用技巧</category>
      </categories>
      <tags>
        <tag>破解</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
</search>
